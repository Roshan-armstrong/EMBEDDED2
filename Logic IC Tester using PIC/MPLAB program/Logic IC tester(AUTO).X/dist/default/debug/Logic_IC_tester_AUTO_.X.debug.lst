

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Sep 07 22:55:59 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34     0000                     
    35                           ; Generated 22/03/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     000E                     	;# 
    85     000F                     	;# 
    86     0010                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0014                     	;# 
    91     0015                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     0088                     	;# 
   109     0089                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     0091                     	;# 
   114     0092                     	;# 
   115     0093                     	;# 
   116     0094                     	;# 
   117     0098                     	;# 
   118     0099                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     018C                     	;# 
   128     018D                     	;# 
   129     0000                     	;# 
   130     0001                     	;# 
   131     0002                     	;# 
   132     0003                     	;# 
   133     0004                     	;# 
   134     0005                     	;# 
   135     0006                     	;# 
   136     0007                     	;# 
   137     0008                     	;# 
   138     0009                     	;# 
   139     000A                     	;# 
   140     000B                     	;# 
   141     000C                     	;# 
   142     000D                     	;# 
   143     000E                     	;# 
   144     000E                     	;# 
   145     000F                     	;# 
   146     0010                     	;# 
   147     0011                     	;# 
   148     0012                     	;# 
   149     0013                     	;# 
   150     0014                     	;# 
   151     0015                     	;# 
   152     0015                     	;# 
   153     0016                     	;# 
   154     0017                     	;# 
   155     0018                     	;# 
   156     0019                     	;# 
   157     001A                     	;# 
   158     001B                     	;# 
   159     001B                     	;# 
   160     001C                     	;# 
   161     001D                     	;# 
   162     001E                     	;# 
   163     001F                     	;# 
   164     0081                     	;# 
   165     0085                     	;# 
   166     0086                     	;# 
   167     0087                     	;# 
   168     0088                     	;# 
   169     0089                     	;# 
   170     008C                     	;# 
   171     008D                     	;# 
   172     008E                     	;# 
   173     0091                     	;# 
   174     0092                     	;# 
   175     0093                     	;# 
   176     0094                     	;# 
   177     0098                     	;# 
   178     0099                     	;# 
   179     009C                     	;# 
   180     009D                     	;# 
   181     009E                     	;# 
   182     009F                     	;# 
   183     010C                     	;# 
   184     010D                     	;# 
   185     010E                     	;# 
   186     010F                     	;# 
   187     018C                     	;# 
   188     018D                     	;# 
   189     0000                     	;# 
   190     0001                     	;# 
   191     0002                     	;# 
   192     0003                     	;# 
   193     0004                     	;# 
   194     0005                     	;# 
   195     0006                     	;# 
   196     0007                     	;# 
   197     0008                     	;# 
   198     0009                     	;# 
   199     000A                     	;# 
   200     000B                     	;# 
   201     000C                     	;# 
   202     000D                     	;# 
   203     000E                     	;# 
   204     000E                     	;# 
   205     000F                     	;# 
   206     0010                     	;# 
   207     0011                     	;# 
   208     0012                     	;# 
   209     0013                     	;# 
   210     0014                     	;# 
   211     0015                     	;# 
   212     0015                     	;# 
   213     0016                     	;# 
   214     0017                     	;# 
   215     0018                     	;# 
   216     0019                     	;# 
   217     001A                     	;# 
   218     001B                     	;# 
   219     001B                     	;# 
   220     001C                     	;# 
   221     001D                     	;# 
   222     001E                     	;# 
   223     001F                     	;# 
   224     0081                     	;# 
   225     0085                     	;# 
   226     0086                     	;# 
   227     0087                     	;# 
   228     0088                     	;# 
   229     0089                     	;# 
   230     008C                     	;# 
   231     008D                     	;# 
   232     008E                     	;# 
   233     0091                     	;# 
   234     0092                     	;# 
   235     0093                     	;# 
   236     0094                     	;# 
   237     0098                     	;# 
   238     0099                     	;# 
   239     009C                     	;# 
   240     009D                     	;# 
   241     009E                     	;# 
   242     009F                     	;# 
   243     010C                     	;# 
   244     010D                     	;# 
   245     010E                     	;# 
   246     010F                     	;# 
   247     018C                     	;# 
   248     018D                     	;# 
   249     0000                     	;# 
   250     0001                     	;# 
   251     0002                     	;# 
   252     0003                     	;# 
   253     0004                     	;# 
   254     0005                     	;# 
   255     0006                     	;# 
   256     0007                     	;# 
   257     0008                     	;# 
   258     0009                     	;# 
   259     000A                     	;# 
   260     000B                     	;# 
   261     000C                     	;# 
   262     000D                     	;# 
   263     000E                     	;# 
   264     000E                     	;# 
   265     000F                     	;# 
   266     0010                     	;# 
   267     0011                     	;# 
   268     0012                     	;# 
   269     0013                     	;# 
   270     0014                     	;# 
   271     0015                     	;# 
   272     0015                     	;# 
   273     0016                     	;# 
   274     0017                     	;# 
   275     0018                     	;# 
   276     0019                     	;# 
   277     001A                     	;# 
   278     001B                     	;# 
   279     001B                     	;# 
   280     001C                     	;# 
   281     001D                     	;# 
   282     001E                     	;# 
   283     001F                     	;# 
   284     0081                     	;# 
   285     0085                     	;# 
   286     0086                     	;# 
   287     0087                     	;# 
   288     0088                     	;# 
   289     0089                     	;# 
   290     008C                     	;# 
   291     008D                     	;# 
   292     008E                     	;# 
   293     0091                     	;# 
   294     0092                     	;# 
   295     0093                     	;# 
   296     0094                     	;# 
   297     0098                     	;# 
   298     0099                     	;# 
   299     009C                     	;# 
   300     009D                     	;# 
   301     009E                     	;# 
   302     009F                     	;# 
   303     010C                     	;# 
   304     010D                     	;# 
   305     010E                     	;# 
   306     010F                     	;# 
   307     018C                     	;# 
   308     018D                     	;# 
   309                           
   310                           	psect	idataBANK0
   311     0E03                     __pidataBANK0:
   312                           
   313                           ;initializer for _gate
   314     0E03  3401               	retlw	1
   315     0E04  3400               	retlw	0
   316     0E05  3401               	retlw	1
   317     0E06  3400               	retlw	0
   318     0E07  3401               	retlw	1
   319     0E08  3400               	retlw	0
   320     0E09  3401               	retlw	1
   321     0E0A  3400               	retlw	0
   322     0E0B  3401               	retlw	1
   323     0E0C  3400               	retlw	0
   324     0E0D  3401               	retlw	1
   325     0E0E  3400               	retlw	0
   326                           
   327                           ;initializer for _n
   328     0E0F  3405               	retlw	5
   329     0E10  3400               	retlw	0
   330                           
   331                           	psect	strings
   332     0003                     __pstrings:
   333     0003                     stringtab:
   334     0003                     __stringtab:
   335                           
   336                           ;	String table - string pointers are 1 byte each
   337     0003  1BFF               	btfsc	btemp+1,7
   338     0004  280D               	ljmp	stringcode
   339     0005  1383               	bcf	3,7
   340     0006  187F               	btfsc	btemp+1,0
   341     0007  1783               	bsf	3,7
   342     0008  0800               	movf	0,w
   343     0009  0A84               	incf	4,f
   344     000A  1903               	skipnz
   345     000B  0AFF               	incf	btemp+1,f
   346     000C  0008               	return
   347     000D                     stringcode:
   348     000D                     stringdir:
   349     000D  3000               	movlw	high stringdir
   350     000E  008A               	movwf	10
   351     000F  0804               	movf	4,w
   352     0010  0A84               	incf	4,f
   353     0011  0782               	addwf	2,f
   354     0012                     __stringbase:
   355     0012  3400               	retlw	0
   356     0013                     __end_of__stringtab:
   357     0013                     _truth:
   358     0013  3466               	retlw	102
   359     0014  342B               	retlw	43
   360     0015  34F8               	retlw	248
   361     0016  342A               	retlw	42
   362     0017  346E               	retlw	110
   363     0018  3400               	retlw	0
   364     0019  3411               	retlw	17
   365     001A  3427               	retlw	39
   366     001B  347F               	retlw	127
   367     001C  3427               	retlw	39
   368     001D  347E               	retlw	126
   369     001E  3427               	retlw	39
   370     001F                     __end_of_truth:
   371     001F                     _dpowers:
   372     001F  3401               	retlw	1
   373     0020  3400               	retlw	0
   374     0021  340A               	retlw	10
   375     0022  3400               	retlw	0
   376     0023  3464               	retlw	100
   377     0024  3400               	retlw	0
   378     0025  34E8               	retlw	232
   379     0026  3403               	retlw	3
   380     0027  3410               	retlw	16
   381     0028  3427               	retlw	39
   382     0029                     __end_of_dpowers:
   383     0029                     _name:
   384     0029  3437               	retlw	55
   385     002A  3434               	retlw	52
   386     002B  3430               	retlw	48
   387     002C  3430               	retlw	48
   388     002D  3400               	retlw	0
   389     002E  3437               	retlw	55
   390     002F  3434               	retlw	52
   391     0030  3430               	retlw	48
   392     0031  3432               	retlw	50
   393     0032  3400               	retlw	0
   394     0033  3437               	retlw	55
   395     0034  3434               	retlw	52
   396     0035  3430               	retlw	48
   397     0036  3434               	retlw	52
   398     0037  3400               	retlw	0
   399     0038  3437               	retlw	55
   400     0039  3434               	retlw	52
   401     003A  3430               	retlw	48
   402     003B  3438               	retlw	56
   403     003C  3400               	retlw	0
   404     003D  3437               	retlw	55
   405     003E  3434               	retlw	52
   406     003F  3433               	retlw	51
   407     0040  3432               	retlw	50
   408     0041  3400               	retlw	0
   409     0042  3437               	retlw	55
   410     0043  3434               	retlw	52
   411     0044  3438               	retlw	56
   412     0045  3436               	retlw	54
   413     0046  3400               	retlw	0
   414     0047  3400               	retlw	0
   415     0048  3400               	retlw	0
   416     0049  3400               	retlw	0
   417     004A  3400               	retlw	0
   418     004B  3400               	retlw	0
   419     004C                     __end_of_name:
   420     001F                     _ADCON0	set	31
   421     002B                     _RA3	set	43
   422     002A                     _RA2	set	42
   423     0029                     _RA1	set	41
   424     0028                     _RA0	set	40
   425     003F                     _RC7	set	63
   426     003E                     _RC6	set	62
   427     003D                     _RC5	set	61
   428     003C                     _RC4	set	60
   429     003B                     _RC3	set	59
   430     003A                     _RC2	set	58
   431     0044                     _RD4	set	68
   432     0041                     _RD1	set	65
   433     0035                     _RB5	set	53
   434     0032                     _RB2	set	50
   435     0046                     _RD6	set	70
   436     0042                     _RD2	set	66
   437     0034                     _RB4	set	52
   438     0031                     _RB1	set	49
   439     0045                     _RD5	set	69
   440     0043                     _RD3	set	67
   441     0033                     _RB3	set	51
   442     0030                     _RB0	set	48
   443     009F                     _ADCON1	set	159
   444     0087                     _TRISC	set	135
   445     042B                     _TRISA3	set	1067
   446     042A                     _TRISA2	set	1066
   447     0429                     _TRISA1	set	1065
   448     0428                     _TRISA0	set	1064
   449     043F                     _TRISC7	set	1087
   450     043E                     _TRISC6	set	1086
   451     0444                     _TRISD4	set	1092
   452     0441                     _TRISD1	set	1089
   453     0435                     _TRISB5	set	1077
   454     0432                     _TRISB2	set	1074
   455     0446                     _TRISD6	set	1094
   456     0445                     _TRISD5	set	1093
   457     0442                     _TRISD2	set	1090
   458     0443                     _TRISD3	set	1091
   459     0434                     _TRISB4	set	1076
   460     0433                     _TRISB3	set	1075
   461     0431                     _TRISB1	set	1073
   462     0430                     _TRISB0	set	1072
   463     004C                     STR_2:
   464     004C  344E               	retlw	78	;'N'
   465     004D  346F               	retlw	111	;'o'
   466     004E  3474               	retlw	116	;'t'
   467     004F  3420               	retlw	32	;' '
   468     0050  3444               	retlw	68	;'D'
   469     0051  3474               	retlw	116	;'t'
   470     0052  3463               	retlw	99	;'c'
   471     0053  3420               	retlw	32	;' '
   472     0054  346F               	retlw	111	;'o'
   473     0055  3472               	retlw	114	;'r'
   474     0056  3420               	retlw	32	;' '
   475     0057  3442               	retlw	66	;'B'
   476     0058  3461               	retlw	97	;'a'
   477     0059  3464               	retlw	100	;'d'
   478     005A  3400               	retlw	0
   479     005B                     STR_4:
   480     005B  3420               	retlw	32	;' '
   481     005C  3447               	retlw	71	;'G'
   482     005D  3441               	retlw	65	;'A'
   483     005E  3454               	retlw	84	;'T'
   484     005F  3445               	retlw	69	;'E'
   485     0060  3420               	retlw	32	;' '
   486     0061  3447               	retlw	71	;'G'
   487     0062  344F               	retlw	79	;'O'
   488     0063  344F               	retlw	79	;'O'
   489     0064  3444               	retlw	68	;'D'
   490     0065  3400               	retlw	0
   491     0066                     STR_6:
   492     0066  3449               	retlw	73	;'I'
   493     0067  3443               	retlw	67	;'C'
   494     0068  3420               	retlw	32	;' '
   495     0069  3454               	retlw	84	;'T'
   496     006A  3445               	retlw	69	;'E'
   497     006B  3453               	retlw	83	;'S'
   498     006C  3454               	retlw	84	;'T'
   499     006D  3445               	retlw	69	;'E'
   500     006E  3452               	retlw	82	;'R'
   501     006F  3400               	retlw	0
   502     0070                     STR_5:
   503     0070  3449               	retlw	73	;'I'
   504     0071  3443               	retlw	67	;'C'
   505     0072  3420               	retlw	32	;' '
   506     0073  3449               	retlw	73	;'I'
   507     0074  3453               	retlw	83	;'S'
   508     0075  3420               	retlw	32	;' '
   509     0076  3442               	retlw	66	;'B'
   510     0077  3441               	retlw	65	;'A'
   511     0078  3444               	retlw	68	;'D'
   512     0079  3400               	retlw	0
   513     007A                     STR_7:
   514     007A  3441               	retlw	65	;'A'
   515     007B  3475               	retlw	117	;'u'
   516     007C  3474               	retlw	116	;'t'
   517     007D  346F               	retlw	111	;'o'
   518     007E  342E               	retlw	46	;'.'
   519     007F  342E               	retlw	46	;'.'
   520     0080  342E               	retlw	46	;'.'
   521     0081  3400               	retlw	0
   522     0082                     STR_1:
   523     0082  3449               	retlw	73	;'I'
   524     0083  3443               	retlw	67	;'C'
   525     0084  3420               	retlw	32	;' '
   526     0085  3420               	retlw	32	;' '
   527     0086  3400               	retlw	0
   528     0087                     STR_3:
   529     0087  3425               	retlw	37	;'%'
   530     0088  3464               	retlw	100	;'d'
   531     0089  3400               	retlw	0
   532                           
   533                           	psect	cinit
   534     07E8                     start_initialization:	
   535                           ; #config settings
   536                           
   537     07E8                     __initialization:
   538                           
   539                           ; Initialize objects allocated to BANK0
   540     07E8  1383               	bcf	3,7	;select IRP bank0
   541     07E9  3053               	movlw	low (__pdataBANK0+14)
   542     07EA  00FD               	movwf	btemp+-1
   543     07EB  300E               	movlw	high __pidataBANK0
   544     07EC  00FE               	movwf	btemp
   545     07ED  3003               	movlw	low __pidataBANK0
   546     07EE  00FF               	movwf	btemp+1
   547     07EF  3045               	movlw	low __pdataBANK0
   548     07F0  0084               	movwf	4
   549     07F1  120A  158A  2615  120A  118A  	fcall	init_ram0
   550                           
   551                           ; Clear objects allocated to BANK0
   552     07F6  01D3               	clrf	__pbssBANK0& (0+127)
   553     07F7  01D4               	clrf	(__pbssBANK0+1)& (0+127)
   554     07F8  01D5               	clrf	(__pbssBANK0+2)& (0+127)
   555     07F9  01D6               	clrf	(__pbssBANK0+3)& (0+127)
   556     07FA  01D7               	clrf	(__pbssBANK0+4)& (0+127)
   557     07FB  01D8               	clrf	(__pbssBANK0+5)& (0+127)
   558     07FC                     end_of_initialization:	
   559                           ;End of C runtime variable initialization code
   560                           
   561     07FC                     __end_of__initialization:
   562     07FC  0183               	clrf	3
   563     07FD  120A  118A  2AD2   	ljmp	_main	;jump to C main() function
   564                           
   565                           	psect	bssBANK0
   566     0053                     __pbssBANK0:
   567     0053                     _k:
   568     0053                     	ds	2
   569     0055                     _j:
   570     0055                     	ds	2
   571     0057                     _i:
   572     0057                     	ds	2
   573                           
   574                           	psect	dataBANK0
   575     0045                     __pdataBANK0:
   576     0045                     _gate:
   577     0045                     	ds	12
   578     0051                     _n:
   579     0051                     	ds	2
   580                           
   581                           	psect	inittext
   582     0E11                     init_fetch0:	
   583                           ;	Called with low address in FSR and high address in W
   584                           
   585     0E11  087E               	movf	btemp,w
   586     0E12  008A               	movwf	10
   587     0E13  087F               	movf	btemp+1,w
   588     0E14  0082               	movwf	2
   589     0E15                     init_ram0:	
   590                           ;Called with:
   591                           ;	high address of idata address in btemp 
   592                           ;	low address of idata address in btemp+1 
   593                           ;	low address of data in FSR
   594                           ;	high address + 1 of data in btemp-1
   595                           
   596     0E15  120A  158A  2611  120A  158A  	fcall	init_fetch0
   597     0E1A  0080               	movwf	0
   598     0E1B  0A84               	incf	4,f
   599     0E1C  0804               	movf	4,w
   600     0E1D  067D               	xorwf	btemp+-1,w
   601     0E1E  1903               	btfsc	3,2
   602     0E1F  3400               	retlw	0
   603     0E20  0AFF               	incf	btemp+1,f
   604     0E21  1903               	btfsc	3,2
   605     0E22  0AFE               	incf	btemp,f
   606     0E23  2E15               	goto	init_ram0
   607                           
   608                           	psect	cstackCOMMON
   609     0070                     __pcstackCOMMON:
   610     0070                     ?_LCD_Clear:
   611     0070                     ?_Mode_4:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0070                     ?_gate_1:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0070                     ??_gate_1:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     ?_Mode_6:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0070                     ?_LCD_Write_Char:	
   624                           ; 1 bytes @ 0x0
   625                           
   626     0070                     ?_Write_IC:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0070                     ?_Auto:	
   630                           ; 1 bytes @ 0x0
   631                           
   632     0070                     ?_LCD_DATA:	
   633                           ; 1 bytes @ 0x0
   634                           
   635     0070                     ??_LCD_DATA:	
   636                           ; 1 bytes @ 0x0
   637                           
   638     0070                     ?_LCD_CMD:	
   639                           ; 1 bytes @ 0x0
   640                           
   641     0070                     ?_LCD_Init:	
   642                           ; 1 bytes @ 0x0
   643                           
   644     0070                     ?_main:	
   645                           ; 1 bytes @ 0x0
   646                           
   647     0070                     ?___bmul:	
   648                           ; 1 bytes @ 0x0
   649                           
   650     0070                     ?___wmul:	
   651                           ; 1 bytes @ 0x0
   652                           
   653     0070                     ?___lwdiv:	
   654                           ; 2 bytes @ 0x0
   655                           
   656     0070                     LCD_DATA@Data:	
   657                           ; 2 bytes @ 0x0
   658                           
   659     0070                     ___bmul@multiplicand:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0070                     ___wmul@multiplier:	
   663                           ; 1 bytes @ 0x0
   664                           
   665     0070                     ___lwdiv@divisor:	
   666                           ; 2 bytes @ 0x0
   667                           
   668                           
   669                           ; 2 bytes @ 0x0
   670     0070                     	ds	1
   671     0071                     ??_LCD_Write_Char:
   672     0071                     ??_LCD_CMD:	
   673                           ; 1 bytes @ 0x1
   674                           
   675     0071                     ??___bmul:	
   676                           ; 1 bytes @ 0x1
   677                           
   678     0071                     ___bmul@product:	
   679                           ; 1 bytes @ 0x1
   680                           
   681                           
   682                           ; 1 bytes @ 0x1
   683     0071                     	ds	1
   684     0072                     ___bmul@multiplier:
   685     0072                     ___wmul@multiplicand:	
   686                           ; 1 bytes @ 0x2
   687                           
   688     0072                     ___lwdiv@dividend:	
   689                           ; 2 bytes @ 0x2
   690                           
   691                           
   692                           ; 2 bytes @ 0x2
   693     0072                     	ds	1
   694     0073                     LCD_CMD@CMD:
   695     0073                     LCD_Write_Char@Low4:	
   696                           ; 1 bytes @ 0x3
   697                           
   698                           
   699                           ; 1 bytes @ 0x3
   700     0073                     	ds	1
   701     0074                     ??_LCD_Clear:
   702     0074                     ?_LCD_Set_Cursor:	
   703                           ; 1 bytes @ 0x4
   704                           
   705     0074                     ??_LCD_Init:	
   706                           ; 1 bytes @ 0x4
   707                           
   708     0074                     ??___wmul:	
   709                           ; 1 bytes @ 0x4
   710                           
   711     0074                     ??___lwdiv:	
   712                           ; 1 bytes @ 0x4
   713                           
   714     0074                     LCD_Set_Cursor@c:	
   715                           ; 1 bytes @ 0x4
   716                           
   717     0074                     LCD_Write_Char@High4:	
   718                           ; 1 bytes @ 0x4
   719                           
   720     0074                     ___wmul@product:	
   721                           ; 1 bytes @ 0x4
   722                           
   723     0074                     ___lwdiv@quotient:	
   724                           ; 2 bytes @ 0x4
   725                           
   726                           
   727                           ; 2 bytes @ 0x4
   728     0074                     	ds	1
   729     0075                     ??_LCD_Set_Cursor:
   730     0075                     LCD_Write_Char@Data:	
   731                           ; 1 bytes @ 0x5
   732                           
   733                           
   734                           ; 1 bytes @ 0x5
   735     0075                     	ds	1
   736     0076                     ?_LCD_Write_String:
   737     0076                     ??_Mode_4:	
   738                           ; 1 bytes @ 0x6
   739                           
   740     0076                     ??_Mode_6:	
   741                           ; 1 bytes @ 0x6
   742                           
   743     0076                     LCD_Set_Cursor@r:	
   744                           ; 1 bytes @ 0x6
   745                           
   746     0076                     ___lwdiv@counter:	
   747                           ; 1 bytes @ 0x6
   748                           
   749     0076                     LCD_Write_String@str:	
   750                           ; 1 bytes @ 0x6
   751                           
   752                           
   753                           ; 2 bytes @ 0x6
   754     0076                     	ds	1
   755     0077                     ?___lwmod:
   756     0077                     LCD_Set_Cursor@Low4:	
   757                           ; 2 bytes @ 0x7
   758                           
   759     0077                     ___lwmod@divisor:	
   760                           ; 1 bytes @ 0x7
   761                           
   762                           
   763                           ; 2 bytes @ 0x7
   764     0077                     	ds	1
   765     0078                     ??_LCD_Write_String:
   766     0078                     LCD_Set_Cursor@High4:	
   767                           ; 1 bytes @ 0x8
   768                           
   769                           
   770                           ; 1 bytes @ 0x8
   771     0078                     	ds	1
   772     0079                     LCD_Set_Cursor@Temp:
   773     0079                     ___lwmod@dividend:	
   774                           ; 1 bytes @ 0x9
   775                           
   776                           
   777                           ; 2 bytes @ 0x9
   778     0079                     	ds	2
   779     007B                     ??___lwmod:
   780     007B                     ___lwmod@counter:	
   781                           ; 1 bytes @ 0xB
   782                           
   783     007B                     LCD_Write_String@i:	
   784                           ; 1 bytes @ 0xB
   785                           
   786                           
   787                           ; 2 bytes @ 0xB
   788     007B                     	ds	2
   789     007D                     ??_Write_IC:
   790     007D                     ??_Test:	
   791                           ; 1 bytes @ 0xD
   792                           
   793                           
   794                           	psect	cstackBANK0
   795     0020                     __pcstackBANK0:	
   796                           ; 1 bytes @ 0xD
   797                           
   798     0020                     ?_sprintf:
   799     0020                     sprintf@f:	
   800                           ; 2 bytes @ 0x0
   801                           
   802                           
   803                           ; 1 bytes @ 0x0
   804     0020                     	ds	3
   805     0023                     ??_sprintf:
   806                           
   807                           ; 1 bytes @ 0x3
   808     0023                     	ds	3
   809     0026                     sprintf@ap:
   810                           
   811                           ; 1 bytes @ 0x6
   812     0026                     	ds	1
   813     0027                     sprintf@flag:
   814                           
   815                           ; 1 bytes @ 0x7
   816     0027                     	ds	1
   817     0028                     sprintf@prec:
   818                           
   819                           ; 1 bytes @ 0x8
   820     0028                     	ds	1
   821     0029                     sprintf@val:
   822                           
   823                           ; 2 bytes @ 0x9
   824     0029                     	ds	2
   825     002B                     sprintf@sp:
   826                           
   827                           ; 1 bytes @ 0xB
   828     002B                     	ds	1
   829     002C                     sprintf@c:
   830                           
   831                           ; 1 bytes @ 0xC
   832     002C                     	ds	1
   833     002D                     ?_print:
   834     002D                     print@n:	
   835                           ; 1 bytes @ 0xD
   836                           
   837                           
   838                           ; 2 bytes @ 0xD
   839     002D                     	ds	2
   840     002F                     print@no:
   841                           
   842                           ; 2 bytes @ 0xF
   843     002F                     	ds	2
   844     0031                     ??_print:
   845                           
   846                           ; 1 bytes @ 0x11
   847     0031                     	ds	6
   848     0037                     print@charNum:
   849                           
   850                           ; 3 bytes @ 0x17
   851     0037                     	ds	3
   852     003A                     print@num:
   853                           
   854                           ; 2 bytes @ 0x1A
   855     003A                     	ds	2
   856     003C                     ?_Test:
   857     003C                     ??_Auto:	
   858                           ; 1 bytes @ 0x1C
   859                           
   860     003C                     Test@n:	
   861                           ; 1 bytes @ 0x1C
   862                           
   863                           
   864                           ; 2 bytes @ 0x1C
   865     003C                     	ds	6
   866     0042                     ??_main:
   867                           
   868                           ; 1 bytes @ 0x22
   869     0042                     	ds	3
   870                           
   871                           	psect	maintext
   872     02D2                     __pmaintext:	
   873 ;;
   874 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   875 ;;
   876 ;; *************** function _main *****************
   877 ;; Defined at:
   878 ;;		line 8 in file "../PIC_AUTO.X/main.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : B00/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0
   894 ;;      Temps:          0       3       0       0       0
   895 ;;      Totals:         0       3       0       0       0
   896 ;;Total ram usage:        3 bytes
   897 ;; Hardware stack levels required when called: 5
   898 ;; This function calls:
   899 ;;		_Auto
   900 ;;		_LCD_Clear
   901 ;;		_LCD_Init
   902 ;;		_LCD_Set_Cursor
   903 ;;		_LCD_Write_String
   904 ;;		_Test
   905 ;;		_Write_IC
   906 ;;		___bmul
   907 ;;		___lwmod
   908 ;; This function is called by:
   909 ;;		Startup code after reset
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913     02D2                     _main:	
   914                           ;psect for function _main
   915                           
   916     02D2                     l1885:	
   917                           ;incstack = 0
   918                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   919                           
   920                           
   921                           ;../PIC_AUTO.X/main.c: 9:   TRISA0=1;
   922     02D2  1683               	bsf	3,5	;RP0=1, select bank1
   923     02D3  1303               	bcf	3,6	;RP1=0, select bank1
   924     02D4  1405               	bsf	5,0	;volatile
   925                           
   926                           ;../PIC_AUTO.X/main.c: 10:   TRISA1=1;
   927     02D5  1485               	bsf	5,1	;volatile
   928                           
   929                           ;../PIC_AUTO.X/main.c: 11:   TRISA2=1;
   930     02D6  1505               	bsf	5,2	;volatile
   931                           
   932                           ;../PIC_AUTO.X/main.c: 12:   TRISA3=1;
   933     02D7  1585               	bsf	5,3	;volatile
   934     02D8                     l1887:
   935                           
   936                           ;../PIC_AUTO.X/main.c: 13:   ADCON0=0X00;
   937     02D8  1283               	bcf	3,5	;RP0=0, select bank0
   938     02D9  1303               	bcf	3,6	;RP1=0, select bank0
   939     02DA  019F               	clrf	31	;volatile
   940     02DB                     l1889:
   941                           
   942                           ;../PIC_AUTO.X/main.c: 14:   ADCON1=0X06;
   943     02DB  3006               	movlw	6
   944     02DC  1683               	bsf	3,5	;RP0=1, select bank1
   945     02DD  1303               	bcf	3,6	;RP1=0, select bank1
   946     02DE  009F               	movwf	31	;volatile
   947     02DF                     l1891:
   948                           
   949                           ;../PIC_AUTO.X/main.c: 15:   LCD_Init();
   950     02DF  120A  118A  2103  120A  118A  	fcall	_LCD_Init
   951     02E4                     l1893:
   952                           
   953                           ;../PIC_AUTO.X/main.c: 16:   LCD_Clear();
   954     02E4  120A  158A  25F6  120A  118A  	fcall	_LCD_Clear
   955     02E9                     l1895:
   956                           
   957                           ;../PIC_AUTO.X/main.c: 17:   LCD_Set_Cursor(1, 1);
   958     02E9  01F4               	clrf	LCD_Set_Cursor@c
   959     02EA  0AF4               	incf	LCD_Set_Cursor@c,f
   960     02EB  3001               	movlw	1
   961     02EC  120A  158A  276D  120A  118A  	fcall	_LCD_Set_Cursor
   962     02F1                     l1897:
   963                           
   964                           ;../PIC_AUTO.X/main.c: 18:   LCD_Write_String("IC TESTER");
   965     02F1  3054               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   966     02F2  00F6               	movwf	LCD_Write_String@str
   967     02F3  3080               	movlw	128
   968     02F4  00F7               	movwf	LCD_Write_String@str+1
   969     02F5  120A  158A  26E7  120A  118A  	fcall	_LCD_Write_String
   970     02FA                     l1899:
   971                           
   972                           ;../PIC_AUTO.X/main.c: 20:   {;../PIC_AUTO.X/main.c: 21:       if(RA0==1)
   973     02FA  1283               	bcf	3,5	;RP0=0, select bank0
   974     02FB  1303               	bcf	3,6	;RP1=0, select bank0
   975     02FC  1C05               	btfss	5,0	;volatile
   976     02FD  2AFF               	goto	u1771
   977     02FE  2B00               	goto	u1770
   978     02FF                     u1771:
   979     02FF  2B3E               	goto	l1909
   980     0300                     u1770:
   981     0300                     l1901:
   982                           
   983                           ;../PIC_AUTO.X/main.c: 22:       {;../PIC_AUTO.X/main.c: 23:           n = (n + 1) % 6;
   984     0300  3006               	movlw	6
   985     0301  00F7               	movwf	___lwmod@divisor
   986     0302  3000               	movlw	0
   987     0303  00F8               	movwf	___lwmod@divisor+1
   988     0304  0851               	movf	_n,w
   989     0305  3E01               	addlw	1
   990     0306  00F9               	movwf	___lwmod@dividend
   991     0307  0852               	movf	_n+1,w
   992     0308  1803               	skipnc
   993     0309  3E01               	addlw	1
   994     030A  3E00               	addlw	0
   995     030B  00FA               	movwf	___lwmod@dividend+1
   996     030C  120A  158A  26AD  120A  118A  	fcall	___lwmod
   997     0311  0878               	movf	?___lwmod+1,w
   998     0312  1283               	bcf	3,5	;RP0=0, select bank0
   999     0313  1303               	bcf	3,6	;RP1=0, select bank0
  1000     0314  00D2               	movwf	_n+1
  1001     0315  0877               	movf	?___lwmod,w
  1002     0316  00D1               	movwf	_n
  1003     0317                     l1903:
  1004                           
  1005                           ;../PIC_AUTO.X/main.c: 24:           Write_IC();
  1006     0317  120A  158A  2639  120A  118A  	fcall	_Write_IC
  1007     031C                     l1905:
  1008                           
  1009                           ;../PIC_AUTO.X/main.c: 25:           LCD_Write_String(name[n]);
  1010     031C  3005               	movlw	5
  1011     031D  00F0               	movwf	___bmul@multiplicand
  1012     031E  1283               	bcf	3,5	;RP0=0, select bank0
  1013     031F  1303               	bcf	3,6	;RP1=0, select bank0
  1014     0320  0851               	movf	_n,w
  1015     0321  120A  158A  2624  120A  118A  	fcall	___bmul
  1016     0326  3E17               	addlw	low ((_name-__stringbase)| (0+32768))
  1017     0327  00F6               	movwf	LCD_Write_String@str
  1018     0328  3080               	movlw	128
  1019     0329  00F7               	movwf	LCD_Write_String@str+1
  1020     032A  120A  158A  26E7  120A  118A  	fcall	_LCD_Write_String
  1021     032F                     l1907:
  1022                           
  1023                           ;../PIC_AUTO.X/main.c: 26:           _delay((unsigned long)((500)*(20000000/4000.0)));
  1024     032F  300D               	movlw	13
  1025     0330  1283               	bcf	3,5	;RP0=0, select bank0
  1026     0331  1303               	bcf	3,6	;RP1=0, select bank0
  1027     0332  00C4               	movwf	??_main+2
  1028     0333  30AF               	movlw	175
  1029     0334  00C3               	movwf	??_main+1
  1030     0335  30B5               	movlw	181
  1031     0336  00C2               	movwf	??_main
  1032     0337                     u1817:
  1033     0337  0BC2               	decfsz	??_main,f
  1034     0338  2B37               	goto	u1817
  1035     0339  0BC3               	decfsz	??_main+1,f
  1036     033A  2B37               	goto	u1817
  1037     033B  0BC4               	decfsz	??_main+2,f
  1038     033C  2B37               	goto	u1817
  1039     033D  2B3E               	nop2
  1040     033E                     l1909:
  1041                           
  1042                           ;../PIC_AUTO.X/main.c: 28:       if(RA1==1)
  1043     033E  1283               	bcf	3,5	;RP0=0, select bank0
  1044     033F  1303               	bcf	3,6	;RP1=0, select bank0
  1045     0340  1C85               	btfss	5,1	;volatile
  1046     0341  2B43               	goto	u1781
  1047     0342  2B44               	goto	u1780
  1048     0343                     u1781:
  1049     0343  2B82               	goto	l1919
  1050     0344                     u1780:
  1051     0344                     l1911:
  1052                           
  1053                           ;../PIC_AUTO.X/main.c: 29:       {;../PIC_AUTO.X/main.c: 30:           n = (n -1+6) % 6;
  1054     0344  3006               	movlw	6
  1055     0345  00F7               	movwf	___lwmod@divisor
  1056     0346  3000               	movlw	0
  1057     0347  00F8               	movwf	___lwmod@divisor+1
  1058     0348  0851               	movf	_n,w
  1059     0349  3E05               	addlw	5
  1060     034A  00F9               	movwf	___lwmod@dividend
  1061     034B  0852               	movf	_n+1,w
  1062     034C  1803               	skipnc
  1063     034D  3E01               	addlw	1
  1064     034E  3E00               	addlw	0
  1065     034F  00FA               	movwf	___lwmod@dividend+1
  1066     0350  120A  158A  26AD  120A  118A  	fcall	___lwmod
  1067     0355  0878               	movf	?___lwmod+1,w
  1068     0356  1283               	bcf	3,5	;RP0=0, select bank0
  1069     0357  1303               	bcf	3,6	;RP1=0, select bank0
  1070     0358  00D2               	movwf	_n+1
  1071     0359  0877               	movf	?___lwmod,w
  1072     035A  00D1               	movwf	_n
  1073     035B                     l1913:
  1074                           
  1075                           ;../PIC_AUTO.X/main.c: 31:           Write_IC();
  1076     035B  120A  158A  2639  120A  118A  	fcall	_Write_IC
  1077     0360                     l1915:
  1078                           
  1079                           ;../PIC_AUTO.X/main.c: 32:           LCD_Write_String(name[n]);
  1080     0360  3005               	movlw	5
  1081     0361  00F0               	movwf	___bmul@multiplicand
  1082     0362  1283               	bcf	3,5	;RP0=0, select bank0
  1083     0363  1303               	bcf	3,6	;RP1=0, select bank0
  1084     0364  0851               	movf	_n,w
  1085     0365  120A  158A  2624  120A  118A  	fcall	___bmul
  1086     036A  3E17               	addlw	low ((_name-__stringbase)| (0+32768))
  1087     036B  00F6               	movwf	LCD_Write_String@str
  1088     036C  3080               	movlw	128
  1089     036D  00F7               	movwf	LCD_Write_String@str+1
  1090     036E  120A  158A  26E7  120A  118A  	fcall	_LCD_Write_String
  1091     0373                     l1917:
  1092                           
  1093                           ;../PIC_AUTO.X/main.c: 33:           _delay((unsigned long)((500)*(20000000/4000.0)));
  1094     0373  300D               	movlw	13
  1095     0374  1283               	bcf	3,5	;RP0=0, select bank0
  1096     0375  1303               	bcf	3,6	;RP1=0, select bank0
  1097     0376  00C4               	movwf	??_main+2
  1098     0377  30AF               	movlw	175
  1099     0378  00C3               	movwf	??_main+1
  1100     0379  30B5               	movlw	181
  1101     037A  00C2               	movwf	??_main
  1102     037B                     u1827:
  1103     037B  0BC2               	decfsz	??_main,f
  1104     037C  2B7B               	goto	u1827
  1105     037D  0BC3               	decfsz	??_main+1,f
  1106     037E  2B7B               	goto	u1827
  1107     037F  0BC4               	decfsz	??_main+2,f
  1108     0380  2B7B               	goto	u1827
  1109     0381  2B82               	nop2
  1110     0382                     l1919:
  1111                           
  1112                           ;../PIC_AUTO.X/main.c: 35:       if(RA2==1)
  1113     0382  1283               	bcf	3,5	;RP0=0, select bank0
  1114     0383  1303               	bcf	3,6	;RP1=0, select bank0
  1115     0384  1D05               	btfss	5,2	;volatile
  1116     0385  2B87               	goto	u1791
  1117     0386  2B88               	goto	u1790
  1118     0387                     u1791:
  1119     0387  2BBA               	goto	l1925
  1120     0388                     u1790:
  1121     0388                     l1921:
  1122                           
  1123                           ;../PIC_AUTO.X/main.c: 36:       {;../PIC_AUTO.X/main.c: 37:           Write_IC();
  1124     0388  120A  158A  2639  120A  118A  	fcall	_Write_IC
  1125                           
  1126                           ;../PIC_AUTO.X/main.c: 38:           LCD_Write_String(name[n]);
  1127     038D  3005               	movlw	5
  1128     038E  00F0               	movwf	___bmul@multiplicand
  1129     038F  1283               	bcf	3,5	;RP0=0, select bank0
  1130     0390  1303               	bcf	3,6	;RP1=0, select bank0
  1131     0391  0851               	movf	_n,w
  1132     0392  120A  158A  2624  120A  118A  	fcall	___bmul
  1133     0397  3E17               	addlw	low ((_name-__stringbase)| (0+32768))
  1134     0398  00F6               	movwf	LCD_Write_String@str
  1135     0399  3080               	movlw	128
  1136     039A  00F7               	movwf	LCD_Write_String@str+1
  1137     039B  120A  158A  26E7  120A  118A  	fcall	_LCD_Write_String
  1138                           
  1139                           ;../PIC_AUTO.X/main.c: 39:           Test(n);
  1140     03A0  1283               	bcf	3,5	;RP0=0, select bank0
  1141     03A1  1303               	bcf	3,6	;RP1=0, select bank0
  1142     03A2  0852               	movf	_n+1,w
  1143     03A3  00BD               	movwf	Test@n+1
  1144     03A4  0851               	movf	_n,w
  1145     03A5  00BC               	movwf	Test@n
  1146     03A6  120A  158A  27B2  120A  118A  	fcall	_Test
  1147     03AB                     l1923:
  1148                           
  1149                           ;../PIC_AUTO.X/main.c: 40:           _delay((unsigned long)((500)*(20000000/4000.0)));
  1150     03AB  300D               	movlw	13
  1151     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1152     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1153     03AE  00C4               	movwf	??_main+2
  1154     03AF  30AF               	movlw	175
  1155     03B0  00C3               	movwf	??_main+1
  1156     03B1  30B5               	movlw	181
  1157     03B2  00C2               	movwf	??_main
  1158     03B3                     u1837:
  1159     03B3  0BC2               	decfsz	??_main,f
  1160     03B4  2BB3               	goto	u1837
  1161     03B5  0BC3               	decfsz	??_main+1,f
  1162     03B6  2BB3               	goto	u1837
  1163     03B7  0BC4               	decfsz	??_main+2,f
  1164     03B8  2BB3               	goto	u1837
  1165     03B9  2BBA               	nop2
  1166     03BA                     l1925:
  1167                           
  1168                           ;../PIC_AUTO.X/main.c: 42:       if(RA3==1)
  1169     03BA  1283               	bcf	3,5	;RP0=0, select bank0
  1170     03BB  1303               	bcf	3,6	;RP1=0, select bank0
  1171     03BC  1D85               	btfss	5,3	;volatile
  1172     03BD  2BBF               	goto	u1801
  1173     03BE  2BC0               	goto	u1800
  1174     03BF                     u1801:
  1175     03BF  2AFA               	goto	l1899
  1176     03C0                     u1800:
  1177     03C0                     l1927:
  1178                           
  1179                           ;../PIC_AUTO.X/main.c: 43:       {;../PIC_AUTO.X/main.c: 44:            Write_IC();
  1180     03C0  120A  158A  2639  120A  118A  	fcall	_Write_IC
  1181                           
  1182                           ;../PIC_AUTO.X/main.c: 45:           LCD_Write_String("Auto...");
  1183     03C5  3068               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1184     03C6  00F6               	movwf	LCD_Write_String@str
  1185     03C7  3080               	movlw	128
  1186     03C8  00F7               	movwf	LCD_Write_String@str+1
  1187     03C9  120A  158A  26E7  120A  118A  	fcall	_LCD_Write_String
  1188                           
  1189                           ;../PIC_AUTO.X/main.c: 46:           Auto();
  1190     03CE  120A  118A  23E6  120A  118A  	fcall	_Auto
  1191     03D3                     l1929:
  1192                           
  1193                           ;../PIC_AUTO.X/main.c: 47:           _delay((unsigned long)((500)*(20000000/4000.0)));
  1194     03D3  300D               	movlw	13
  1195     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1196     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1197     03D6  00C4               	movwf	??_main+2
  1198     03D7  30AF               	movlw	175
  1199     03D8  00C3               	movwf	??_main+1
  1200     03D9  30B5               	movlw	181
  1201     03DA  00C2               	movwf	??_main
  1202     03DB                     u1847:
  1203     03DB  0BC2               	decfsz	??_main,f
  1204     03DC  2BDB               	goto	u1847
  1205     03DD  0BC3               	decfsz	??_main+1,f
  1206     03DE  2BDB               	goto	u1847
  1207     03DF  0BC4               	decfsz	??_main+2,f
  1208     03E0  2BDB               	goto	u1847
  1209     03E1  2BE2               	nop2
  1210     03E2  2AFA               	goto	l1899
  1211     03E3  120A  118A  2800   	ljmp	start
  1212     03E6                     __end_of_main:
  1213                           
  1214                           	psect	text1
  1215     0FB2                     __ptext1:	
  1216 ;; *************** function _Test *****************
  1217 ;; Defined at:
  1218 ;;		line 19 in file "../PIC_AUTO.X/function.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  n               2   28[BANK0 ] unsigned int 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1232 ;;      Params:         0       2       0       0       0
  1233 ;;      Locals:         0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0
  1235 ;;      Totals:         0       2       0       0       0
  1236 ;;Total ram usage:        2 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 4
  1239 ;; This function calls:
  1240 ;;		_Mode_4
  1241 ;;		_Mode_6
  1242 ;;		_gate_1
  1243 ;;		_print
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249     0FB2                     _Test:	
  1250                           ;psect for function _Test
  1251                           
  1252     0FB2                     l1763:	
  1253                           ;incstack = 0
  1254                           ; Regs used in _Test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1255                           
  1256                           
  1257                           ;../PIC_AUTO.X/function.c: 19: void Test(unsigned int n);../PIC_AUTO.X/function.c: 20: {
      +                          ;../PIC_AUTO.X/function.c: 21:     if(n<=5&&n!=2)
  1258     0FB2  3000               	movlw	0
  1259     0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  1260     0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  1261     0FB5  023D               	subwf	Test@n+1,w
  1262     0FB6  3006               	movlw	6
  1263     0FB7  1903               	skipnz
  1264     0FB8  023C               	subwf	Test@n,w
  1265     0FB9  1803               	skipnc
  1266     0FBA  2FBC               	goto	u1651
  1267     0FBB  2FBD               	goto	u1650
  1268     0FBC                     u1651:
  1269     0FBC  2FDD               	goto	l1773
  1270     0FBD                     u1650:
  1271     0FBD                     l1765:
  1272     0FBD  3002               	movlw	2
  1273     0FBE  063C               	xorwf	Test@n,w
  1274     0FBF  043D               	iorwf	Test@n+1,w
  1275     0FC0  1903               	btfsc	3,2
  1276     0FC1  2FC3               	goto	u1661
  1277     0FC2  2FC4               	goto	u1660
  1278     0FC3                     u1661:
  1279     0FC3  2FDD               	goto	l1773
  1280     0FC4                     u1660:
  1281     0FC4                     l1767:
  1282                           
  1283                           ;../PIC_AUTO.X/function.c: 22:     {;../PIC_AUTO.X/function.c: 23:      Mode_4();
  1284     0FC4  120A  118A  2519  120A  158A  	fcall	_Mode_4
  1285     0FC9                     l1769:
  1286                           
  1287                           ;../PIC_AUTO.X/function.c: 24:      print(n,4);
  1288     0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  1289     0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  1290     0FCB  083D               	movf	Test@n+1,w
  1291     0FCC  00AE               	movwf	print@n+1
  1292     0FCD  083C               	movf	Test@n,w
  1293     0FCE  00AD               	movwf	print@n
  1294     0FCF  3004               	movlw	4
  1295     0FD0  00AF               	movwf	print@no
  1296     0FD1  3000               	movlw	0
  1297     0FD2  00B0               	movwf	print@no+1
  1298     0FD3  120A  118A  216A  120A  158A  	fcall	_print
  1299     0FD8                     l1771:
  1300                           
  1301                           ;../PIC_AUTO.X/function.c: 25:      gate_1();
  1302     0FD8  120A  158A  266A  120A  158A  	fcall	_gate_1
  1303     0FDD                     l1773:
  1304                           
  1305                           ;../PIC_AUTO.X/function.c: 27:     if(n==2)
  1306     0FDD  3002               	movlw	2
  1307     0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  1308     0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  1309     0FE0  063C               	xorwf	Test@n,w
  1310     0FE1  043D               	iorwf	Test@n+1,w
  1311     0FE2  1D03               	btfss	3,2
  1312     0FE3  2FE5               	goto	u1671
  1313     0FE4  2FE6               	goto	u1670
  1314     0FE5                     u1671:
  1315     0FE5  2FFF               	goto	l90
  1316     0FE6                     u1670:
  1317     0FE6                     l1775:
  1318                           
  1319                           ;../PIC_AUTO.X/function.c: 28:     {;../PIC_AUTO.X/function.c: 29:         Mode_6();
  1320     0FE6  120A  118A  266A  120A  158A  	fcall	_Mode_6
  1321     0FEB                     l1777:
  1322                           
  1323                           ;../PIC_AUTO.X/function.c: 30:         print(n,6);
  1324     0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  1325     0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  1326     0FED  083D               	movf	Test@n+1,w
  1327     0FEE  00AE               	movwf	print@n+1
  1328     0FEF  083C               	movf	Test@n,w
  1329     0FF0  00AD               	movwf	print@n
  1330     0FF1  3006               	movlw	6
  1331     0FF2  00AF               	movwf	print@no
  1332     0FF3  3000               	movlw	0
  1333     0FF4  00B0               	movwf	print@no+1
  1334     0FF5  120A  118A  216A  120A  158A  	fcall	_print
  1335     0FFA                     l1779:
  1336                           
  1337                           ;../PIC_AUTO.X/function.c: 31:         gate_1();
  1338     0FFA  120A  158A  266A  120A  158A  	fcall	_gate_1
  1339     0FFF                     l90:
  1340     0FFF  0008               	return
  1341     1000                     __end_of_Test:
  1342                           
  1343                           	psect	text2
  1344     0103                     __ptext2:	
  1345 ;; *************** function _LCD_Init *****************
  1346 ;; Defined at:
  1347 ;;		line 61 in file "../PIC_AUTO.X/lcd.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0, pclath, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1361 ;;      Params:         0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0
  1363 ;;      Temps:          2       0       0       0       0
  1364 ;;      Totals:         2       0       0       0       0
  1365 ;;Total ram usage:        2 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; Hardware stack levels required when called: 2
  1368 ;; This function calls:
  1369 ;;		_LCD_CMD
  1370 ;;		_LCD_DATA
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376     0103                     _LCD_Init:	
  1377                           ;psect for function _LCD_Init
  1378                           
  1379     0103                     l1845:	
  1380                           ;incstack = 0
  1381                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1382                           
  1383                           
  1384                           ;../PIC_AUTO.X/lcd.c: 64:   TRISC = 0x00;
  1385     0103  1683               	bsf	3,5	;RP0=1, select bank1
  1386     0104  1303               	bcf	3,6	;RP1=0, select bank1
  1387     0105  0187               	clrf	7	;volatile
  1388     0106                     l1847:
  1389                           
  1390                           ;../PIC_AUTO.X/lcd.c: 65:   TRISC6 = 0;
  1391     0106  1307               	bcf	7,6	;volatile
  1392     0107                     l1849:
  1393                           
  1394                           ;../PIC_AUTO.X/lcd.c: 66:   TRISC7 = 0;
  1395     0107  1387               	bcf	7,7	;volatile
  1396     0108                     l1851:
  1397                           
  1398                           ;../PIC_AUTO.X/lcd.c: 68:   LCD_DATA(0x00);
  1399     0108  3000               	movlw	0
  1400     0109  120A  158A  268B  120A  118A  	fcall	_LCD_DATA
  1401     010E                     l1853:
  1402                           
  1403                           ;../PIC_AUTO.X/lcd.c: 69:   _delay((unsigned long)((30)*(20000000/4000.0)));
  1404     010E  30C3               	movlw	195
  1405     010F  00F5               	movwf	??_LCD_Init+1
  1406     0110  30CD               	movlw	205
  1407     0111  00F4               	movwf	??_LCD_Init
  1408     0112                     u1857:
  1409     0112  0BF4               	decfsz	??_LCD_Init,f
  1410     0113  2912               	goto	u1857
  1411     0114  0BF5               	decfsz	??_LCD_Init+1,f
  1412     0115  2912               	goto	u1857
  1413     0116                     l1855:
  1414                           
  1415                           ;../PIC_AUTO.X/lcd.c: 70:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  1416     0116  3004               	movlw	4
  1417     0117  00F5               	movwf	??_LCD_Init+1
  1418     0118  303D               	movlw	61
  1419     0119  00F4               	movwf	??_LCD_Init
  1420     011A                     u1867:
  1421     011A  0BF4               	decfsz	??_LCD_Init,f
  1422     011B  291A               	goto	u1867
  1423     011C  0BF5               	decfsz	??_LCD_Init+1,f
  1424     011D  291A               	goto	u1867
  1425     011E  291F               	nop2
  1426     011F                     l1857:
  1427                           
  1428                           ;../PIC_AUTO.X/lcd.c: 71:   LCD_CMD(0x03);
  1429     011F  3003               	movlw	3
  1430     0120  120A  158A  2650  120A  118A  	fcall	_LCD_CMD
  1431     0125                     l1859:
  1432                           
  1433                           ;../PIC_AUTO.X/lcd.c: 72:   _delay((unsigned long)((5)*(20000000/4000.0)));
  1434     0125  3021               	movlw	33
  1435     0126  00F5               	movwf	??_LCD_Init+1
  1436     0127  3076               	movlw	118
  1437     0128  00F4               	movwf	??_LCD_Init
  1438     0129                     u1877:
  1439     0129  0BF4               	decfsz	??_LCD_Init,f
  1440     012A  2929               	goto	u1877
  1441     012B  0BF5               	decfsz	??_LCD_Init+1,f
  1442     012C  2929               	goto	u1877
  1443     012D  0000               	nop
  1444     012E                     l1861:
  1445                           
  1446                           ;../PIC_AUTO.X/lcd.c: 73:   LCD_CMD(0x03);
  1447     012E  3003               	movlw	3
  1448     012F  120A  158A  2650  120A  118A  	fcall	_LCD_CMD
  1449     0134                     l1863:
  1450                           
  1451                           ;../PIC_AUTO.X/lcd.c: 74:   _delay((unsigned long)((150)*(20000000/4000000.0)));
  1452     0134  30F9               	movlw	249
  1453     0135  00F4               	movwf	??_LCD_Init
  1454     0136                     u1887:
  1455     0136  0BF4               	decfsz	??_LCD_Init,f
  1456     0137  2936               	goto	u1887
  1457     0138  2939               	nop2
  1458     0139                     l1865:
  1459                           
  1460                           ;../PIC_AUTO.X/lcd.c: 75:   LCD_CMD(0x03);
  1461     0139  3003               	movlw	3
  1462     013A  120A  158A  2650  120A  118A  	fcall	_LCD_CMD
  1463     013F                     l1867:
  1464                           
  1465                           ;../PIC_AUTO.X/lcd.c: 76:   LCD_CMD(0x02);
  1466     013F  3002               	movlw	2
  1467     0140  120A  158A  2650  120A  118A  	fcall	_LCD_CMD
  1468     0145                     l1869:
  1469                           
  1470                           ;../PIC_AUTO.X/lcd.c: 77:   LCD_CMD(0x02);
  1471     0145  3002               	movlw	2
  1472     0146  120A  158A  2650  120A  118A  	fcall	_LCD_CMD
  1473     014B                     l1871:
  1474                           
  1475                           ;../PIC_AUTO.X/lcd.c: 78:   LCD_CMD(0x08);
  1476     014B  3008               	movlw	8
  1477     014C  120A  158A  2650  120A  118A  	fcall	_LCD_CMD
  1478     0151                     l1873:
  1479                           
  1480                           ;../PIC_AUTO.X/lcd.c: 79:   LCD_CMD(0x00);
  1481     0151  3000               	movlw	0
  1482     0152  120A  158A  2650  120A  118A  	fcall	_LCD_CMD
  1483     0157                     l1875:
  1484                           
  1485                           ;../PIC_AUTO.X/lcd.c: 80:   LCD_CMD(0x0C);
  1486     0157  300C               	movlw	12
  1487     0158  120A  158A  2650  120A  118A  	fcall	_LCD_CMD
  1488     015D                     l1877:
  1489                           
  1490                           ;../PIC_AUTO.X/lcd.c: 81:   LCD_CMD(0x00);
  1491     015D  3000               	movlw	0
  1492     015E  120A  158A  2650  120A  118A  	fcall	_LCD_CMD
  1493     0163                     l1879:
  1494                           
  1495                           ;../PIC_AUTO.X/lcd.c: 82:   LCD_CMD(0x06);
  1496     0163  3006               	movlw	6
  1497     0164  120A  158A  2650  120A  118A  	fcall	_LCD_CMD
  1498     0169                     l176:
  1499     0169  0008               	return
  1500     016A                     __end_of_LCD_Init:
  1501                           
  1502                           	psect	text3
  1503     03E6                     __ptext3:	
  1504 ;; *************** function _Auto *****************
  1505 ;; Defined at:
  1506 ;;		line 34 in file "../PIC_AUTO.X/function.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         0       0       0       0       0
  1521 ;;      Locals:         0       0       0       0       0
  1522 ;;      Temps:          0       6       0       0       0
  1523 ;;      Totals:         0       6       0       0       0
  1524 ;;Total ram usage:        6 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; Hardware stack levels required when called: 4
  1527 ;; This function calls:
  1528 ;;		_LCD_Set_Cursor
  1529 ;;		_LCD_Write_Char
  1530 ;;		_LCD_Write_String
  1531 ;;		_Mode_4
  1532 ;;		_Mode_6
  1533 ;;		_Write_IC
  1534 ;;		___bmul
  1535 ;;		_gate_1
  1536 ;;		_print
  1537 ;; This function is called by:
  1538 ;;		_main
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542     03E6                     _Auto:	
  1543                           ;psect for function _Auto
  1544                           
  1545     03E6                     l1781:	
  1546                           ;incstack = 0
  1547                           ; Regs used in _Auto: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1548                           
  1549                           
  1550                           ;../PIC_AUTO.X/function.c: 36:     gate_1();
  1551     03E6  120A  158A  266A  120A  118A  	fcall	_gate_1
  1552     03EB                     l1783:
  1553                           
  1554                           ;../PIC_AUTO.X/function.c: 37:     Mode_4();
  1555     03EB  120A  118A  2519  120A  118A  	fcall	_Mode_4
  1556     03F0                     l1785:
  1557                           
  1558                           ;../PIC_AUTO.X/function.c: 38:     n=0;
  1559     03F0  1283               	bcf	3,5	;RP0=0, select bank0
  1560     03F1  1303               	bcf	3,6	;RP1=0, select bank0
  1561     03F2  01D1               	clrf	_n
  1562     03F3  01D2               	clrf	_n+1
  1563     03F4                     l1787:
  1564                           
  1565                           ;../PIC_AUTO.X/function.c: 40:     k=0;
  1566     03F4  01D3               	clrf	_k
  1567     03F5  01D4               	clrf	_k+1
  1568     03F6                     l1789:
  1569                           
  1570                           ;../PIC_AUTO.X/function.c: 41:     for(i=0;i<4;i++)
  1571     03F6  01D7               	clrf	_i
  1572     03F7  01D8               	clrf	_i+1
  1573     03F8                     l1791:
  1574     03F8  3000               	movlw	0
  1575     03F9  0258               	subwf	_i+1,w
  1576     03FA  3004               	movlw	4
  1577     03FB  1903               	skipnz
  1578     03FC  0257               	subwf	_i,w
  1579     03FD  1C03               	skipc
  1580     03FE  2C00               	goto	u1681
  1581     03FF  2C01               	goto	u1680
  1582     0400                     u1681:
  1583     0400  2C02               	goto	l1795
  1584     0401                     u1680:
  1585     0401  2C3D               	goto	l1799
  1586     0402                     l1795:
  1587                           
  1588                           ;../PIC_AUTO.X/function.c: 42:     {;../PIC_AUTO.X/function.c: 43:         if(truth[n]==
      +                          gate[i])
  1589     0402  0857               	movf	_i,w
  1590     0403  00BC               	movwf	??_Auto
  1591     0404  073C               	addwf	??_Auto,w
  1592     0405  3E45               	addlw	(low (_gate| 0))& (0+255)
  1593     0406  0084               	movwf	4
  1594     0407  1383               	bcf	3,7	;select IRP bank0
  1595     0408  0800               	movf	0,w
  1596     0409  00BD               	movwf	??_Auto+1
  1597     040A  0A84               	incf	4,f
  1598     040B  0800               	movf	0,w
  1599     040C  00BE               	movwf	??_Auto+2
  1600     040D  0851               	movf	_n,w
  1601     040E  00BF               	movwf	??_Auto+3
  1602     040F  073F               	addwf	??_Auto+3,w
  1603     0410  3E01               	addlw	low ((_truth-__stringbase)| (0+32768))
  1604     0411  0084               	movwf	4
  1605     0412  120A  118A  200D  120A  118A  	fcall	stringdir
  1606     0417  00C0               	movwf	??_Auto+4
  1607     0418  120A  118A  200D  120A  118A  	fcall	stringdir
  1608     041D  00C1               	movwf	??_Auto+5
  1609     041E  083E               	movf	??_Auto+2,w
  1610     041F  0641               	xorwf	??_Auto+5,w
  1611     0420  1D03               	skipz
  1612     0421  2C24               	goto	u1695
  1613     0422  083D               	movf	??_Auto+1,w
  1614     0423  0640               	xorwf	??_Auto+4,w
  1615     0424                     u1695:
  1616     0424  1D03               	skipz
  1617     0425  2C27               	goto	u1691
  1618     0426  2C28               	goto	u1690
  1619     0427                     u1691:
  1620     0427  2C2E               	goto	l96
  1621     0428                     u1690:
  1622     0428                     l1797:
  1623                           
  1624                           ;../PIC_AUTO.X/function.c: 44:         {;../PIC_AUTO.X/function.c: 45:             k++;
  1625     0428  3001               	movlw	1
  1626     0429  07D3               	addwf	_k,f
  1627     042A  1803               	skipnc
  1628     042B  0AD4               	incf	_k+1,f
  1629     042C  3000               	movlw	0
  1630     042D  07D4               	addwf	_k+1,f
  1631     042E                     l96:	
  1632                           ;../PIC_AUTO.X/function.c: 46:         }
  1633                           
  1634                           
  1635                           ;../PIC_AUTO.X/function.c: 47:     }
  1636     042E  3001               	movlw	1
  1637     042F  07D7               	addwf	_i,f
  1638     0430  1803               	skipnc
  1639     0431  0AD8               	incf	_i+1,f
  1640     0432  3000               	movlw	0
  1641     0433  07D8               	addwf	_i+1,f
  1642     0434  3000               	movlw	0
  1643     0435  0258               	subwf	_i+1,w
  1644     0436  3004               	movlw	4
  1645     0437  1903               	skipnz
  1646     0438  0257               	subwf	_i,w
  1647     0439  1C03               	skipc
  1648     043A  2C3C               	goto	u1701
  1649     043B  2C3D               	goto	u1700
  1650     043C                     u1701:
  1651     043C  2C02               	goto	l1795
  1652     043D                     u1700:
  1653     043D                     l1799:
  1654                           
  1655                           ;../PIC_AUTO.X/function.c: 48:     if(k==4)
  1656     043D  3004               	movlw	4
  1657     043E  0653               	xorwf	_k,w
  1658     043F  0454               	iorwf	_k+1,w
  1659     0440  1D03               	btfss	3,2
  1660     0441  2C43               	goto	u1711
  1661     0442  2C44               	goto	u1710
  1662     0443                     u1711:
  1663     0443  2C71               	goto	l1809
  1664     0444                     u1710:
  1665     0444                     l1801:
  1666                           
  1667                           ;../PIC_AUTO.X/function.c: 49:         {;../PIC_AUTO.X/function.c: 50:             Write
      +                          _IC();
  1668     0444  120A  158A  2639  120A  118A  	fcall	_Write_IC
  1669                           
  1670                           ;../PIC_AUTO.X/function.c: 51:             LCD_Write_String(name[n]);
  1671     0449  3005               	movlw	5
  1672     044A  00F0               	movwf	___bmul@multiplicand
  1673     044B  1283               	bcf	3,5	;RP0=0, select bank0
  1674     044C  1303               	bcf	3,6	;RP1=0, select bank0
  1675     044D  0851               	movf	_n,w
  1676     044E  120A  158A  2624  120A  118A  	fcall	___bmul
  1677     0453  3E17               	addlw	low ((_name-__stringbase)| (0+32768))
  1678     0454  00F6               	movwf	LCD_Write_String@str
  1679     0455  3080               	movlw	128
  1680     0456  00F7               	movwf	LCD_Write_String@str+1
  1681     0457  120A  158A  26E7  120A  118A  	fcall	_LCD_Write_String
  1682                           
  1683                           ;../PIC_AUTO.X/function.c: 52:             print(n,4);
  1684     045C  1283               	bcf	3,5	;RP0=0, select bank0
  1685     045D  1303               	bcf	3,6	;RP1=0, select bank0
  1686     045E  0852               	movf	_n+1,w
  1687     045F  00AE               	movwf	print@n+1
  1688     0460  0851               	movf	_n,w
  1689     0461  00AD               	movwf	print@n
  1690     0462  3004               	movlw	4
  1691     0463  00AF               	movwf	print@no
  1692     0464  3000               	movlw	0
  1693     0465  00B0               	movwf	print@no+1
  1694     0466  120A  118A  216A  120A  118A  	fcall	_print
  1695     046B                     l1803:
  1696                           
  1697                           ;../PIC_AUTO.X/function.c: 53:             gate_1();
  1698     046B  120A  158A  266A  120A  118A  	fcall	_gate_1
  1699     0470  2D18               	goto	l98
  1700     0471                     l1809:
  1701     0471  3005               	movlw	5
  1702     0472  0651               	xorwf	_n,w
  1703     0473  0452               	iorwf	_n+1,w
  1704     0474  1D03               	btfss	3,2
  1705     0475  2C77               	goto	u1721
  1706     0476  2C78               	goto	u1720
  1707     0477                     u1721:
  1708     0477  2C79               	goto	l1813
  1709     0478                     u1720:
  1710     0478  2C80               	goto	l1817
  1711     0479                     l1813:
  1712                           
  1713                           ;../PIC_AUTO.X/function.c: 60:     n++;
  1714     0479  3001               	movlw	1
  1715     047A  07D1               	addwf	_n,f
  1716     047B  1803               	skipnc
  1717     047C  0AD2               	incf	_n+1,f
  1718     047D  3000               	movlw	0
  1719     047E  07D2               	addwf	_n+1,f
  1720                           
  1721                           ;../PIC_AUTO.X/function.c: 61:     goto next;
  1722     047F  2BF4               	goto	l1787
  1723     0480                     l1817:
  1724                           
  1725                           ;../PIC_AUTO.X/function.c: 65:     gate_1();
  1726     0480  120A  158A  266A  120A  118A  	fcall	_gate_1
  1727     0485                     l1819:
  1728                           
  1729                           ;../PIC_AUTO.X/function.c: 66:     Mode_6();
  1730     0485  120A  118A  266A  120A  118A  	fcall	_Mode_6
  1731     048A                     l1821:
  1732                           
  1733                           ;../PIC_AUTO.X/function.c: 68:     k=0;
  1734     048A  1283               	bcf	3,5	;RP0=0, select bank0
  1735     048B  1303               	bcf	3,6	;RP1=0, select bank0
  1736     048C  01D3               	clrf	_k
  1737     048D  01D4               	clrf	_k+1
  1738     048E                     l1823:
  1739                           
  1740                           ;../PIC_AUTO.X/function.c: 69:     for(i=0;i<6;i++)
  1741     048E  01D7               	clrf	_i
  1742     048F  01D8               	clrf	_i+1
  1743     0490                     l1825:
  1744     0490  3000               	movlw	0
  1745     0491  0258               	subwf	_i+1,w
  1746     0492  3006               	movlw	6
  1747     0493  1903               	skipnz
  1748     0494  0257               	subwf	_i,w
  1749     0495  1C03               	skipc
  1750     0496  2C98               	goto	u1731
  1751     0497  2C99               	goto	u1730
  1752     0498                     u1731:
  1753     0498  2C9A               	goto	l1829
  1754     0499                     u1730:
  1755     0499  2CD2               	goto	l1833
  1756     049A                     l1829:
  1757                           
  1758                           ;../PIC_AUTO.X/function.c: 70:     {;../PIC_AUTO.X/function.c: 71:         if(truth[2]==
      +                          gate[i])
  1759     049A  0857               	movf	_i,w
  1760     049B  00BC               	movwf	??_Auto
  1761     049C  073C               	addwf	??_Auto,w
  1762     049D  3E45               	addlw	(low (_gate| 0))& (0+255)
  1763     049E  0084               	movwf	4
  1764     049F  1383               	bcf	3,7	;select IRP bank0
  1765     04A0  0800               	movf	0,w
  1766     04A1  00BD               	movwf	??_Auto+1
  1767     04A2  0A84               	incf	4,f
  1768     04A3  0800               	movf	0,w
  1769     04A4  00BE               	movwf	??_Auto+2
  1770     04A5  3005               	movlw	low (((_truth+4)-__stringbase)| (0+32768))
  1771     04A6  0084               	movwf	4
  1772     04A7  120A  118A  200D  120A  118A  	fcall	stringdir
  1773     04AC  00BF               	movwf	??_Auto+3
  1774     04AD  120A  118A  200D  120A  118A  	fcall	stringdir
  1775     04B2  00C0               	movwf	??_Auto+4
  1776     04B3  083E               	movf	??_Auto+2,w
  1777     04B4  0640               	xorwf	??_Auto+4,w
  1778     04B5  1D03               	skipz
  1779     04B6  2CB9               	goto	u1745
  1780     04B7  083D               	movf	??_Auto+1,w
  1781     04B8  063F               	xorwf	??_Auto+3,w
  1782     04B9                     u1745:
  1783     04B9  1D03               	skipz
  1784     04BA  2CBC               	goto	u1741
  1785     04BB  2CBD               	goto	u1740
  1786     04BC                     u1741:
  1787     04BC  2CC3               	goto	l104
  1788     04BD                     u1740:
  1789     04BD                     l1831:
  1790                           
  1791                           ;../PIC_AUTO.X/function.c: 72:         {;../PIC_AUTO.X/function.c: 73:             k++;
  1792     04BD  3001               	movlw	1
  1793     04BE  07D3               	addwf	_k,f
  1794     04BF  1803               	skipnc
  1795     04C0  0AD4               	incf	_k+1,f
  1796     04C1  3000               	movlw	0
  1797     04C2  07D4               	addwf	_k+1,f
  1798     04C3                     l104:	
  1799                           ;../PIC_AUTO.X/function.c: 74:         }
  1800                           
  1801                           
  1802                           ;../PIC_AUTO.X/function.c: 75:     }
  1803     04C3  3001               	movlw	1
  1804     04C4  07D7               	addwf	_i,f
  1805     04C5  1803               	skipnc
  1806     04C6  0AD8               	incf	_i+1,f
  1807     04C7  3000               	movlw	0
  1808     04C8  07D8               	addwf	_i+1,f
  1809     04C9  3000               	movlw	0
  1810     04CA  0258               	subwf	_i+1,w
  1811     04CB  3006               	movlw	6
  1812     04CC  1903               	skipnz
  1813     04CD  0257               	subwf	_i,w
  1814     04CE  1C03               	skipc
  1815     04CF  2CD1               	goto	u1751
  1816     04D0  2CD2               	goto	u1750
  1817     04D1                     u1751:
  1818     04D1  2C9A               	goto	l1829
  1819     04D2                     u1750:
  1820     04D2                     l1833:
  1821                           
  1822                           ;../PIC_AUTO.X/function.c: 76:     if(k==6)
  1823     04D2  3006               	movlw	6
  1824     04D3  0653               	xorwf	_k,w
  1825     04D4  0454               	iorwf	_k+1,w
  1826     04D5  1D03               	btfss	3,2
  1827     04D6  2CD8               	goto	u1761
  1828     04D7  2CD9               	goto	u1760
  1829     04D8                     u1761:
  1830     04D8  2D01               	goto	l1841
  1831     04D9                     u1760:
  1832     04D9                     l1835:
  1833                           
  1834                           ;../PIC_AUTO.X/function.c: 77:     {;../PIC_AUTO.X/function.c: 78:         Write_IC();
  1835     04D9  120A  158A  2639  120A  118A  	fcall	_Write_IC
  1836                           
  1837                           ;../PIC_AUTO.X/function.c: 79:         LCD_Write_String(name[n]);
  1838     04DE  3005               	movlw	5
  1839     04DF  00F0               	movwf	___bmul@multiplicand
  1840     04E0  1283               	bcf	3,5	;RP0=0, select bank0
  1841     04E1  1303               	bcf	3,6	;RP1=0, select bank0
  1842     04E2  0851               	movf	_n,w
  1843     04E3  120A  158A  2624  120A  118A  	fcall	___bmul
  1844     04E8  3E17               	addlw	low ((_name-__stringbase)| (0+32768))
  1845     04E9  00F6               	movwf	LCD_Write_String@str
  1846     04EA  3080               	movlw	128
  1847     04EB  00F7               	movwf	LCD_Write_String@str+1
  1848     04EC  120A  158A  26E7  120A  118A  	fcall	_LCD_Write_String
  1849                           
  1850                           ;../PIC_AUTO.X/function.c: 80:         print(n,6);
  1851     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1852     04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1853     04F3  0852               	movf	_n+1,w
  1854     04F4  00AE               	movwf	print@n+1
  1855     04F5  0851               	movf	_n,w
  1856     04F6  00AD               	movwf	print@n
  1857     04F7  3006               	movlw	6
  1858     04F8  00AF               	movwf	print@no
  1859     04F9  3000               	movlw	0
  1860     04FA  00B0               	movwf	print@no+1
  1861     04FB  120A  118A  216A  120A  118A  	fcall	_print
  1862     0500  2C6B               	goto	l1803
  1863     0501                     l1841:
  1864                           
  1865                           ;../PIC_AUTO.X/function.c: 85:     LCD_Write_Char('.');
  1866     0501  302E               	movlw	46
  1867     0502  120A  118A  20B4  120A  118A  	fcall	_LCD_Write_Char
  1868                           
  1869                           ;../PIC_AUTO.X/function.c: 86:     LCD_Set_Cursor(2,1);
  1870     0507  01F4               	clrf	LCD_Set_Cursor@c
  1871     0508  0AF4               	incf	LCD_Set_Cursor@c,f
  1872     0509  3002               	movlw	2
  1873     050A  120A  158A  276D  120A  118A  	fcall	_LCD_Set_Cursor
  1874     050F                     l1843:
  1875                           
  1876                           ;../PIC_AUTO.X/function.c: 87:     LCD_Write_String("Not Dtc or Bad");
  1877     050F  303A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1878     0510  00F6               	movwf	LCD_Write_String@str
  1879     0511  3080               	movlw	128
  1880     0512  00F7               	movwf	LCD_Write_String@str+1
  1881     0513  120A  158A  26E7  120A  118A  	fcall	_LCD_Write_String
  1882     0518                     l98:
  1883     0518  0008               	return
  1884     0519                     __end_of_Auto:
  1885                           
  1886                           	psect	text4
  1887     016A                     __ptext4:	
  1888 ;; *************** function _print *****************
  1889 ;; Defined at:
  1890 ;;		line 89 in file "../PIC_AUTO.X/function.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  n               2   13[BANK0 ] unsigned int 
  1893 ;;  no              2   15[BANK0 ] unsigned int 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  charNum         3   23[BANK0 ] unsigned char [3]
  1896 ;;  num             2   26[BANK0 ] int 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1906 ;;      Params:         0       4       0       0       0
  1907 ;;      Locals:         0       5       0       0       0
  1908 ;;      Temps:          0       6       0       0       0
  1909 ;;      Totals:         0      15       0       0       0
  1910 ;;Total ram usage:       15 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 3
  1913 ;; This function calls:
  1914 ;;		_LCD_Set_Cursor
  1915 ;;		_LCD_Write_String
  1916 ;;		_sprintf
  1917 ;; This function is called by:
  1918 ;;		_Test
  1919 ;;		_Auto
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923     016A                     _print:	
  1924                           ;psect for function _print
  1925                           
  1926     016A                     l1659:	
  1927                           ;incstack = 0
  1928                           ; Regs used in _print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1929                           
  1930     016A                     l1661:
  1931                           
  1932                           ;../PIC_AUTO.X/function.c: 92:     char charNum[3];;../PIC_AUTO.X/function.c: 93:     LC
      +                          D_Set_Cursor(2,1);
  1933     016A  01F4               	clrf	LCD_Set_Cursor@c
  1934     016B  0AF4               	incf	LCD_Set_Cursor@c,f
  1935     016C  3002               	movlw	2
  1936     016D  120A  158A  276D  120A  118A  	fcall	_LCD_Set_Cursor
  1937     0172                     l1663:
  1938                           
  1939                           ;../PIC_AUTO.X/function.c: 94:     j=0;
  1940     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1941     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1942     0174  01D5               	clrf	_j
  1943     0175  01D6               	clrf	_j+1
  1944     0176                     l1665:
  1945                           
  1946                           ;../PIC_AUTO.X/function.c: 95:     for(i=0;i<no;i++)
  1947     0176  01D7               	clrf	_i
  1948     0177  01D8               	clrf	_i+1
  1949     0178  29CA               	goto	l1679
  1950     0179                     l1667:
  1951                           
  1952                           ;../PIC_AUTO.X/function.c: 96:     {;../PIC_AUTO.X/function.c: 97:         if(truth[n]==
      +                          gate[i])
  1953     0179  0857               	movf	_i,w
  1954     017A  00B1               	movwf	??_print
  1955     017B  0731               	addwf	??_print,w
  1956     017C  3E45               	addlw	(low (_gate| 0))& (0+255)
  1957     017D  0084               	movwf	4
  1958     017E  1383               	bcf	3,7	;select IRP bank0
  1959     017F  0800               	movf	0,w
  1960     0180  00B2               	movwf	??_print+1
  1961     0181  0A84               	incf	4,f
  1962     0182  0800               	movf	0,w
  1963     0183  00B3               	movwf	??_print+2
  1964     0184  082D               	movf	print@n,w
  1965     0185  00B4               	movwf	??_print+3
  1966     0186  0734               	addwf	??_print+3,w
  1967     0187  3E01               	addlw	low ((_truth-__stringbase)| (0+32768))
  1968     0188  0084               	movwf	4
  1969     0189  120A  118A  200D  120A  118A  	fcall	stringdir
  1970     018E  00B5               	movwf	??_print+4
  1971     018F  120A  118A  200D  120A  118A  	fcall	stringdir
  1972     0194  00B6               	movwf	??_print+5
  1973     0195  0833               	movf	??_print+2,w
  1974     0196  0636               	xorwf	??_print+5,w
  1975     0197  1D03               	skipz
  1976     0198  299B               	goto	u1445
  1977     0199  0832               	movf	??_print+1,w
  1978     019A  0635               	xorwf	??_print+4,w
  1979     019B                     u1445:
  1980     019B  1D03               	skipz
  1981     019C  299E               	goto	u1441
  1982     019D  299F               	goto	u1440
  1983     019E                     u1441:
  1984     019E  29C4               	goto	l1677
  1985     019F                     u1440:
  1986     019F                     l1669:
  1987                           
  1988                           ;../PIC_AUTO.X/function.c: 98:         {;../PIC_AUTO.X/function.c: 99:             num=i
      +                          +1;
  1989     019F  0857               	movf	_i,w
  1990     01A0  3E01               	addlw	1
  1991     01A1  00BA               	movwf	print@num
  1992     01A2  0858               	movf	_i+1,w
  1993     01A3  1803               	skipnc
  1994     01A4  3E01               	addlw	1
  1995     01A5  3E00               	addlw	0
  1996     01A6  00BB               	movwf	print@num+1
  1997     01A7                     l1671:
  1998                           
  1999                           ;../PIC_AUTO.X/function.c: 100:             sprintf(charNum, "%d", num);
  2000     01A7  3075               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2001     01A8  00A0               	movwf	sprintf@f
  2002     01A9  083B               	movf	print@num+1,w
  2003     01AA  00A2               	movwf	?_sprintf+2
  2004     01AB  083A               	movf	print@num,w
  2005     01AC  00A1               	movwf	?_sprintf+1
  2006     01AD  3037               	movlw	(low (print@charNum| 0))& (0+255)
  2007     01AE  120A  118A  21F8  120A  118A  	fcall	_sprintf
  2008     01B3                     l1673:
  2009                           
  2010                           ;../PIC_AUTO.X/function.c: 101:             LCD_Write_String(charNum);
  2011     01B3  3037               	movlw	(low (print@charNum| 0))& (0+255)
  2012     01B4  00F6               	movwf	LCD_Write_String@str
  2013     01B5  3000               	movlw	0
  2014     01B6  00F7               	movwf	LCD_Write_String@str+1
  2015     01B7  120A  158A  26E7  120A  118A  	fcall	_LCD_Write_String
  2016     01BC                     l1675:
  2017                           
  2018                           ;../PIC_AUTO.X/function.c: 102:             j++;
  2019     01BC  3001               	movlw	1
  2020     01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2021     01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2022     01BF  07D5               	addwf	_j,f
  2023     01C0  1803               	skipnc
  2024     01C1  0AD6               	incf	_j+1,f
  2025     01C2  3000               	movlw	0
  2026     01C3  07D6               	addwf	_j+1,f
  2027     01C4                     l1677:
  2028                           
  2029                           ;../PIC_AUTO.X/function.c: 104:     }
  2030     01C4  3001               	movlw	1
  2031     01C5  07D7               	addwf	_i,f
  2032     01C6  1803               	skipnc
  2033     01C7  0AD8               	incf	_i+1,f
  2034     01C8  3000               	movlw	0
  2035     01C9  07D8               	addwf	_i+1,f
  2036     01CA                     l1679:
  2037     01CA  0830               	movf	print@no+1,w
  2038     01CB  0258               	subwf	_i+1,w
  2039     01CC  1D03               	skipz
  2040     01CD  29D0               	goto	u1455
  2041     01CE  082F               	movf	print@no,w
  2042     01CF  0257               	subwf	_i,w
  2043     01D0                     u1455:
  2044     01D0  1C03               	skipc
  2045     01D1  29D3               	goto	u1451
  2046     01D2  29D4               	goto	u1450
  2047     01D3                     u1451:
  2048     01D3  2979               	goto	l1667
  2049     01D4                     u1450:
  2050     01D4                     l1681:
  2051                           
  2052                           ;../PIC_AUTO.X/function.c: 105:     if(j>1) LCD_Write_String(" GATE GOOD");
  2053     01D4  3000               	movlw	0
  2054     01D5  0256               	subwf	_j+1,w
  2055     01D6  3002               	movlw	2
  2056     01D7  1903               	skipnz
  2057     01D8  0255               	subwf	_j,w
  2058     01D9  1C03               	skipc
  2059     01DA  29DC               	goto	u1461
  2060     01DB  29DD               	goto	u1460
  2061     01DC                     u1461:
  2062     01DC  29E6               	goto	l1685
  2063     01DD                     u1460:
  2064     01DD                     l1683:
  2065     01DD  3049               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2066     01DE  00F6               	movwf	LCD_Write_String@str
  2067     01DF  3080               	movlw	128
  2068     01E0  00F7               	movwf	LCD_Write_String@str+1
  2069     01E1  120A  158A  26E7  120A  118A  	fcall	_LCD_Write_String
  2070     01E6                     l1685:
  2071                           
  2072                           ;../PIC_AUTO.X/function.c: 106:     if(j==0) LCD_Write_String("IC IS BAD");
  2073     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  2074     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  2075     01E8  0855               	movf	_j,w
  2076     01E9  0456               	iorwf	_j+1,w
  2077     01EA  1D03               	btfss	3,2
  2078     01EB  29ED               	goto	u1471
  2079     01EC  29EE               	goto	u1470
  2080     01ED                     u1471:
  2081     01ED  29F7               	goto	l114
  2082     01EE                     u1470:
  2083     01EE                     l1687:
  2084     01EE  305E               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2085     01EF  00F6               	movwf	LCD_Write_String@str
  2086     01F0  3080               	movlw	128
  2087     01F1  00F7               	movwf	LCD_Write_String@str+1
  2088     01F2  120A  158A  26E7  120A  118A  	fcall	_LCD_Write_String
  2089     01F7                     l114:
  2090     01F7  0008               	return
  2091     01F8                     __end_of_print:
  2092                           
  2093                           	psect	text5
  2094     01F8                     __ptext5:	
  2095 ;; *************** function _sprintf *****************
  2096 ;; Defined at:
  2097 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  sp              1    wreg     PTR unsigned char 
  2100 ;;		 -> print@charNum(3), 
  2101 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2102 ;;		 -> STR_3(3), 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2105 ;;		 -> print@charNum(3), 
  2106 ;;  tmpval          4    0        struct .
  2107 ;;  val             2    9[BANK0 ] unsigned int 
  2108 ;;  cp              2    0        PTR const unsigned char 
  2109 ;;  len             2    0        unsigned int 
  2110 ;;  c               1   12[BANK0 ] unsigned char 
  2111 ;;  prec            1    8[BANK0 ] char 
  2112 ;;  flag            1    7[BANK0 ] unsigned char 
  2113 ;;  ap              1    6[BANK0 ] PTR void [1]
  2114 ;;		 -> ?_sprintf(2), 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  2    0[BANK0 ] int 
  2117 ;; Registers used:
  2118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2124 ;;      Params:         0       3       0       0       0
  2125 ;;      Locals:         0       7       0       0       0
  2126 ;;      Temps:          0       3       0       0       0
  2127 ;;      Totals:         0      13       0       0       0
  2128 ;;Total ram usage:       13 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 1
  2131 ;; This function calls:
  2132 ;;		___lwdiv
  2133 ;;		___lwmod
  2134 ;; This function is called by:
  2135 ;;		_print
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139     01F8                     _sprintf:	
  2140                           ;psect for function _sprintf
  2141                           
  2142                           
  2143                           ;incstack = 0
  2144                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2145                           ;sprintf@sp stored from wreg
  2146     01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2147     01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2148     01FA  00AB               	movwf	sprintf@sp
  2149     01FB                     l1529:
  2150                           
  2151                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2152     01FB  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2153     01FC  00A6               	movwf	sprintf@ap
  2154                           
  2155                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2156     01FD  2ABD               	goto	l1583
  2157     01FE                     l1531:
  2158                           
  2159                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2160     01FE  3025               	movlw	37
  2161     01FF  062C               	xorwf	sprintf@c,w
  2162     0200  1903               	btfsc	3,2
  2163     0201  2A03               	goto	u1161
  2164     0202  2A04               	goto	u1160
  2165     0203                     u1161:
  2166     0203  2A0E               	goto	l1537
  2167     0204                     u1160:
  2168     0204                     l1533:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2171     0204  082B               	movf	sprintf@sp,w
  2172     0205  0084               	movwf	4
  2173     0206  082C               	movf	sprintf@c,w
  2174     0207  1383               	bcf	3,7	;select IRP bank0
  2175     0208  0080               	movwf	0
  2176     0209                     l1535:
  2177     0209  3001               	movlw	1
  2178     020A  00FF               	movwf	btemp+1
  2179     020B  087F               	movf	btemp+1,w
  2180     020C  07AB               	addwf	sprintf@sp,f
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  2183     020D  2ABD               	goto	l1583
  2184     020E                     l1537:
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2187     020E  01A7               	clrf	sprintf@flag
  2188     020F                     l1541:	
  2189                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2190                           
  2191     020F  3001               	movlw	1
  2192     0210  07A0               	addwf	sprintf@f,f
  2193     0211  30FF               	movlw	-1
  2194     0212  0720               	addwf	sprintf@f,w
  2195     0213  0084               	movwf	4
  2196     0214  120A  118A  200D  120A  118A  	fcall	stringdir
  2197     0219  00AC               	movwf	sprintf@c
  2198     021A  00A3               	movwf	??_sprintf
  2199     021B  01A4               	clrf	??_sprintf+1
  2200                           
  2201                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2202                           ; Switch size 1, requested type "simple"
  2203                           ; Number of cases is 1, Range of values is 0 to 0
  2204                           ; switch strategies available:
  2205                           ; Name         Instructions Cycles
  2206                           ; simple_byte            4     3 (average)
  2207                           ; direct_byte           11     8 (fixed)
  2208                           ; jumptable            260     6 (fixed)
  2209                           ;	Chosen strategy is simple_byte
  2210     021C  0824               	movf	??_sprintf+1,w
  2211     021D  3A00               	xorlw	0	; case 0
  2212     021E  1903               	skipnz
  2213     021F  2A21               	goto	l1951
  2214     0220  2ABD               	goto	l1583
  2215     0221                     l1951:
  2216                           
  2217                           ; Switch size 1, requested type "simple"
  2218                           ; Number of cases is 3, Range of values is 0 to 105
  2219                           ; switch strategies available:
  2220                           ; Name         Instructions Cycles
  2221                           ; simple_byte           10     6 (average)
  2222                           ; jumptable            260     6 (fixed)
  2223                           ;	Chosen strategy is simple_byte
  2224     0221  0823               	movf	??_sprintf,w
  2225     0222  3A00               	xorlw	0	; case 0
  2226     0223  1903               	skipnz
  2227     0224  2ACD               	goto	l1585
  2228     0225  3A64               	xorlw	100	; case 100
  2229     0226  1903               	skipnz
  2230     0227  2A2C               	goto	l1543
  2231     0228  3A0D               	xorlw	13	; case 105
  2232     0229  1903               	skipnz
  2233     022A  2A2C               	goto	l1543
  2234     022B  2ABD               	goto	l1583
  2235     022C                     l1543:
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2238     022C  0826               	movf	sprintf@ap,w
  2239     022D  0084               	movwf	4
  2240     022E  1383               	bcf	3,7	;select IRP bank0
  2241     022F  0800               	movf	0,w
  2242     0230  00A9               	movwf	sprintf@val
  2243     0231  0A84               	incf	4,f
  2244     0232  0800               	movf	0,w
  2245     0233  00AA               	movwf	sprintf@val+1
  2246     0234                     l1545:
  2247     0234  3002               	movlw	2
  2248     0235  00FF               	movwf	btemp+1
  2249     0236  087F               	movf	btemp+1,w
  2250     0237  07A6               	addwf	sprintf@ap,f
  2251     0238                     l1547:
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2254     0238  1FAA               	btfss	sprintf@val+1,7
  2255     0239  2A3B               	goto	u1171
  2256     023A  2A3C               	goto	u1170
  2257     023B                     u1171:
  2258     023B  2A45               	goto	l1553
  2259     023C                     u1170:
  2260     023C                     l1549:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2263     023C  3003               	movlw	3
  2264     023D  00FF               	movwf	btemp+1
  2265     023E  087F               	movf	btemp+1,w
  2266     023F  04A7               	iorwf	sprintf@flag,f
  2267     0240                     l1551:
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2270     0240  09A9               	comf	sprintf@val,f
  2271     0241  09AA               	comf	sprintf@val+1,f
  2272     0242  0AA9               	incf	sprintf@val,f
  2273     0243  1903               	skipnz
  2274     0244  0AAA               	incf	sprintf@val+1,f
  2275     0245                     l1553:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2278     0245  01AC               	clrf	sprintf@c
  2279     0246  0AAC               	incf	sprintf@c,f
  2280     0247                     l1559:
  2281                           
  2282                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2283     0247  082C               	movf	sprintf@c,w
  2284     0248  00A3               	movwf	??_sprintf
  2285     0249  0723               	addwf	??_sprintf,w
  2286     024A  3E0D               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2287     024B  0084               	movwf	4
  2288     024C  120A  118A  200D  120A  118A  	fcall	stringdir
  2289     0251  00A4               	movwf	??_sprintf+1
  2290     0252  120A  118A  200D  120A  118A  	fcall	stringdir
  2291     0257  00A5               	movwf	??_sprintf+2
  2292     0258  0825               	movf	??_sprintf+2,w
  2293     0259  022A               	subwf	sprintf@val+1,w
  2294     025A  1D03               	skipz
  2295     025B  2A5E               	goto	u1185
  2296     025C  0824               	movf	??_sprintf+1,w
  2297     025D  0229               	subwf	sprintf@val,w
  2298     025E                     u1185:
  2299     025E  1803               	skipnc
  2300     025F  2A61               	goto	u1181
  2301     0260  2A62               	goto	u1180
  2302     0261                     u1181:
  2303     0261  2A63               	goto	l1563
  2304     0262                     u1180:
  2305     0262  2A6D               	goto	l1567
  2306     0263                     l1563:
  2307     0263  3001               	movlw	1
  2308     0264  00FF               	movwf	btemp+1
  2309     0265  087F               	movf	btemp+1,w
  2310     0266  07AC               	addwf	sprintf@c,f
  2311     0267                     l1565:
  2312     0267  3005               	movlw	5
  2313     0268  062C               	xorwf	sprintf@c,w
  2314     0269  1D03               	btfss	3,2
  2315     026A  2A6C               	goto	u1191
  2316     026B  2A6D               	goto	u1190
  2317     026C                     u1191:
  2318     026C  2A47               	goto	l1559
  2319     026D                     u1190:
  2320     026D                     l1567:
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2323     026D  0827               	movf	sprintf@flag,w
  2324     026E  3903               	andlw	3
  2325     026F  1903               	btfsc	3,2
  2326     0270  2A72               	goto	u1201
  2327     0271  2A73               	goto	u1200
  2328     0272                     u1201:
  2329     0272  2A7C               	goto	l1573
  2330     0273                     u1200:
  2331     0273                     l1569:
  2332                           
  2333                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2334     0273  082B               	movf	sprintf@sp,w
  2335     0274  0084               	movwf	4
  2336     0275  302D               	movlw	45
  2337     0276  1383               	bcf	3,7	;select IRP bank0
  2338     0277  0080               	movwf	0
  2339     0278                     l1571:
  2340     0278  3001               	movlw	1
  2341     0279  00FF               	movwf	btemp+1
  2342     027A  087F               	movf	btemp+1,w
  2343     027B  07AB               	addwf	sprintf@sp,f
  2344     027C                     l1573:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2347     027C  082C               	movf	sprintf@c,w
  2348     027D  00A8               	movwf	sprintf@prec
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2351     027E  2AB4               	goto	l1581
  2352     027F                     l1575:
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2355     027F  300A               	movlw	10
  2356     0280  00F7               	movwf	___lwmod@divisor
  2357     0281  3000               	movlw	0
  2358     0282  00F8               	movwf	___lwmod@divisor+1
  2359     0283  0828               	movf	sprintf@prec,w
  2360     0284  00A3               	movwf	??_sprintf
  2361     0285  0723               	addwf	??_sprintf,w
  2362     0286  3E0D               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2363     0287  0084               	movwf	4
  2364     0288  120A  118A  200D  120A  118A  	fcall	stringdir
  2365     028D  00F0               	movwf	___lwdiv@divisor
  2366     028E  120A  118A  200D  120A  118A  	fcall	stringdir
  2367     0293  00F1               	movwf	___lwdiv@divisor+1
  2368     0294  082A               	movf	sprintf@val+1,w
  2369     0295  00F3               	movwf	___lwdiv@dividend+1
  2370     0296  0829               	movf	sprintf@val,w
  2371     0297  00F2               	movwf	___lwdiv@dividend
  2372     0298  120A  158A  2729  120A  118A  	fcall	___lwdiv
  2373     029D  0871               	movf	?___lwdiv+1,w
  2374     029E  00FA               	movwf	___lwmod@dividend+1
  2375     029F  0870               	movf	?___lwdiv,w
  2376     02A0  00F9               	movwf	___lwmod@dividend
  2377     02A1  120A  158A  26AD  120A  118A  	fcall	___lwmod
  2378     02A6  0877               	movf	?___lwmod,w
  2379     02A7  3E30               	addlw	48
  2380     02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2381     02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2382     02AA  00AC               	movwf	sprintf@c
  2383     02AB                     l1577:
  2384                           
  2385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2386     02AB  082B               	movf	sprintf@sp,w
  2387     02AC  0084               	movwf	4
  2388     02AD  082C               	movf	sprintf@c,w
  2389     02AE  1383               	bcf	3,7	;select IRP bank0
  2390     02AF  0080               	movwf	0
  2391     02B0                     l1579:
  2392     02B0  3001               	movlw	1
  2393     02B1  00FF               	movwf	btemp+1
  2394     02B2  087F               	movf	btemp+1,w
  2395     02B3  07AB               	addwf	sprintf@sp,f
  2396     02B4                     l1581:
  2397                           
  2398                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2399     02B4  30FF               	movlw	255
  2400     02B5  00FF               	movwf	btemp+1
  2401     02B6  087F               	movf	btemp+1,w
  2402     02B7  07A8               	addwf	sprintf@prec,f
  2403     02B8  0A28               	incf	sprintf@prec,w
  2404     02B9  1D03               	btfss	3,2
  2405     02BA  2ABC               	goto	u1211
  2406     02BB  2ABD               	goto	u1210
  2407     02BC                     u1211:
  2408     02BC  2A7F               	goto	l1575
  2409     02BD                     u1210:
  2410     02BD                     l1583:
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2413     02BD  3001               	movlw	1
  2414     02BE  07A0               	addwf	sprintf@f,f
  2415     02BF  30FF               	movlw	-1
  2416     02C0  0720               	addwf	sprintf@f,w
  2417     02C1  0084               	movwf	4
  2418     02C2  120A  118A  200D  120A  118A  	fcall	stringdir
  2419     02C7  00AC               	movwf	sprintf@c
  2420     02C8  082C               	movf	sprintf@c,w
  2421     02C9  1D03               	btfss	3,2
  2422     02CA  2ACC               	goto	u1221
  2423     02CB  2ACD               	goto	u1220
  2424     02CC                     u1221:
  2425     02CC  29FE               	goto	l1531
  2426     02CD                     u1220:
  2427     02CD                     l1585:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2430     02CD  082B               	movf	sprintf@sp,w
  2431     02CE  0084               	movwf	4
  2432     02CF  1383               	bcf	3,7	;select IRP bank0
  2433     02D0  0180               	clrf	0
  2434     02D1                     l353:
  2435     02D1  0008               	return
  2436     02D2                     __end_of_sprintf:
  2437                           
  2438                           	psect	text6
  2439     0EAD                     __ptext6:	
  2440 ;; *************** function ___lwmod *****************
  2441 ;; Defined at:
  2442 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  divisor         2    7[COMMON] unsigned int 
  2445 ;;  dividend        2    9[COMMON] unsigned int 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  counter         1   11[COMMON] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  2    7[COMMON] unsigned int 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0, btemp+1
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2457 ;;      Params:         4       0       0       0       0
  2458 ;;      Locals:         1       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0
  2460 ;;      Totals:         5       0       0       0       0
  2461 ;;Total ram usage:        5 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_main
  2467 ;;		_sprintf
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471     0EAD                     ___lwmod:	
  2472                           ;psect for function ___lwmod
  2473                           
  2474     0EAD                     l1477:	
  2475                           ;incstack = 0
  2476                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2477                           
  2478     0EAD  0877               	movf	___lwmod@divisor,w
  2479     0EAE  0478               	iorwf	___lwmod@divisor+1,w
  2480     0EAF  1903               	btfsc	3,2
  2481     0EB0  2EB2               	goto	u1031
  2482     0EB1  2EB3               	goto	u1030
  2483     0EB2                     u1031:
  2484     0EB2  2EE2               	goto	l1495
  2485     0EB3                     u1030:
  2486     0EB3                     l1479:
  2487     0EB3  01FB               	clrf	___lwmod@counter
  2488     0EB4  0AFB               	incf	___lwmod@counter,f
  2489     0EB5  2EC1               	goto	l1485
  2490     0EB6                     l1481:
  2491     0EB6  3001               	movlw	1
  2492     0EB7                     u1045:
  2493     0EB7  1003               	clrc
  2494     0EB8  0DF7               	rlf	___lwmod@divisor,f
  2495     0EB9  0DF8               	rlf	___lwmod@divisor+1,f
  2496     0EBA  3EFF               	addlw	-1
  2497     0EBB  1D03               	skipz
  2498     0EBC  2EB7               	goto	u1045
  2499     0EBD                     l1483:
  2500     0EBD  3001               	movlw	1
  2501     0EBE  00FF               	movwf	btemp+1
  2502     0EBF  087F               	movf	btemp+1,w
  2503     0EC0  07FB               	addwf	___lwmod@counter,f
  2504     0EC1                     l1485:
  2505     0EC1  1FF8               	btfss	___lwmod@divisor+1,7
  2506     0EC2  2EC4               	goto	u1051
  2507     0EC3  2EC5               	goto	u1050
  2508     0EC4                     u1051:
  2509     0EC4  2EB6               	goto	l1481
  2510     0EC5                     u1050:
  2511     0EC5                     l1487:
  2512     0EC5  0878               	movf	___lwmod@divisor+1,w
  2513     0EC6  027A               	subwf	___lwmod@dividend+1,w
  2514     0EC7  1D03               	skipz
  2515     0EC8  2ECB               	goto	u1065
  2516     0EC9  0877               	movf	___lwmod@divisor,w
  2517     0ECA  0279               	subwf	___lwmod@dividend,w
  2518     0ECB                     u1065:
  2519     0ECB  1C03               	skipc
  2520     0ECC  2ECE               	goto	u1061
  2521     0ECD  2ECF               	goto	u1060
  2522     0ECE                     u1061:
  2523     0ECE  2ED5               	goto	l1491
  2524     0ECF                     u1060:
  2525     0ECF                     l1489:
  2526     0ECF  0877               	movf	___lwmod@divisor,w
  2527     0ED0  02F9               	subwf	___lwmod@dividend,f
  2528     0ED1  0878               	movf	___lwmod@divisor+1,w
  2529     0ED2  1C03               	skipc
  2530     0ED3  03FA               	decf	___lwmod@dividend+1,f
  2531     0ED4  02FA               	subwf	___lwmod@dividend+1,f
  2532     0ED5                     l1491:
  2533     0ED5  3001               	movlw	1
  2534     0ED6                     u1075:
  2535     0ED6  1003               	clrc
  2536     0ED7  0CF8               	rrf	___lwmod@divisor+1,f
  2537     0ED8  0CF7               	rrf	___lwmod@divisor,f
  2538     0ED9  3EFF               	addlw	-1
  2539     0EDA  1D03               	skipz
  2540     0EDB  2ED6               	goto	u1075
  2541     0EDC                     l1493:
  2542     0EDC  3001               	movlw	1
  2543     0EDD  02FB               	subwf	___lwmod@counter,f
  2544     0EDE  1D03               	btfss	3,2
  2545     0EDF  2EE1               	goto	u1081
  2546     0EE0  2EE2               	goto	u1080
  2547     0EE1                     u1081:
  2548     0EE1  2EC5               	goto	l1487
  2549     0EE2                     u1080:
  2550     0EE2                     l1495:
  2551     0EE2  087A               	movf	___lwmod@dividend+1,w
  2552     0EE3  00F8               	movwf	?___lwmod+1
  2553     0EE4  0879               	movf	___lwmod@dividend,w
  2554     0EE5  00F7               	movwf	?___lwmod
  2555     0EE6                     l639:
  2556     0EE6  0008               	return
  2557     0EE7                     __end_of___lwmod:
  2558                           
  2559                           	psect	text7
  2560     0F29                     __ptext7:	
  2561 ;; *************** function ___lwdiv *****************
  2562 ;; Defined at:
  2563 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  divisor         2    0[COMMON] unsigned int 
  2566 ;;  dividend        2    2[COMMON] unsigned int 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  quotient        2    4[COMMON] unsigned int 
  2569 ;;  counter         1    6[COMMON] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  2    0[COMMON] unsigned int 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0, btemp+1
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2579 ;;      Params:         4       0       0       0       0
  2580 ;;      Locals:         3       0       0       0       0
  2581 ;;      Temps:          0       0       0       0       0
  2582 ;;      Totals:         7       0       0       0       0
  2583 ;;Total ram usage:        7 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_sprintf
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592     0F29                     ___lwdiv:	
  2593                           ;psect for function ___lwdiv
  2594                           
  2595     0F29                     l1451:	
  2596                           ;incstack = 0
  2597                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2598                           
  2599     0F29  01F4               	clrf	___lwdiv@quotient
  2600     0F2A  01F5               	clrf	___lwdiv@quotient+1
  2601     0F2B                     l1453:
  2602     0F2B  0870               	movf	___lwdiv@divisor,w
  2603     0F2C  0471               	iorwf	___lwdiv@divisor+1,w
  2604     0F2D  1903               	btfsc	3,2
  2605     0F2E  2F30               	goto	u961
  2606     0F2F  2F31               	goto	u960
  2607     0F30                     u961:
  2608     0F30  2F68               	goto	l1473
  2609     0F31                     u960:
  2610     0F31                     l1455:
  2611     0F31  01F6               	clrf	___lwdiv@counter
  2612     0F32  0AF6               	incf	___lwdiv@counter,f
  2613     0F33  2F3F               	goto	l1461
  2614     0F34                     l1457:
  2615     0F34  3001               	movlw	1
  2616     0F35                     u975:
  2617     0F35  1003               	clrc
  2618     0F36  0DF0               	rlf	___lwdiv@divisor,f
  2619     0F37  0DF1               	rlf	___lwdiv@divisor+1,f
  2620     0F38  3EFF               	addlw	-1
  2621     0F39  1D03               	skipz
  2622     0F3A  2F35               	goto	u975
  2623     0F3B                     l1459:
  2624     0F3B  3001               	movlw	1
  2625     0F3C  00FF               	movwf	btemp+1
  2626     0F3D  087F               	movf	btemp+1,w
  2627     0F3E  07F6               	addwf	___lwdiv@counter,f
  2628     0F3F                     l1461:
  2629     0F3F  1FF1               	btfss	___lwdiv@divisor+1,7
  2630     0F40  2F42               	goto	u981
  2631     0F41  2F43               	goto	u980
  2632     0F42                     u981:
  2633     0F42  2F34               	goto	l1457
  2634     0F43                     u980:
  2635     0F43                     l1463:
  2636     0F43  3001               	movlw	1
  2637     0F44                     u995:
  2638     0F44  1003               	clrc
  2639     0F45  0DF4               	rlf	___lwdiv@quotient,f
  2640     0F46  0DF5               	rlf	___lwdiv@quotient+1,f
  2641     0F47  3EFF               	addlw	-1
  2642     0F48  1D03               	skipz
  2643     0F49  2F44               	goto	u995
  2644     0F4A  0871               	movf	___lwdiv@divisor+1,w
  2645     0F4B  0273               	subwf	___lwdiv@dividend+1,w
  2646     0F4C  1D03               	skipz
  2647     0F4D  2F50               	goto	u1005
  2648     0F4E  0870               	movf	___lwdiv@divisor,w
  2649     0F4F  0272               	subwf	___lwdiv@dividend,w
  2650     0F50                     u1005:
  2651     0F50  1C03               	skipc
  2652     0F51  2F53               	goto	u1001
  2653     0F52  2F54               	goto	u1000
  2654     0F53                     u1001:
  2655     0F53  2F5B               	goto	l1469
  2656     0F54                     u1000:
  2657     0F54                     l1465:
  2658     0F54  0870               	movf	___lwdiv@divisor,w
  2659     0F55  02F2               	subwf	___lwdiv@dividend,f
  2660     0F56  0871               	movf	___lwdiv@divisor+1,w
  2661     0F57  1C03               	skipc
  2662     0F58  03F3               	decf	___lwdiv@dividend+1,f
  2663     0F59  02F3               	subwf	___lwdiv@dividend+1,f
  2664     0F5A                     l1467:
  2665     0F5A  1474               	bsf	___lwdiv@quotient,0
  2666     0F5B                     l1469:
  2667     0F5B  3001               	movlw	1
  2668     0F5C                     u1015:
  2669     0F5C  1003               	clrc
  2670     0F5D  0CF1               	rrf	___lwdiv@divisor+1,f
  2671     0F5E  0CF0               	rrf	___lwdiv@divisor,f
  2672     0F5F  3EFF               	addlw	-1
  2673     0F60  1D03               	skipz
  2674     0F61  2F5C               	goto	u1015
  2675     0F62                     l1471:
  2676     0F62  3001               	movlw	1
  2677     0F63  02F6               	subwf	___lwdiv@counter,f
  2678     0F64  1D03               	btfss	3,2
  2679     0F65  2F67               	goto	u1021
  2680     0F66  2F68               	goto	u1020
  2681     0F67                     u1021:
  2682     0F67  2F43               	goto	l1463
  2683     0F68                     u1020:
  2684     0F68                     l1473:
  2685     0F68  0875               	movf	___lwdiv@quotient+1,w
  2686     0F69  00F1               	movwf	?___lwdiv+1
  2687     0F6A  0874               	movf	___lwdiv@quotient,w
  2688     0F6B  00F0               	movwf	?___lwdiv
  2689     0F6C                     l629:
  2690     0F6C  0008               	return
  2691     0F6D                     __end_of___lwdiv:
  2692                           
  2693                           	psect	text8
  2694     0E6A                     __ptext8:	
  2695 ;; *************** function _gate_1 *****************
  2696 ;; Defined at:
  2697 ;;		line 165 in file "../PIC_AUTO.X/function.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0
  2713 ;;      Temps:          1       0       0       0       0
  2714 ;;      Totals:         1       0       0       0       0
  2715 ;;Total ram usage:        1 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_Test
  2721 ;;		_Auto
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725     0E6A                     _gate_1:	
  2726                           ;psect for function _gate_1
  2727                           
  2728     0E6A                     l1689:	
  2729                           ;incstack = 0
  2730                           ; Regs used in _gate_1: [wreg-fsr0h+status,2+status,0]
  2731                           
  2732                           
  2733                           ;../PIC_AUTO.X/function.c: 167:     for(i=0;i<6;i++)
  2734     0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  2735     0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  2736     0E6C  01D7               	clrf	_i
  2737     0E6D  01D8               	clrf	_i+1
  2738     0E6E                     l1691:
  2739     0E6E  3000               	movlw	0
  2740     0E6F  0258               	subwf	_i+1,w
  2741     0E70  3006               	movlw	6
  2742     0E71  1903               	skipnz
  2743     0E72  0257               	subwf	_i,w
  2744     0E73  1C03               	skipc
  2745     0E74  2E76               	goto	u1481
  2746     0E75  2E77               	goto	u1480
  2747     0E76                     u1481:
  2748     0E76  2E78               	goto	l1695
  2749     0E77                     u1480:
  2750     0E77  2E8A               	goto	l131
  2751     0E78                     l1695:
  2752                           
  2753                           ;../PIC_AUTO.X/function.c: 168:     {;../PIC_AUTO.X/function.c: 169:         gate[i]=1;
  2754     0E78  0857               	movf	_i,w
  2755     0E79  00F0               	movwf	??_gate_1
  2756     0E7A  0770               	addwf	??_gate_1,w
  2757     0E7B  3E45               	addlw	(low (_gate| 0))& (0+255)
  2758     0E7C  0084               	movwf	4
  2759     0E7D  3001               	movlw	1
  2760     0E7E  1383               	bcf	3,7	;select IRP bank0
  2761     0E7F  0080               	movwf	0
  2762     0E80  0A84               	incf	4,f
  2763     0E81  3000               	movlw	0
  2764     0E82  0080               	movwf	0
  2765     0E83                     l1697:
  2766                           
  2767                           ;../PIC_AUTO.X/function.c: 170:     }
  2768     0E83  3001               	movlw	1
  2769     0E84  07D7               	addwf	_i,f
  2770     0E85  1803               	skipnc
  2771     0E86  0AD8               	incf	_i+1,f
  2772     0E87  3000               	movlw	0
  2773     0E88  07D8               	addwf	_i+1,f
  2774     0E89  2E6E               	goto	l1691
  2775     0E8A                     l131:
  2776     0E8A  0008               	return
  2777     0E8B                     __end_of_gate_1:
  2778                           
  2779                           	psect	text9
  2780     0E24                     __ptext9:	
  2781 ;; *************** function ___bmul *****************
  2782 ;; Defined at:
  2783 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  multiplier      1    wreg     unsigned char 
  2786 ;;  multiplicand    1    0[COMMON] unsigned char 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  multiplier      1    2[COMMON] unsigned char 
  2789 ;;  product         1    1[COMMON] unsigned char 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      unsigned char 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0, btemp+1
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2799 ;;      Params:         1       0       0       0       0
  2800 ;;      Locals:         2       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0
  2802 ;;      Totals:         3       0       0       0       0
  2803 ;;Total ram usage:        3 bytes
  2804 ;; Hardware stack levels used: 1
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_Auto
  2809 ;;		_main
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813     0E24                     ___bmul:	
  2814                           ;psect for function ___bmul
  2815                           
  2816                           
  2817                           ;incstack = 0
  2818                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  2819                           ;___bmul@multiplier stored from wreg
  2820     0E24  00F2               	movwf	___bmul@multiplier
  2821     0E25                     l1747:
  2822     0E25  01F1               	clrf	___bmul@product
  2823     0E26                     l1749:
  2824     0E26  1C72               	btfss	___bmul@multiplier,0
  2825     0E27  2E29               	goto	u1631
  2826     0E28  2E2A               	goto	u1630
  2827     0E29                     u1631:
  2828     0E29  2E2E               	goto	l1753
  2829     0E2A                     u1630:
  2830     0E2A                     l1751:
  2831     0E2A  0870               	movf	___bmul@multiplicand,w
  2832     0E2B  00FF               	movwf	btemp+1
  2833     0E2C  087F               	movf	btemp+1,w
  2834     0E2D  07F1               	addwf	___bmul@product,f
  2835     0E2E                     l1753:
  2836     0E2E  1003               	clrc
  2837     0E2F  0DF0               	rlf	___bmul@multiplicand,f
  2838     0E30                     l1755:
  2839     0E30  1003               	clrc
  2840     0E31  0CF2               	rrf	___bmul@multiplier,f
  2841     0E32                     l1757:
  2842     0E32  0872               	movf	___bmul@multiplier,w
  2843     0E33  1D03               	btfss	3,2
  2844     0E34  2E36               	goto	u1641
  2845     0E35  2E37               	goto	u1640
  2846     0E36                     u1641:
  2847     0E36  2E26               	goto	l1749
  2848     0E37                     u1640:
  2849     0E37                     l1759:
  2850     0E37  0871               	movf	___bmul@product,w
  2851     0E38                     l383:
  2852     0E38  0008               	return
  2853     0E39                     __end_of___bmul:
  2854                           
  2855                           	psect	text10
  2856     0E39                     __ptext10:	
  2857 ;; *************** function _Write_IC *****************
  2858 ;; Defined at:
  2859 ;;		line 13 in file "../PIC_AUTO.X/function.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2873 ;;      Params:         0       0       0       0       0
  2874 ;;      Locals:         0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0
  2876 ;;      Totals:         0       0       0       0       0
  2877 ;;Total ram usage:        0 bytes
  2878 ;; Hardware stack levels used: 1
  2879 ;; Hardware stack levels required when called: 3
  2880 ;; This function calls:
  2881 ;;		_LCD_Clear
  2882 ;;		_LCD_Set_Cursor
  2883 ;;		_LCD_Write_String
  2884 ;; This function is called by:
  2885 ;;		_Auto
  2886 ;;		_main
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890     0E39                     _Write_IC:	
  2891                           ;psect for function _Write_IC
  2892                           
  2893     0E39                     l1607:	
  2894                           ;incstack = 0
  2895                           ; Regs used in _Write_IC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2896                           
  2897                           
  2898                           ;../PIC_AUTO.X/function.c: 15:     LCD_Clear();
  2899     0E39  120A  158A  25F6  120A  158A  	fcall	_LCD_Clear
  2900                           
  2901                           ;../PIC_AUTO.X/function.c: 16:     LCD_Set_Cursor(1,1);
  2902     0E3E  01F4               	clrf	LCD_Set_Cursor@c
  2903     0E3F  0AF4               	incf	LCD_Set_Cursor@c,f
  2904     0E40  3001               	movlw	1
  2905     0E41  120A  158A  276D  120A  158A  	fcall	_LCD_Set_Cursor
  2906     0E46                     l1609:
  2907                           
  2908                           ;../PIC_AUTO.X/function.c: 17:     LCD_Write_String("IC  ");
  2909     0E46  3070               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2910     0E47  00F6               	movwf	LCD_Write_String@str
  2911     0E48  3080               	movlw	128
  2912     0E49  00F7               	movwf	LCD_Write_String@str+1
  2913     0E4A  120A  158A  26E7  120A  158A  	fcall	_LCD_Write_String
  2914     0E4F                     l85:
  2915     0E4F  0008               	return
  2916     0E50                     __end_of_Write_IC:
  2917                           
  2918                           	psect	text11
  2919     0EE7                     __ptext11:	
  2920 ;; *************** function _LCD_Write_String *****************
  2921 ;; Defined at:
  2922 ;;		line 101 in file "../PIC_AUTO.X/lcd.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  str             2    6[COMMON] PTR const unsigned char 
  2925 ;;		 -> STR_7(8), STR_6(10), STR_5(10), STR_4(11), 
  2926 ;;		 -> print@charNum(3), STR_2(15), name(35), STR_1(5), 
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  i               2   11[COMMON] int 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2938 ;;      Params:         2       0       0       0       0
  2939 ;;      Locals:         2       0       0       0       0
  2940 ;;      Temps:          3       0       0       0       0
  2941 ;;      Totals:         7       0       0       0       0
  2942 ;;Total ram usage:        7 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 2
  2945 ;; This function calls:
  2946 ;;		_LCD_Write_Char
  2947 ;; This function is called by:
  2948 ;;		_Write_IC
  2949 ;;		_Auto
  2950 ;;		_print
  2951 ;;		_main
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955     0EE7                     _LCD_Write_String:	
  2956                           ;psect for function _LCD_Write_String
  2957                           
  2958     0EE7                     l1521:	
  2959                           ;incstack = 0
  2960                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2961                           
  2962                           
  2963                           ;../PIC_AUTO.X/lcd.c: 101: void LCD_Write_String(const char *str);../PIC_AUTO.X/lcd.c: 1
      +                          02: {;../PIC_AUTO.X/lcd.c: 103:   int i;;../PIC_AUTO.X/lcd.c: 104:   for(i=0;str[i]!='\0
      +                          ';i++)
  2964     0EE7  01FB               	clrf	LCD_Write_String@i
  2965     0EE8  01FC               	clrf	LCD_Write_String@i+1
  2966     0EE9  2F0C               	goto	l1527
  2967     0EEA                     l1523:
  2968                           
  2969                           ;../PIC_AUTO.X/lcd.c: 105:     LCD_Write_Char(str[i]);
  2970     0EEA  087B               	movf	LCD_Write_String@i,w
  2971     0EEB  0776               	addwf	LCD_Write_String@str,w
  2972     0EEC  00F9               	movwf	??_LCD_Write_String+1
  2973     0EED  0877               	movf	LCD_Write_String@str+1,w
  2974     0EEE  00F8               	movwf	??_LCD_Write_String
  2975     0EEF  1803               	skipnc
  2976     0EF0  0AF8               	incf	??_LCD_Write_String,f
  2977     0EF1  1FFB               	btfss	LCD_Write_String@i,7
  2978     0EF2  2EF4               	goto	u1130
  2979     0EF3  03F8               	decf	??_LCD_Write_String,f
  2980     0EF4                     u1130:
  2981     0EF4  0878               	movf	??_LCD_Write_String,w
  2982     0EF5  00FA               	movwf	??_LCD_Write_String+2
  2983     0EF6  087A               	movf	??_LCD_Write_String+2,w
  2984     0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  2985     0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  2986     0EF9  00FF               	movwf	btemp+1
  2987     0EFA  0879               	movf	??_LCD_Write_String+1,w
  2988     0EFB  0084               	movwf	4
  2989     0EFC  120A  118A  2003  120A  158A  	fcall	stringtab
  2990     0F01  120A  118A  20B4  120A  158A  	fcall	_LCD_Write_Char
  2991     0F06                     l1525:
  2992     0F06  3001               	movlw	1
  2993     0F07  07FB               	addwf	LCD_Write_String@i,f
  2994     0F08  1803               	skipnc
  2995     0F09  0AFC               	incf	LCD_Write_String@i+1,f
  2996     0F0A  3000               	movlw	0
  2997     0F0B  07FC               	addwf	LCD_Write_String@i+1,f
  2998     0F0C                     l1527:
  2999     0F0C  087B               	movf	LCD_Write_String@i,w
  3000     0F0D  0776               	addwf	LCD_Write_String@str,w
  3001     0F0E  00F9               	movwf	??_LCD_Write_String+1
  3002     0F0F  0877               	movf	LCD_Write_String@str+1,w
  3003     0F10  00F8               	movwf	??_LCD_Write_String
  3004     0F11  1803               	skipnc
  3005     0F12  0AF8               	incf	??_LCD_Write_String,f
  3006     0F13  1FFB               	btfss	LCD_Write_String@i,7
  3007     0F14  2F16               	goto	u1140
  3008     0F15  03F8               	decf	??_LCD_Write_String,f
  3009     0F16                     u1140:
  3010     0F16  0878               	movf	??_LCD_Write_String,w
  3011     0F17  00FA               	movwf	??_LCD_Write_String+2
  3012     0F18  087A               	movf	??_LCD_Write_String+2,w
  3013     0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3014     0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3015     0F1B  00FF               	movwf	btemp+1
  3016     0F1C  0879               	movf	??_LCD_Write_String+1,w
  3017     0F1D  0084               	movwf	4
  3018     0F1E  120A  118A  2003  120A  158A  	fcall	stringtab
  3019     0F23  3A00               	xorlw	0
  3020     0F24  1D03               	skipz
  3021     0F25  2F27               	goto	u1151
  3022     0F26  2F28               	goto	u1150
  3023     0F27                     u1151:
  3024     0F27  2EEA               	goto	l1523
  3025     0F28                     u1150:
  3026     0F28                     l185:
  3027     0F28  0008               	return
  3028     0F29                     __end_of_LCD_Write_String:
  3029                           
  3030                           	psect	text12
  3031     00B4                     __ptext12:	
  3032 ;; *************** function _LCD_Write_Char *****************
  3033 ;; Defined at:
  3034 ;;		line 84 in file "../PIC_AUTO.X/lcd.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  Data            1    wreg     unsigned char 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  Data            1    5[COMMON] unsigned char 
  3039 ;;  High4           1    4[COMMON] unsigned char 
  3040 ;;  Low4            1    3[COMMON] unsigned char 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0, pclath, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3050 ;;      Params:         0       0       0       0       0
  3051 ;;      Locals:         3       0       0       0       0
  3052 ;;      Temps:          2       0       0       0       0
  3053 ;;      Totals:         5       0       0       0       0
  3054 ;;Total ram usage:        5 bytes
  3055 ;; Hardware stack levels used: 1
  3056 ;; Hardware stack levels required when called: 1
  3057 ;; This function calls:
  3058 ;;		_LCD_DATA
  3059 ;; This function is called by:
  3060 ;;		_Auto
  3061 ;;		_LCD_Write_String
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065     00B4                     _LCD_Write_Char:	
  3066                           ;psect for function _LCD_Write_Char
  3067                           
  3068                           
  3069                           ;incstack = 0
  3070                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3071                           ;LCD_Write_Char@Data stored from wreg
  3072     00B4  00F5               	movwf	LCD_Write_Char@Data
  3073     00B5                     l1417:
  3074                           
  3075                           ;../PIC_AUTO.X/lcd.c: 84: void LCD_Write_Char(char Data);../PIC_AUTO.X/lcd.c: 85: {;../P
      +                          IC_AUTO.X/lcd.c: 86:   char Low4,High4;;../PIC_AUTO.X/lcd.c: 87:   Low4 = Data & 0x0F;
  3076     00B5  0875               	movf	LCD_Write_Char@Data,w
  3077     00B6  390F               	andlw	15
  3078     00B7  00F3               	movwf	LCD_Write_Char@Low4
  3079                           
  3080                           ;../PIC_AUTO.X/lcd.c: 88:   High4 = Data & 0xF0;
  3081     00B8  0875               	movf	LCD_Write_Char@Data,w
  3082     00B9  39F0               	andlw	240
  3083     00BA  00F4               	movwf	LCD_Write_Char@High4
  3084     00BB                     l1419:
  3085                           
  3086                           ;../PIC_AUTO.X/lcd.c: 89:   RC6 = 1;
  3087     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  3088     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  3089     00BD  1707               	bsf	7,6	;volatile
  3090     00BE                     l1421:
  3091                           
  3092                           ;../PIC_AUTO.X/lcd.c: 90:   LCD_DATA(High4>>4);
  3093     00BE  0874               	movf	LCD_Write_Char@High4,w
  3094     00BF  00F1               	movwf	??_LCD_Write_Char
  3095     00C0  3004               	movlw	4
  3096     00C1                     u955:
  3097     00C1  1003               	clrc
  3098     00C2  0CF1               	rrf	??_LCD_Write_Char,f
  3099     00C3  3EFF               	addlw	-1
  3100     00C4  1D03               	skipz
  3101     00C5  28C1               	goto	u955
  3102     00C6  0871               	movf	??_LCD_Write_Char,w
  3103     00C7  120A  158A  268B  120A  118A  	fcall	_LCD_DATA
  3104     00CC                     l1423:
  3105                           
  3106                           ;../PIC_AUTO.X/lcd.c: 91:   RC7 = 1;
  3107     00CC  1283               	bcf	3,5	;RP0=0, select bank0
  3108     00CD  1303               	bcf	3,6	;RP1=0, select bank0
  3109     00CE  1787               	bsf	7,7	;volatile
  3110     00CF                     l1425:
  3111                           
  3112                           ;../PIC_AUTO.X/lcd.c: 92:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  3113     00CF  3004               	movlw	4
  3114     00D0  00F2               	movwf	??_LCD_Write_Char+1
  3115     00D1  303D               	movlw	61
  3116     00D2  00F1               	movwf	??_LCD_Write_Char
  3117     00D3                     u1897:
  3118     00D3  0BF1               	decfsz	??_LCD_Write_Char,f
  3119     00D4  28D3               	goto	u1897
  3120     00D5  0BF2               	decfsz	??_LCD_Write_Char+1,f
  3121     00D6  28D3               	goto	u1897
  3122     00D7  28D8               	nop2
  3123     00D8                     l1427:
  3124                           
  3125                           ;../PIC_AUTO.X/lcd.c: 93:   RC7 = 0;
  3126     00D8  1283               	bcf	3,5	;RP0=0, select bank0
  3127     00D9  1303               	bcf	3,6	;RP1=0, select bank0
  3128     00DA  1387               	bcf	7,7	;volatile
  3129     00DB                     l1429:
  3130                           
  3131                           ;../PIC_AUTO.X/lcd.c: 94:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  3132     00DB  3004               	movlw	4
  3133     00DC  00F2               	movwf	??_LCD_Write_Char+1
  3134     00DD  303D               	movlw	61
  3135     00DE  00F1               	movwf	??_LCD_Write_Char
  3136     00DF                     u1907:
  3137     00DF  0BF1               	decfsz	??_LCD_Write_Char,f
  3138     00E0  28DF               	goto	u1907
  3139     00E1  0BF2               	decfsz	??_LCD_Write_Char+1,f
  3140     00E2  28DF               	goto	u1907
  3141     00E3  28E4               	nop2
  3142     00E4                     l1431:
  3143                           
  3144                           ;../PIC_AUTO.X/lcd.c: 95:   LCD_DATA(Low4);
  3145     00E4  0873               	movf	LCD_Write_Char@Low4,w
  3146     00E5  120A  158A  268B  120A  118A  	fcall	_LCD_DATA
  3147     00EA                     l1433:
  3148                           
  3149                           ;../PIC_AUTO.X/lcd.c: 96:   RC7 = 1;
  3150     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  3151     00EB  1303               	bcf	3,6	;RP1=0, select bank0
  3152     00EC  1787               	bsf	7,7	;volatile
  3153     00ED                     l1435:
  3154                           
  3155                           ;../PIC_AUTO.X/lcd.c: 97:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  3156     00ED  3004               	movlw	4
  3157     00EE  00F2               	movwf	??_LCD_Write_Char+1
  3158     00EF  303D               	movlw	61
  3159     00F0  00F1               	movwf	??_LCD_Write_Char
  3160     00F1                     u1917:
  3161     00F1  0BF1               	decfsz	??_LCD_Write_Char,f
  3162     00F2  28F1               	goto	u1917
  3163     00F3  0BF2               	decfsz	??_LCD_Write_Char+1,f
  3164     00F4  28F1               	goto	u1917
  3165     00F5  28F6               	nop2
  3166     00F6                     l1437:
  3167                           
  3168                           ;../PIC_AUTO.X/lcd.c: 98:   RC7 = 0;
  3169     00F6  1283               	bcf	3,5	;RP0=0, select bank0
  3170     00F7  1303               	bcf	3,6	;RP1=0, select bank0
  3171     00F8  1387               	bcf	7,7	;volatile
  3172     00F9                     l1439:
  3173                           
  3174                           ;../PIC_AUTO.X/lcd.c: 99:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  3175     00F9  3004               	movlw	4
  3176     00FA  00F2               	movwf	??_LCD_Write_Char+1
  3177     00FB  303D               	movlw	61
  3178     00FC  00F1               	movwf	??_LCD_Write_Char
  3179     00FD                     u1927:
  3180     00FD  0BF1               	decfsz	??_LCD_Write_Char,f
  3181     00FE  28FD               	goto	u1927
  3182     00FF  0BF2               	decfsz	??_LCD_Write_Char+1,f
  3183     0100  28FD               	goto	u1927
  3184     0101  2902               	nop2
  3185     0102                     l179:
  3186     0102  0008               	return
  3187     0103                     __end_of_LCD_Write_Char:
  3188                           
  3189                           	psect	text13
  3190     0F6D                     __ptext13:	
  3191 ;; *************** function _LCD_Set_Cursor *****************
  3192 ;; Defined at:
  3193 ;;		line 41 in file "../PIC_AUTO.X/lcd.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  r               1    wreg     unsigned char 
  3196 ;;  c               1    4[COMMON] unsigned char 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  r               1    6[COMMON] unsigned char 
  3199 ;;  Temp            1    9[COMMON] unsigned char 
  3200 ;;  High4           1    8[COMMON] unsigned char 
  3201 ;;  Low4            1    7[COMMON] unsigned char 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0, pclath, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3211 ;;      Params:         1       0       0       0       0
  3212 ;;      Locals:         4       0       0       0       0
  3213 ;;      Temps:          1       0       0       0       0
  3214 ;;      Totals:         6       0       0       0       0
  3215 ;;Total ram usage:        6 bytes
  3216 ;; Hardware stack levels used: 1
  3217 ;; Hardware stack levels required when called: 2
  3218 ;; This function calls:
  3219 ;;		_LCD_CMD
  3220 ;; This function is called by:
  3221 ;;		_Write_IC
  3222 ;;		_Auto
  3223 ;;		_print
  3224 ;;		_main
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228     0F6D                     _LCD_Set_Cursor:	
  3229                           ;psect for function _LCD_Set_Cursor
  3230                           
  3231                           
  3232                           ;incstack = 0
  3233                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3234                           ;LCD_Set_Cursor@r stored from wreg
  3235     0F6D  00F6               	movwf	LCD_Set_Cursor@r
  3236     0F6E                     l1501:
  3237                           
  3238                           ;../PIC_AUTO.X/lcd.c: 41: void LCD_Set_Cursor(unsigned char r, unsigned char c);../PIC_A
      +                          UTO.X/lcd.c: 42: {;../PIC_AUTO.X/lcd.c: 43:   unsigned char Temp,Low4,High4;;../PIC_AUTO
      +                          .X/lcd.c: 44:   if(r == 1)
  3239     0F6E  0376               	decf	LCD_Set_Cursor@r,w
  3240     0F6F  1D03               	btfss	3,2
  3241     0F70  2F72               	goto	u1091
  3242     0F71  2F73               	goto	u1090
  3243     0F72                     u1091:
  3244     0F72  2F8F               	goto	l1511
  3245     0F73                     u1090:
  3246     0F73                     l1503:
  3247                           
  3248                           ;../PIC_AUTO.X/lcd.c: 45:   {;../PIC_AUTO.X/lcd.c: 46:     Temp = 0x80 + c - 1;
  3249     0F73  0874               	movf	LCD_Set_Cursor@c,w
  3250     0F74  3E7F               	addlw	127
  3251     0F75  00F9               	movwf	LCD_Set_Cursor@Temp
  3252                           
  3253                           ;../PIC_AUTO.X/lcd.c: 47:     High4 = Temp >> 4;
  3254     0F76  0879               	movf	LCD_Set_Cursor@Temp,w
  3255     0F77  00F5               	movwf	??_LCD_Set_Cursor
  3256     0F78  3004               	movlw	4
  3257     0F79                     u1105:
  3258     0F79  1003               	clrc
  3259     0F7A  0CF5               	rrf	??_LCD_Set_Cursor,f
  3260     0F7B  3EFF               	addlw	-1
  3261     0F7C  1D03               	skipz
  3262     0F7D  2F79               	goto	u1105
  3263     0F7E  0875               	movf	??_LCD_Set_Cursor,w
  3264     0F7F  00F8               	movwf	LCD_Set_Cursor@High4
  3265     0F80                     l1505:
  3266                           
  3267                           ;../PIC_AUTO.X/lcd.c: 48:     Low4 = Temp & 0x0F;
  3268     0F80  0879               	movf	LCD_Set_Cursor@Temp,w
  3269     0F81  390F               	andlw	15
  3270     0F82  00F7               	movwf	LCD_Set_Cursor@Low4
  3271     0F83                     l1507:
  3272                           
  3273                           ;../PIC_AUTO.X/lcd.c: 49:     LCD_CMD(High4);
  3274     0F83  0878               	movf	LCD_Set_Cursor@High4,w
  3275     0F84  120A  158A  2650  120A  158A  	fcall	_LCD_CMD
  3276     0F89                     l1509:
  3277                           
  3278                           ;../PIC_AUTO.X/lcd.c: 50:     LCD_CMD(Low4);
  3279     0F89  0877               	movf	LCD_Set_Cursor@Low4,w
  3280     0F8A  120A  158A  2650  120A  158A  	fcall	_LCD_CMD
  3281     0F8F                     l1511:
  3282                           
  3283                           ;../PIC_AUTO.X/lcd.c: 52:   if(r == 2)
  3284     0F8F  3002               	movlw	2
  3285     0F90  0676               	xorwf	LCD_Set_Cursor@r,w
  3286     0F91  1D03               	btfss	3,2
  3287     0F92  2F94               	goto	u1111
  3288     0F93  2F95               	goto	u1110
  3289     0F94                     u1111:
  3290     0F94  2FB1               	goto	l173
  3291     0F95                     u1110:
  3292     0F95                     l1513:
  3293                           
  3294                           ;../PIC_AUTO.X/lcd.c: 53:   {;../PIC_AUTO.X/lcd.c: 54:     Temp = 0xC0 + c - 1;
  3295     0F95  0874               	movf	LCD_Set_Cursor@c,w
  3296     0F96  3EBF               	addlw	191
  3297     0F97  00F9               	movwf	LCD_Set_Cursor@Temp
  3298                           
  3299                           ;../PIC_AUTO.X/lcd.c: 55:     High4 = Temp >> 4;
  3300     0F98  0879               	movf	LCD_Set_Cursor@Temp,w
  3301     0F99  00F5               	movwf	??_LCD_Set_Cursor
  3302     0F9A  3004               	movlw	4
  3303     0F9B                     u1125:
  3304     0F9B  1003               	clrc
  3305     0F9C  0CF5               	rrf	??_LCD_Set_Cursor,f
  3306     0F9D  3EFF               	addlw	-1
  3307     0F9E  1D03               	skipz
  3308     0F9F  2F9B               	goto	u1125
  3309     0FA0  0875               	movf	??_LCD_Set_Cursor,w
  3310     0FA1  00F8               	movwf	LCD_Set_Cursor@High4
  3311     0FA2                     l1515:
  3312                           
  3313                           ;../PIC_AUTO.X/lcd.c: 56:     Low4 = Temp & 0x0F;
  3314     0FA2  0879               	movf	LCD_Set_Cursor@Temp,w
  3315     0FA3  390F               	andlw	15
  3316     0FA4  00F7               	movwf	LCD_Set_Cursor@Low4
  3317     0FA5                     l1517:
  3318                           
  3319                           ;../PIC_AUTO.X/lcd.c: 57:     LCD_CMD(High4);
  3320     0FA5  0878               	movf	LCD_Set_Cursor@High4,w
  3321     0FA6  120A  158A  2650  120A  158A  	fcall	_LCD_CMD
  3322     0FAB                     l1519:
  3323                           
  3324                           ;../PIC_AUTO.X/lcd.c: 58:     LCD_CMD(Low4);
  3325     0FAB  0877               	movf	LCD_Set_Cursor@Low4,w
  3326     0FAC  120A  158A  2650  120A  158A  	fcall	_LCD_CMD
  3327     0FB1                     l173:
  3328     0FB1  0008               	return
  3329     0FB2                     __end_of_LCD_Set_Cursor:
  3330                           
  3331                           	psect	text14
  3332     0DF6                     __ptext14:	
  3333 ;; *************** function _LCD_Clear *****************
  3334 ;; Defined at:
  3335 ;;		line 36 in file "../PIC_AUTO.X/lcd.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0, pclath, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3349 ;;      Params:         0       0       0       0       0
  3350 ;;      Locals:         0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0
  3352 ;;      Totals:         0       0       0       0       0
  3353 ;;Total ram usage:        0 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; Hardware stack levels required when called: 2
  3356 ;; This function calls:
  3357 ;;		_LCD_CMD
  3358 ;; This function is called by:
  3359 ;;		_Write_IC
  3360 ;;		_main
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364     0DF6                     _LCD_Clear:	
  3365                           ;psect for function _LCD_Clear
  3366                           
  3367     0DF6                     l1499:	
  3368                           ;incstack = 0
  3369                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3370                           
  3371                           
  3372                           ;../PIC_AUTO.X/lcd.c: 38:   LCD_CMD(0);
  3373     0DF6  3000               	movlw	0
  3374     0DF7  120A  158A  2650  120A  158A  	fcall	_LCD_CMD
  3375                           
  3376                           ;../PIC_AUTO.X/lcd.c: 39:   LCD_CMD(1);
  3377     0DFC  3001               	movlw	1
  3378     0DFD  120A  158A  2650  120A  158A  	fcall	_LCD_CMD
  3379     0E02                     l168:
  3380     0E02  0008               	return
  3381     0E03                     __end_of_LCD_Clear:
  3382                           
  3383                           	psect	text15
  3384     0E50                     __ptext15:	
  3385 ;; *************** function _LCD_CMD *****************
  3386 ;; Defined at:
  3387 ;;		line 25 in file "../PIC_AUTO.X/lcd.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  CMD             1    wreg     unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  CMD             1    3[COMMON] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0, pclath, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       0       0       0       0
  3402 ;;      Locals:         1       0       0       0       0
  3403 ;;      Temps:          2       0       0       0       0
  3404 ;;      Totals:         3       0       0       0       0
  3405 ;;Total ram usage:        3 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; Hardware stack levels required when called: 1
  3408 ;; This function calls:
  3409 ;;		_LCD_DATA
  3410 ;; This function is called by:
  3411 ;;		_LCD_Clear
  3412 ;;		_LCD_Set_Cursor
  3413 ;;		_LCD_Init
  3414 ;;		_LCD_SL
  3415 ;;		_LCD_SR
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419     0E50                     _LCD_CMD:	
  3420                           ;psect for function _LCD_CMD
  3421                           
  3422                           
  3423                           ;incstack = 0
  3424                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  3425                           ;LCD_CMD@CMD stored from wreg
  3426     0E50  00F3               	movwf	LCD_CMD@CMD
  3427     0E51                     l1441:
  3428                           
  3429                           ;../PIC_AUTO.X/lcd.c: 25: void LCD_CMD(unsigned char CMD);../PIC_AUTO.X/lcd.c: 26: {;../
      +                          PIC_AUTO.X/lcd.c: 28:   RC6 = 0;
  3430     0E51  1283               	bcf	3,5	;RP0=0, select bank0
  3431     0E52  1303               	bcf	3,6	;RP1=0, select bank0
  3432     0E53  1307               	bcf	7,6	;volatile
  3433     0E54                     l1443:
  3434                           
  3435                           ;../PIC_AUTO.X/lcd.c: 30:   LCD_DATA(CMD);
  3436     0E54  0873               	movf	LCD_CMD@CMD,w
  3437     0E55  120A  158A  268B  120A  158A  	fcall	_LCD_DATA
  3438     0E5A                     l1445:
  3439                           
  3440                           ;../PIC_AUTO.X/lcd.c: 32:   RC7 = 1;
  3441     0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  3442     0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  3443     0E5C  1787               	bsf	7,7	;volatile
  3444     0E5D                     l1447:
  3445                           
  3446                           ;../PIC_AUTO.X/lcd.c: 33:   _delay((unsigned long)((500)*(20000000/4000000.0)));
  3447     0E5D  3004               	movlw	4
  3448     0E5E  00F2               	movwf	??_LCD_CMD+1
  3449     0E5F  303D               	movlw	61
  3450     0E60  00F1               	movwf	??_LCD_CMD
  3451     0E61                     u1937:
  3452     0E61  0BF1               	decfsz	??_LCD_CMD,f
  3453     0E62  2E61               	goto	u1937
  3454     0E63  0BF2               	decfsz	??_LCD_CMD+1,f
  3455     0E64  2E61               	goto	u1937
  3456     0E65  2E66               	nop2
  3457     0E66                     l1449:
  3458                           
  3459                           ;../PIC_AUTO.X/lcd.c: 34:   RC7 = 0;
  3460     0E66  1283               	bcf	3,5	;RP0=0, select bank0
  3461     0E67  1303               	bcf	3,6	;RP1=0, select bank0
  3462     0E68  1387               	bcf	7,7	;volatile
  3463     0E69                     l165:
  3464     0E69  0008               	return
  3465     0E6A                     __end_of_LCD_CMD:
  3466                           
  3467                           	psect	text16
  3468     0E8B                     __ptext16:	
  3469 ;; *************** function _LCD_DATA *****************
  3470 ;; Defined at:
  3471 ;;		line 6 in file "../PIC_AUTO.X/lcd.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  Data            1    wreg     unsigned char 
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;  Data            1    0[COMMON] unsigned char 
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      void 
  3478 ;; Registers used:
  3479 ;;		wreg
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3485 ;;      Params:         0       0       0       0       0
  3486 ;;      Locals:         1       0       0       0       0
  3487 ;;      Temps:          0       0       0       0       0
  3488 ;;      Totals:         1       0       0       0       0
  3489 ;;Total ram usage:        1 bytes
  3490 ;; Hardware stack levels used: 1
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_LCD_CMD
  3495 ;;		_LCD_Init
  3496 ;;		_LCD_Write_Char
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500     0E8B                     _LCD_DATA:	
  3501                           ;psect for function _LCD_DATA
  3502                           
  3503                           
  3504                           ;incstack = 0
  3505                           ; Regs used in _LCD_DATA: [wreg]
  3506                           ;LCD_DATA@Data stored from wreg
  3507     0E8B  00F0               	movwf	LCD_DATA@Data
  3508     0E8C                     l1407:
  3509                           
  3510                           ;../PIC_AUTO.X/lcd.c: 6: void LCD_DATA(unsigned char Data);../PIC_AUTO.X/lcd.c: 7: {;../
      +                          PIC_AUTO.X/lcd.c: 8:   if(Data & 1)
  3511     0E8C  1C70               	btfss	LCD_DATA@Data,0
  3512     0E8D  2E8F               	goto	u911
  3513     0E8E  2E90               	goto	u910
  3514     0E8F                     u911:
  3515     0E8F  2E94               	goto	l154
  3516     0E90                     u910:
  3517     0E90                     l1409:
  3518                           
  3519                           ;../PIC_AUTO.X/lcd.c: 9:     RC2 = 1;
  3520     0E90  1283               	bcf	3,5	;RP0=0, select bank0
  3521     0E91  1303               	bcf	3,6	;RP1=0, select bank0
  3522     0E92  1507               	bsf	7,2	;volatile
  3523     0E93  2E97               	goto	l155
  3524     0E94                     l154:	
  3525                           ;../PIC_AUTO.X/lcd.c: 10:   else
  3526                           
  3527                           
  3528                           ;../PIC_AUTO.X/lcd.c: 11:     RC2 = 0;
  3529     0E94  1283               	bcf	3,5	;RP0=0, select bank0
  3530     0E95  1303               	bcf	3,6	;RP1=0, select bank0
  3531     0E96  1107               	bcf	7,2	;volatile
  3532     0E97                     l155:
  3533                           
  3534                           ;../PIC_AUTO.X/lcd.c: 12:   if(Data & 2)
  3535     0E97  1CF0               	btfss	LCD_DATA@Data,1
  3536     0E98  2E9A               	goto	u921
  3537     0E99  2E9B               	goto	u920
  3538     0E9A                     u921:
  3539     0E9A  2E9D               	goto	l156
  3540     0E9B                     u920:
  3541     0E9B                     l1411:
  3542                           
  3543                           ;../PIC_AUTO.X/lcd.c: 13:     RC3 = 1;
  3544     0E9B  1587               	bsf	7,3	;volatile
  3545     0E9C  2E9E               	goto	l157
  3546     0E9D                     l156:	
  3547                           ;../PIC_AUTO.X/lcd.c: 14:   else
  3548                           
  3549                           
  3550                           ;../PIC_AUTO.X/lcd.c: 15:     RC3 = 0;
  3551     0E9D  1187               	bcf	7,3	;volatile
  3552     0E9E                     l157:
  3553                           
  3554                           ;../PIC_AUTO.X/lcd.c: 16:   if(Data & 4)
  3555     0E9E  1D70               	btfss	LCD_DATA@Data,2
  3556     0E9F  2EA1               	goto	u931
  3557     0EA0  2EA2               	goto	u930
  3558     0EA1                     u931:
  3559     0EA1  2EA4               	goto	l158
  3560     0EA2                     u930:
  3561     0EA2                     l1413:
  3562                           
  3563                           ;../PIC_AUTO.X/lcd.c: 17:     RC4 = 1;
  3564     0EA2  1607               	bsf	7,4	;volatile
  3565     0EA3  2EA5               	goto	l159
  3566     0EA4                     l158:	
  3567                           ;../PIC_AUTO.X/lcd.c: 18:   else
  3568                           
  3569                           
  3570                           ;../PIC_AUTO.X/lcd.c: 19:     RC4 = 0;
  3571     0EA4  1207               	bcf	7,4	;volatile
  3572     0EA5                     l159:
  3573                           
  3574                           ;../PIC_AUTO.X/lcd.c: 20:   if(Data & 8)
  3575     0EA5  1DF0               	btfss	LCD_DATA@Data,3
  3576     0EA6  2EA8               	goto	u941
  3577     0EA7  2EA9               	goto	u940
  3578     0EA8                     u941:
  3579     0EA8  2EAB               	goto	l160
  3580     0EA9                     u940:
  3581     0EA9                     l1415:
  3582                           
  3583                           ;../PIC_AUTO.X/lcd.c: 21:     RC5 = 1;
  3584     0EA9  1687               	bsf	7,5	;volatile
  3585     0EAA  2EAC               	goto	l162
  3586     0EAB                     l160:	
  3587                           ;../PIC_AUTO.X/lcd.c: 22:   else
  3588                           
  3589                           
  3590                           ;../PIC_AUTO.X/lcd.c: 23:     RC5 = 0;
  3591     0EAB  1287               	bcf	7,5	;volatile
  3592     0EAC                     l162:
  3593     0EAC  0008               	return
  3594     0EAD                     __end_of_LCD_DATA:
  3595                           
  3596                           	psect	text17
  3597     066A                     __ptext17:	
  3598 ;; *************** function _Mode_6 *****************
  3599 ;; Defined at:
  3600 ;;		line 136 in file "../PIC_AUTO.X/function.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0, pclath, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3614 ;;      Params:         0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0
  3616 ;;      Temps:          3       0       0       0       0
  3617 ;;      Totals:         3       0       0       0       0
  3618 ;;Total ram usage:        3 bytes
  3619 ;; Hardware stack levels used: 1
  3620 ;; Hardware stack levels required when called: 1
  3621 ;; This function calls:
  3622 ;;		___wmul
  3623 ;; This function is called by:
  3624 ;;		_Test
  3625 ;;		_Auto
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629     066A                     _Mode_6:	
  3630                           ;psect for function _Mode_6
  3631                           
  3632     066A                     l1701:	
  3633                           ;incstack = 0
  3634                           ; Regs used in _Mode_6: [wreg+status,2+status,0+pclath+cstack]
  3635                           
  3636                           
  3637                           ;../PIC_AUTO.X/function.c: 138:     k=0;
  3638     066A  1283               	bcf	3,5	;RP0=0, select bank0
  3639     066B  1303               	bcf	3,6	;RP1=0, select bank0
  3640     066C  01D3               	clrf	_k
  3641     066D  01D4               	clrf	_k+1
  3642     066E                     l1703:
  3643                           
  3644                           ;../PIC_AUTO.X/function.c: 139:     TRISB0=TRISB2=TRISB4=TRISD2=TRISD4=TRISD6=0;
  3645     066E  1683               	bsf	3,5	;RP0=1, select bank1
  3646     066F  1303               	bcf	3,6	;RP1=0, select bank1
  3647     0670  1308               	bcf	8,6	;volatile
  3648     0671  1208               	bcf	8,4	;volatile
  3649     0672  1108               	bcf	8,2	;volatile
  3650     0673  1206               	bcf	6,4	;volatile
  3651     0674  1106               	bcf	6,2	;volatile
  3652     0675  1006               	bcf	6,0	;volatile
  3653     0676                     l1705:
  3654                           
  3655                           ;../PIC_AUTO.X/function.c: 140:     TRISB1=TRISB3=TRISB5=TRISD1=TRISD3=TRISD5=1;
  3656     0676  1688               	bsf	8,5	;volatile
  3657     0677  1A88               	btfsc	8,5	;volatile
  3658     0678  2E7A               	goto	u1491
  3659     0679  2E7E               	goto	u1490
  3660     067A                     u1491:
  3661     067A  1683               	bsf	3,5	;RP0=1, select bank1
  3662     067B  1303               	bcf	3,6	;RP1=0, select bank1
  3663     067C  1588               	bsf	8,3	;volatile
  3664     067D  2E81               	goto	u1504
  3665     067E                     u1490:
  3666     067E  1683               	bsf	3,5	;RP0=1, select bank1
  3667     067F  1303               	bcf	3,6	;RP1=0, select bank1
  3668     0680  1188               	bcf	8,3	;volatile
  3669     0681                     u1504:
  3670     0681  1988               	btfsc	8,3	;volatile
  3671     0682  2E84               	goto	u1501
  3672     0683  2E88               	goto	u1500
  3673     0684                     u1501:
  3674     0684  1683               	bsf	3,5	;RP0=1, select bank1
  3675     0685  1303               	bcf	3,6	;RP1=0, select bank1
  3676     0686  1488               	bsf	8,1	;volatile
  3677     0687  2E8B               	goto	u1514
  3678     0688                     u1500:
  3679     0688  1683               	bsf	3,5	;RP0=1, select bank1
  3680     0689  1303               	bcf	3,6	;RP1=0, select bank1
  3681     068A  1088               	bcf	8,1	;volatile
  3682     068B                     u1514:
  3683     068B  1888               	btfsc	8,1	;volatile
  3684     068C  2E8E               	goto	u1511
  3685     068D  2E92               	goto	u1510
  3686     068E                     u1511:
  3687     068E  1683               	bsf	3,5	;RP0=1, select bank1
  3688     068F  1303               	bcf	3,6	;RP1=0, select bank1
  3689     0690  1686               	bsf	6,5	;volatile
  3690     0691  2E95               	goto	u1524
  3691     0692                     u1510:
  3692     0692  1683               	bsf	3,5	;RP0=1, select bank1
  3693     0693  1303               	bcf	3,6	;RP1=0, select bank1
  3694     0694  1286               	bcf	6,5	;volatile
  3695     0695                     u1524:
  3696     0695  1A86               	btfsc	6,5	;volatile
  3697     0696  2E98               	goto	u1521
  3698     0697  2E9C               	goto	u1520
  3699     0698                     u1521:
  3700     0698  1683               	bsf	3,5	;RP0=1, select bank1
  3701     0699  1303               	bcf	3,6	;RP1=0, select bank1
  3702     069A  1586               	bsf	6,3	;volatile
  3703     069B  2E9F               	goto	u1534
  3704     069C                     u1520:
  3705     069C  1683               	bsf	3,5	;RP0=1, select bank1
  3706     069D  1303               	bcf	3,6	;RP1=0, select bank1
  3707     069E  1186               	bcf	6,3	;volatile
  3708     069F                     u1534:
  3709     069F  1986               	btfsc	6,3	;volatile
  3710     06A0  2EA2               	goto	u1531
  3711     06A1  2EA6               	goto	u1530
  3712     06A2                     u1531:
  3713     06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3714     06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3715     06A4  1486               	bsf	6,1	;volatile
  3716     06A5  2EA9               	goto	u1544
  3717     06A6                     u1530:
  3718     06A6  1683               	bsf	3,5	;RP0=1, select bank1
  3719     06A7  1303               	bcf	3,6	;RP1=0, select bank1
  3720     06A8  1086               	bcf	6,1	;volatile
  3721     06A9                     u1544:
  3722                           
  3723                           ;../PIC_AUTO.X/function.c: 141:     for(i=0;i<2;i++)
  3724     06A9  1283               	bcf	3,5	;RP0=0, select bank0
  3725     06AA  1303               	bcf	3,6	;RP1=0, select bank0
  3726     06AB  01D7               	clrf	_i
  3727     06AC  01D8               	clrf	_i+1
  3728     06AD                     l1707:
  3729     06AD  3000               	movlw	0
  3730     06AE  0258               	subwf	_i+1,w
  3731     06AF  3002               	movlw	2
  3732     06B0  1903               	skipnz
  3733     06B1  0257               	subwf	_i,w
  3734     06B2  1C03               	skipc
  3735     06B3  2EB5               	goto	u1551
  3736     06B4  2EB6               	goto	u1550
  3737     06B5                     u1551:
  3738     06B5  2EB7               	goto	l124
  3739     06B6                     u1550:
  3740     06B6  2FE7               	goto	l126
  3741     06B7                     l124:
  3742                           
  3743                           ;../PIC_AUTO.X/function.c: 142:     {;../PIC_AUTO.X/function.c: 143:         RB0=RB2=RB4
      +                          =RD2=RD4=RD6=(__bit)i;
  3744     06B7  1857               	btfsc	_i,0
  3745     06B8  2EBA               	goto	u1561
  3746     06B9  2EBE               	goto	u1560
  3747     06BA                     u1561:
  3748     06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3749     06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3750     06BC  1708               	bsf	8,6	;volatile
  3751     06BD  2EC1               	goto	u1574
  3752     06BE                     u1560:
  3753     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  3754     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  3755     06C0  1308               	bcf	8,6	;volatile
  3756     06C1                     u1574:
  3757     06C1  1B08               	btfsc	8,6	;volatile
  3758     06C2  2EC4               	goto	u1571
  3759     06C3  2EC8               	goto	u1570
  3760     06C4                     u1571:
  3761     06C4  1283               	bcf	3,5	;RP0=0, select bank0
  3762     06C5  1303               	bcf	3,6	;RP1=0, select bank0
  3763     06C6  1608               	bsf	8,4	;volatile
  3764     06C7  2ECB               	goto	u1584
  3765     06C8                     u1570:
  3766     06C8  1283               	bcf	3,5	;RP0=0, select bank0
  3767     06C9  1303               	bcf	3,6	;RP1=0, select bank0
  3768     06CA  1208               	bcf	8,4	;volatile
  3769     06CB                     u1584:
  3770     06CB  1A08               	btfsc	8,4	;volatile
  3771     06CC  2ECE               	goto	u1581
  3772     06CD  2ED2               	goto	u1580
  3773     06CE                     u1581:
  3774     06CE  1283               	bcf	3,5	;RP0=0, select bank0
  3775     06CF  1303               	bcf	3,6	;RP1=0, select bank0
  3776     06D0  1508               	bsf	8,2	;volatile
  3777     06D1  2ED5               	goto	u1594
  3778     06D2                     u1580:
  3779     06D2  1283               	bcf	3,5	;RP0=0, select bank0
  3780     06D3  1303               	bcf	3,6	;RP1=0, select bank0
  3781     06D4  1108               	bcf	8,2	;volatile
  3782     06D5                     u1594:
  3783     06D5  1908               	btfsc	8,2	;volatile
  3784     06D6  2ED8               	goto	u1591
  3785     06D7  2EDC               	goto	u1590
  3786     06D8                     u1591:
  3787     06D8  1283               	bcf	3,5	;RP0=0, select bank0
  3788     06D9  1303               	bcf	3,6	;RP1=0, select bank0
  3789     06DA  1606               	bsf	6,4	;volatile
  3790     06DB  2EDF               	goto	u1604
  3791     06DC                     u1590:
  3792     06DC  1283               	bcf	3,5	;RP0=0, select bank0
  3793     06DD  1303               	bcf	3,6	;RP1=0, select bank0
  3794     06DE  1206               	bcf	6,4	;volatile
  3795     06DF                     u1604:
  3796     06DF  1A06               	btfsc	6,4	;volatile
  3797     06E0  2EE2               	goto	u1601
  3798     06E1  2EE6               	goto	u1600
  3799     06E2                     u1601:
  3800     06E2  1283               	bcf	3,5	;RP0=0, select bank0
  3801     06E3  1303               	bcf	3,6	;RP1=0, select bank0
  3802     06E4  1506               	bsf	6,2	;volatile
  3803     06E5  2EE9               	goto	u1614
  3804     06E6                     u1600:
  3805     06E6  1283               	bcf	3,5	;RP0=0, select bank0
  3806     06E7  1303               	bcf	3,6	;RP1=0, select bank0
  3807     06E8  1106               	bcf	6,2	;volatile
  3808     06E9                     u1614:
  3809     06E9  1906               	btfsc	6,2	;volatile
  3810     06EA  2EEC               	goto	u1611
  3811     06EB  2EF0               	goto	u1610
  3812     06EC                     u1611:
  3813     06EC  1283               	bcf	3,5	;RP0=0, select bank0
  3814     06ED  1303               	bcf	3,6	;RP1=0, select bank0
  3815     06EE  1406               	bsf	6,0	;volatile
  3816     06EF  2EF3               	goto	u1624
  3817     06F0                     u1610:
  3818     06F0  1283               	bcf	3,5	;RP0=0, select bank0
  3819     06F1  1303               	bcf	3,6	;RP1=0, select bank0
  3820     06F2  1006               	bcf	6,0	;volatile
  3821     06F3                     u1624:
  3822     06F3                     l1711:
  3823                           
  3824                           ;../PIC_AUTO.X/function.c: 144:         k=(int)RB1;
  3825     06F3  1003               	clrc
  3826     06F4  1886               	btfsc	6,1	;volatile
  3827     06F5  1403               	setc
  3828     06F6  3000               	movlw	0
  3829     06F7  1803               	skipnc
  3830     06F8  3001               	movlw	1
  3831     06F9  00F6               	movwf	??_Mode_6
  3832     06FA  01F7               	clrf	??_Mode_6+1
  3833     06FB  0876               	movf	??_Mode_6,w
  3834     06FC  00D3               	movwf	_k
  3835     06FD  0877               	movf	??_Mode_6+1,w
  3836     06FE  00D4               	movwf	_k+1
  3837     06FF                     l1713:
  3838                           
  3839                           ;../PIC_AUTO.X/function.c: 145:         gate[0]*=10;
  3840     06FF  300A               	movlw	10
  3841     0700  00F0               	movwf	___wmul@multiplier
  3842     0701  3000               	movlw	0
  3843     0702  00F1               	movwf	___wmul@multiplier+1
  3844     0703  0846               	movf	_gate+1,w
  3845     0704  00F3               	movwf	___wmul@multiplicand+1
  3846     0705  0845               	movf	_gate,w
  3847     0706  00F2               	movwf	___wmul@multiplicand
  3848     0707  120A  118A  208F  120A  118A  	fcall	___wmul
  3849     070C  0871               	movf	?___wmul+1,w
  3850     070D  1283               	bcf	3,5	;RP0=0, select bank0
  3851     070E  1303               	bcf	3,6	;RP1=0, select bank0
  3852     070F  00C6               	movwf	_gate+1
  3853     0710  0870               	movf	?___wmul,w
  3854     0711  00C5               	movwf	_gate
  3855     0712                     l1715:
  3856                           
  3857                           ;../PIC_AUTO.X/function.c: 146:         gate[0]+=k;
  3858     0712  0853               	movf	_k,w
  3859     0713  07C5               	addwf	_gate,f
  3860     0714  1803               	skipnc
  3861     0715  0AC6               	incf	_gate+1,f
  3862     0716  0854               	movf	_k+1,w
  3863     0717  07C6               	addwf	_gate+1,f
  3864     0718                     l1717:
  3865                           
  3866                           ;../PIC_AUTO.X/function.c: 147:         k=(int)RB3;
  3867     0718  1003               	clrc
  3868     0719  1986               	btfsc	6,3	;volatile
  3869     071A  1403               	setc
  3870     071B  3000               	movlw	0
  3871     071C  1803               	skipnc
  3872     071D  3001               	movlw	1
  3873     071E  00F6               	movwf	??_Mode_6
  3874     071F  01F7               	clrf	??_Mode_6+1
  3875     0720  0876               	movf	??_Mode_6,w
  3876     0721  00D3               	movwf	_k
  3877     0722  0877               	movf	??_Mode_6+1,w
  3878     0723  00D4               	movwf	_k+1
  3879     0724                     l1719:
  3880                           
  3881                           ;../PIC_AUTO.X/function.c: 148:         gate[1]*=10;
  3882     0724  300A               	movlw	10
  3883     0725  00F0               	movwf	___wmul@multiplier
  3884     0726  3000               	movlw	0
  3885     0727  00F1               	movwf	___wmul@multiplier+1
  3886     0728  0848               	movf	_gate+3,w
  3887     0729  00F3               	movwf	___wmul@multiplicand+1
  3888     072A  0847               	movf	_gate+2,w
  3889     072B  00F2               	movwf	___wmul@multiplicand
  3890     072C  120A  118A  208F  120A  118A  	fcall	___wmul
  3891     0731  0871               	movf	?___wmul+1,w
  3892     0732  1283               	bcf	3,5	;RP0=0, select bank0
  3893     0733  1303               	bcf	3,6	;RP1=0, select bank0
  3894     0734  00C8               	movwf	_gate+3
  3895     0735  0870               	movf	?___wmul,w
  3896     0736  00C7               	movwf	_gate+2
  3897                           
  3898                           ;../PIC_AUTO.X/function.c: 149:         gate[1]+=k;
  3899     0737  0853               	movf	_k,w
  3900     0738  07C7               	addwf	_gate+2,f
  3901     0739  1803               	skipnc
  3902     073A  0AC8               	incf	_gate+3,f
  3903     073B  0854               	movf	_k+1,w
  3904     073C  07C8               	addwf	_gate+3,f
  3905     073D                     l1721:
  3906                           
  3907                           ;../PIC_AUTO.X/function.c: 150:         k=(int)RB5;
  3908     073D  1003               	clrc
  3909     073E  1A86               	btfsc	6,5	;volatile
  3910     073F  1403               	setc
  3911     0740  3000               	movlw	0
  3912     0741  1803               	skipnc
  3913     0742  3001               	movlw	1
  3914     0743  00F6               	movwf	??_Mode_6
  3915     0744  01F7               	clrf	??_Mode_6+1
  3916     0745  0876               	movf	??_Mode_6,w
  3917     0746  00D3               	movwf	_k
  3918     0747  0877               	movf	??_Mode_6+1,w
  3919     0748  00D4               	movwf	_k+1
  3920     0749                     l1723:
  3921                           
  3922                           ;../PIC_AUTO.X/function.c: 151:         gate[2]*=10;
  3923     0749  300A               	movlw	10
  3924     074A  00F0               	movwf	___wmul@multiplier
  3925     074B  3000               	movlw	0
  3926     074C  00F1               	movwf	___wmul@multiplier+1
  3927     074D  084A               	movf	_gate+5,w
  3928     074E  00F3               	movwf	___wmul@multiplicand+1
  3929     074F  0849               	movf	_gate+4,w
  3930     0750  00F2               	movwf	___wmul@multiplicand
  3931     0751  120A  118A  208F  120A  118A  	fcall	___wmul
  3932     0756  0871               	movf	?___wmul+1,w
  3933     0757  1283               	bcf	3,5	;RP0=0, select bank0
  3934     0758  1303               	bcf	3,6	;RP1=0, select bank0
  3935     0759  00CA               	movwf	_gate+5
  3936     075A  0870               	movf	?___wmul,w
  3937     075B  00C9               	movwf	_gate+4
  3938     075C                     l1725:
  3939                           
  3940                           ;../PIC_AUTO.X/function.c: 152:         gate[2]+=k;
  3941     075C  0853               	movf	_k,w
  3942     075D  07C9               	addwf	_gate+4,f
  3943     075E  1803               	skipnc
  3944     075F  0ACA               	incf	_gate+5,f
  3945     0760  0854               	movf	_k+1,w
  3946     0761  07CA               	addwf	_gate+5,f
  3947     0762                     l1727:
  3948                           
  3949                           ;../PIC_AUTO.X/function.c: 153:         k=(int)RD1;
  3950     0762  1003               	clrc
  3951     0763  1888               	btfsc	8,1	;volatile
  3952     0764  1403               	setc
  3953     0765  3000               	movlw	0
  3954     0766  1803               	skipnc
  3955     0767  3001               	movlw	1
  3956     0768  00F6               	movwf	??_Mode_6
  3957     0769  01F7               	clrf	??_Mode_6+1
  3958     076A  0876               	movf	??_Mode_6,w
  3959     076B  00D3               	movwf	_k
  3960     076C  0877               	movf	??_Mode_6+1,w
  3961     076D  00D4               	movwf	_k+1
  3962                           
  3963                           ;../PIC_AUTO.X/function.c: 154:         gate[3]*=10;
  3964     076E  300A               	movlw	10
  3965     076F  00F0               	movwf	___wmul@multiplier
  3966     0770  3000               	movlw	0
  3967     0771  00F1               	movwf	___wmul@multiplier+1
  3968     0772  084C               	movf	_gate+7,w
  3969     0773  00F3               	movwf	___wmul@multiplicand+1
  3970     0774  084B               	movf	_gate+6,w
  3971     0775  00F2               	movwf	___wmul@multiplicand
  3972     0776  120A  118A  208F  120A  118A  	fcall	___wmul
  3973     077B  0871               	movf	?___wmul+1,w
  3974     077C  1283               	bcf	3,5	;RP0=0, select bank0
  3975     077D  1303               	bcf	3,6	;RP1=0, select bank0
  3976     077E  00CC               	movwf	_gate+7
  3977     077F  0870               	movf	?___wmul,w
  3978     0780  00CB               	movwf	_gate+6
  3979     0781                     l1729:
  3980                           
  3981                           ;../PIC_AUTO.X/function.c: 155:         gate[3]+=k;
  3982     0781  0853               	movf	_k,w
  3983     0782  07CB               	addwf	_gate+6,f
  3984     0783  1803               	skipnc
  3985     0784  0ACC               	incf	_gate+7,f
  3986     0785  0854               	movf	_k+1,w
  3987     0786  07CC               	addwf	_gate+7,f
  3988     0787                     l1731:
  3989                           
  3990                           ;../PIC_AUTO.X/function.c: 156:         k=(int)RD3;
  3991     0787  1003               	clrc
  3992     0788  1988               	btfsc	8,3	;volatile
  3993     0789  1403               	setc
  3994     078A  3000               	movlw	0
  3995     078B  1803               	skipnc
  3996     078C  3001               	movlw	1
  3997     078D  00F6               	movwf	??_Mode_6
  3998     078E  01F7               	clrf	??_Mode_6+1
  3999     078F  0876               	movf	??_Mode_6,w
  4000     0790  00D3               	movwf	_k
  4001     0791  0877               	movf	??_Mode_6+1,w
  4002     0792  00D4               	movwf	_k+1
  4003     0793                     l1733:
  4004                           
  4005                           ;../PIC_AUTO.X/function.c: 157:         gate[4]*=10;
  4006     0793  300A               	movlw	10
  4007     0794  00F0               	movwf	___wmul@multiplier
  4008     0795  3000               	movlw	0
  4009     0796  00F1               	movwf	___wmul@multiplier+1
  4010     0797  084E               	movf	_gate+9,w
  4011     0798  00F3               	movwf	___wmul@multiplicand+1
  4012     0799  084D               	movf	_gate+8,w
  4013     079A  00F2               	movwf	___wmul@multiplicand
  4014     079B  120A  118A  208F  120A  118A  	fcall	___wmul
  4015     07A0  0871               	movf	?___wmul+1,w
  4016     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  4017     07A2  1303               	bcf	3,6	;RP1=0, select bank0
  4018     07A3  00CE               	movwf	_gate+9
  4019     07A4  0870               	movf	?___wmul,w
  4020     07A5  00CD               	movwf	_gate+8
  4021     07A6                     l1735:
  4022                           
  4023                           ;../PIC_AUTO.X/function.c: 158:         gate[4]+=k;
  4024     07A6  0853               	movf	_k,w
  4025     07A7  07CD               	addwf	_gate+8,f
  4026     07A8  1803               	skipnc
  4027     07A9  0ACE               	incf	_gate+9,f
  4028     07AA  0854               	movf	_k+1,w
  4029     07AB  07CE               	addwf	_gate+9,f
  4030                           
  4031                           ;../PIC_AUTO.X/function.c: 159:         k=(int)RD5;
  4032     07AC  1003               	clrc
  4033     07AD  1A88               	btfsc	8,5	;volatile
  4034     07AE  1403               	setc
  4035     07AF  3000               	movlw	0
  4036     07B0  1803               	skipnc
  4037     07B1  3001               	movlw	1
  4038     07B2  00F6               	movwf	??_Mode_6
  4039     07B3  01F7               	clrf	??_Mode_6+1
  4040     07B4  0876               	movf	??_Mode_6,w
  4041     07B5  00D3               	movwf	_k
  4042     07B6  0877               	movf	??_Mode_6+1,w
  4043     07B7  00D4               	movwf	_k+1
  4044     07B8                     l1737:
  4045                           
  4046                           ;../PIC_AUTO.X/function.c: 160:         gate[5]*=10;
  4047     07B8  300A               	movlw	10
  4048     07B9  00F0               	movwf	___wmul@multiplier
  4049     07BA  3000               	movlw	0
  4050     07BB  00F1               	movwf	___wmul@multiplier+1
  4051     07BC  0850               	movf	_gate+11,w
  4052     07BD  00F3               	movwf	___wmul@multiplicand+1
  4053     07BE  084F               	movf	_gate+10,w
  4054     07BF  00F2               	movwf	___wmul@multiplicand
  4055     07C0  120A  118A  208F  120A  118A  	fcall	___wmul
  4056     07C5  0871               	movf	?___wmul+1,w
  4057     07C6  1283               	bcf	3,5	;RP0=0, select bank0
  4058     07C7  1303               	bcf	3,6	;RP1=0, select bank0
  4059     07C8  00D0               	movwf	_gate+11
  4060     07C9  0870               	movf	?___wmul,w
  4061     07CA  00CF               	movwf	_gate+10
  4062     07CB                     l1739:
  4063                           
  4064                           ;../PIC_AUTO.X/function.c: 161:         gate[5]+=k;
  4065     07CB  0853               	movf	_k,w
  4066     07CC  07CF               	addwf	_gate+10,f
  4067     07CD  1803               	skipnc
  4068     07CE  0AD0               	incf	_gate+11,f
  4069     07CF  0854               	movf	_k+1,w
  4070     07D0  07D0               	addwf	_gate+11,f
  4071     07D1                     l1741:
  4072                           
  4073                           ;../PIC_AUTO.X/function.c: 162:         _delay((unsigned long)((100)*(20000000/4000.0)))
      +                          ;
  4074     07D1  3003               	movlw	3
  4075     07D2  00F8               	movwf	??_Mode_6+2
  4076     07D3  308A               	movlw	138
  4077     07D4  00F7               	movwf	??_Mode_6+1
  4078     07D5  3055               	movlw	85
  4079     07D6  00F6               	movwf	??_Mode_6
  4080     07D7                     u1947:
  4081     07D7  0BF6               	decfsz	??_Mode_6,f
  4082     07D8  2FD7               	goto	u1947
  4083     07D9  0BF7               	decfsz	??_Mode_6+1,f
  4084     07DA  2FD7               	goto	u1947
  4085     07DB  0BF8               	decfsz	??_Mode_6+2,f
  4086     07DC  2FD7               	goto	u1947
  4087     07DD  2FDE               	nop2
  4088     07DE                     l1743:
  4089                           
  4090                           ;../PIC_AUTO.X/function.c: 163:     }
  4091     07DE  3001               	movlw	1
  4092     07DF  1283               	bcf	3,5	;RP0=0, select bank0
  4093     07E0  1303               	bcf	3,6	;RP1=0, select bank0
  4094     07E1  07D7               	addwf	_i,f
  4095     07E2  1803               	skipnc
  4096     07E3  0AD8               	incf	_i+1,f
  4097     07E4  3000               	movlw	0
  4098     07E5  07D8               	addwf	_i+1,f
  4099     07E6  2EAD               	goto	l1707
  4100     07E7                     l126:
  4101     07E7  0008               	return
  4102     07E8                     __end_of_Mode_6:
  4103                           
  4104                           	psect	text18
  4105     0519                     __ptext18:	
  4106 ;; *************** function _Mode_4 *****************
  4107 ;; Defined at:
  4108 ;;		line 109 in file "../PIC_AUTO.X/function.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;		None
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;		None
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0, pclath, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4122 ;;      Params:         0       0       0       0       0
  4123 ;;      Locals:         0       0       0       0       0
  4124 ;;      Temps:          3       0       0       0       0
  4125 ;;      Totals:         3       0       0       0       0
  4126 ;;Total ram usage:        3 bytes
  4127 ;; Hardware stack levels used: 1
  4128 ;; Hardware stack levels required when called: 1
  4129 ;; This function calls:
  4130 ;;		___wmul
  4131 ;; This function is called by:
  4132 ;;		_Test
  4133 ;;		_Auto
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137     0519                     _Mode_4:	
  4138                           ;psect for function _Mode_4
  4139                           
  4140     0519                     l1611:	
  4141                           ;incstack = 0
  4142                           ; Regs used in _Mode_4: [wreg+status,2+status,0+pclath+cstack]
  4143                           
  4144                           
  4145                           ;../PIC_AUTO.X/function.c: 111:     k=0;
  4146     0519  1283               	bcf	3,5	;RP0=0, select bank0
  4147     051A  1303               	bcf	3,6	;RP1=0, select bank0
  4148     051B  01D3               	clrf	_k
  4149     051C  01D4               	clrf	_k+1
  4150     051D                     l1613:
  4151     051D  1683               	bsf	3,5	;RP0=1, select bank1
  4152     051E  1303               	bcf	3,6	;RP1=0, select bank1
  4153     051F  1308               	bcf	8,6	;volatile
  4154     0520                     l1615:
  4155     0520  1288               	bcf	8,5	;volatile
  4156     0521                     l1617:
  4157                           
  4158                           ;../PIC_AUTO.X/function.c: 112:     TRISB0=TRISB1=TRISB3=TRISB4=TRISD3=TRISD2=TRISD5=TRI
      +                          SD6=0;
  4159     0521  1108               	bcf	8,2	;volatile
  4160     0522  1188               	bcf	8,3	;volatile
  4161     0523  1206               	bcf	6,4	;volatile
  4162     0524  1186               	bcf	6,3	;volatile
  4163     0525  1086               	bcf	6,1	;volatile
  4164     0526  1006               	bcf	6,0	;volatile
  4165     0527                     l1619:
  4166                           
  4167                           ;../PIC_AUTO.X/function.c: 113:     TRISB2=TRISB5=TRISD1=TRISD4=1;
  4168     0527  1608               	bsf	8,4	;volatile
  4169     0528  1A08               	btfsc	8,4	;volatile
  4170     0529  2D2B               	goto	u1271
  4171     052A  2D2F               	goto	u1270
  4172     052B                     u1271:
  4173     052B  1683               	bsf	3,5	;RP0=1, select bank1
  4174     052C  1303               	bcf	3,6	;RP1=0, select bank1
  4175     052D  1488               	bsf	8,1	;volatile
  4176     052E  2D32               	goto	u1284
  4177     052F                     u1270:
  4178     052F  1683               	bsf	3,5	;RP0=1, select bank1
  4179     0530  1303               	bcf	3,6	;RP1=0, select bank1
  4180     0531  1088               	bcf	8,1	;volatile
  4181     0532                     u1284:
  4182     0532  1888               	btfsc	8,1	;volatile
  4183     0533  2D35               	goto	u1281
  4184     0534  2D39               	goto	u1280
  4185     0535                     u1281:
  4186     0535  1683               	bsf	3,5	;RP0=1, select bank1
  4187     0536  1303               	bcf	3,6	;RP1=0, select bank1
  4188     0537  1686               	bsf	6,5	;volatile
  4189     0538  2D3C               	goto	u1294
  4190     0539                     u1280:
  4191     0539  1683               	bsf	3,5	;RP0=1, select bank1
  4192     053A  1303               	bcf	3,6	;RP1=0, select bank1
  4193     053B  1286               	bcf	6,5	;volatile
  4194     053C                     u1294:
  4195     053C  1A86               	btfsc	6,5	;volatile
  4196     053D  2D3F               	goto	u1291
  4197     053E  2D43               	goto	u1290
  4198     053F                     u1291:
  4199     053F  1683               	bsf	3,5	;RP0=1, select bank1
  4200     0540  1303               	bcf	3,6	;RP1=0, select bank1
  4201     0541  1506               	bsf	6,2	;volatile
  4202     0542  2D46               	goto	u1304
  4203     0543                     u1290:
  4204     0543  1683               	bsf	3,5	;RP0=1, select bank1
  4205     0544  1303               	bcf	3,6	;RP1=0, select bank1
  4206     0545  1106               	bcf	6,2	;volatile
  4207     0546                     u1304:
  4208                           
  4209                           ;../PIC_AUTO.X/function.c: 114:     for(i=0;i<2;i++)
  4210     0546  1283               	bcf	3,5	;RP0=0, select bank0
  4211     0547  1303               	bcf	3,6	;RP1=0, select bank0
  4212     0548  01D7               	clrf	_i
  4213     0549  01D8               	clrf	_i+1
  4214     054A                     l1621:
  4215     054A  3000               	movlw	0
  4216     054B  0258               	subwf	_i+1,w
  4217     054C  3002               	movlw	2
  4218     054D  1903               	skipnz
  4219     054E  0257               	subwf	_i,w
  4220     054F  1C03               	skipc
  4221     0550  2D52               	goto	u1311
  4222     0551  2D53               	goto	u1310
  4223     0552                     u1311:
  4224     0552  2D54               	goto	l1625
  4225     0553                     u1310:
  4226     0553  2E69               	goto	l121
  4227     0554                     l1625:
  4228                           
  4229                           ;../PIC_AUTO.X/function.c: 115:     {;../PIC_AUTO.X/function.c: 116:         for(j=0;j<2
      +                          ;j++)
  4230     0554  01D5               	clrf	_j
  4231     0555  01D6               	clrf	_j+1
  4232     0556                     l1627:
  4233     0556  3000               	movlw	0
  4234     0557  0256               	subwf	_j+1,w
  4235     0558  3002               	movlw	2
  4236     0559  1903               	skipnz
  4237     055A  0255               	subwf	_j,w
  4238     055B  1C03               	skipc
  4239     055C  2D5E               	goto	u1321
  4240     055D  2D5F               	goto	u1320
  4241     055E                     u1321:
  4242     055E  2D60               	goto	l119
  4243     055F                     u1320:
  4244     055F  2E5A               	goto	l1657
  4245     0560                     l119:
  4246                           
  4247                           ;../PIC_AUTO.X/function.c: 117:         {;../PIC_AUTO.X/function.c: 118:             RB0
      +                          =RB3=RD3=RD5=(__bit)i;
  4248     0560  1857               	btfsc	_i,0
  4249     0561  2D63               	goto	u1331
  4250     0562  2D67               	goto	u1330
  4251     0563                     u1331:
  4252     0563  1283               	bcf	3,5	;RP0=0, select bank0
  4253     0564  1303               	bcf	3,6	;RP1=0, select bank0
  4254     0565  1688               	bsf	8,5	;volatile
  4255     0566  2D6A               	goto	u1344
  4256     0567                     u1330:
  4257     0567  1283               	bcf	3,5	;RP0=0, select bank0
  4258     0568  1303               	bcf	3,6	;RP1=0, select bank0
  4259     0569  1288               	bcf	8,5	;volatile
  4260     056A                     u1344:
  4261     056A  1A88               	btfsc	8,5	;volatile
  4262     056B  2D6D               	goto	u1341
  4263     056C  2D71               	goto	u1340
  4264     056D                     u1341:
  4265     056D  1283               	bcf	3,5	;RP0=0, select bank0
  4266     056E  1303               	bcf	3,6	;RP1=0, select bank0
  4267     056F  1588               	bsf	8,3	;volatile
  4268     0570  2D74               	goto	u1354
  4269     0571                     u1340:
  4270     0571  1283               	bcf	3,5	;RP0=0, select bank0
  4271     0572  1303               	bcf	3,6	;RP1=0, select bank0
  4272     0573  1188               	bcf	8,3	;volatile
  4273     0574                     u1354:
  4274     0574  1988               	btfsc	8,3	;volatile
  4275     0575  2D77               	goto	u1351
  4276     0576  2D7B               	goto	u1350
  4277     0577                     u1351:
  4278     0577  1283               	bcf	3,5	;RP0=0, select bank0
  4279     0578  1303               	bcf	3,6	;RP1=0, select bank0
  4280     0579  1586               	bsf	6,3	;volatile
  4281     057A  2D7E               	goto	u1364
  4282     057B                     u1350:
  4283     057B  1283               	bcf	3,5	;RP0=0, select bank0
  4284     057C  1303               	bcf	3,6	;RP1=0, select bank0
  4285     057D  1186               	bcf	6,3	;volatile
  4286     057E                     u1364:
  4287     057E  1986               	btfsc	6,3	;volatile
  4288     057F  2D81               	goto	u1361
  4289     0580  2D85               	goto	u1360
  4290     0581                     u1361:
  4291     0581  1283               	bcf	3,5	;RP0=0, select bank0
  4292     0582  1303               	bcf	3,6	;RP1=0, select bank0
  4293     0583  1406               	bsf	6,0	;volatile
  4294     0584  2D88               	goto	u1374
  4295     0585                     u1360:
  4296     0585  1283               	bcf	3,5	;RP0=0, select bank0
  4297     0586  1303               	bcf	3,6	;RP1=0, select bank0
  4298     0587  1006               	bcf	6,0	;volatile
  4299     0588                     u1374:
  4300                           
  4301                           ;../PIC_AUTO.X/function.c: 119:             RB1=RB4=RD2=RD6=(__bit)j;
  4302     0588  1855               	btfsc	_j,0
  4303     0589  2D8B               	goto	u1381
  4304     058A  2D8F               	goto	u1380
  4305     058B                     u1381:
  4306     058B  1283               	bcf	3,5	;RP0=0, select bank0
  4307     058C  1303               	bcf	3,6	;RP1=0, select bank0
  4308     058D  1708               	bsf	8,6	;volatile
  4309     058E  2D92               	goto	u1394
  4310     058F                     u1380:
  4311     058F  1283               	bcf	3,5	;RP0=0, select bank0
  4312     0590  1303               	bcf	3,6	;RP1=0, select bank0
  4313     0591  1308               	bcf	8,6	;volatile
  4314     0592                     u1394:
  4315     0592  1B08               	btfsc	8,6	;volatile
  4316     0593  2D95               	goto	u1391
  4317     0594  2D99               	goto	u1390
  4318     0595                     u1391:
  4319     0595  1283               	bcf	3,5	;RP0=0, select bank0
  4320     0596  1303               	bcf	3,6	;RP1=0, select bank0
  4321     0597  1508               	bsf	8,2	;volatile
  4322     0598  2D9C               	goto	u1404
  4323     0599                     u1390:
  4324     0599  1283               	bcf	3,5	;RP0=0, select bank0
  4325     059A  1303               	bcf	3,6	;RP1=0, select bank0
  4326     059B  1108               	bcf	8,2	;volatile
  4327     059C                     u1404:
  4328     059C  1908               	btfsc	8,2	;volatile
  4329     059D  2D9F               	goto	u1401
  4330     059E  2DA3               	goto	u1400
  4331     059F                     u1401:
  4332     059F  1283               	bcf	3,5	;RP0=0, select bank0
  4333     05A0  1303               	bcf	3,6	;RP1=0, select bank0
  4334     05A1  1606               	bsf	6,4	;volatile
  4335     05A2  2DA6               	goto	u1414
  4336     05A3                     u1400:
  4337     05A3  1283               	bcf	3,5	;RP0=0, select bank0
  4338     05A4  1303               	bcf	3,6	;RP1=0, select bank0
  4339     05A5  1206               	bcf	6,4	;volatile
  4340     05A6                     u1414:
  4341     05A6  1A06               	btfsc	6,4	;volatile
  4342     05A7  2DA9               	goto	u1411
  4343     05A8  2DAD               	goto	u1410
  4344     05A9                     u1411:
  4345     05A9  1283               	bcf	3,5	;RP0=0, select bank0
  4346     05AA  1303               	bcf	3,6	;RP1=0, select bank0
  4347     05AB  1486               	bsf	6,1	;volatile
  4348     05AC  2DB0               	goto	u1424
  4349     05AD                     u1410:
  4350     05AD  1283               	bcf	3,5	;RP0=0, select bank0
  4351     05AE  1303               	bcf	3,6	;RP1=0, select bank0
  4352     05AF  1086               	bcf	6,1	;volatile
  4353     05B0                     u1424:
  4354     05B0                     l1631:
  4355                           
  4356                           ;../PIC_AUTO.X/function.c: 120:             k=(int)RB2;
  4357     05B0  1003               	clrc
  4358     05B1  1906               	btfsc	6,2	;volatile
  4359     05B2  1403               	setc
  4360     05B3  3000               	movlw	0
  4361     05B4  1803               	skipnc
  4362     05B5  3001               	movlw	1
  4363     05B6  00F6               	movwf	??_Mode_4
  4364     05B7  01F7               	clrf	??_Mode_4+1
  4365     05B8  0876               	movf	??_Mode_4,w
  4366     05B9  00D3               	movwf	_k
  4367     05BA  0877               	movf	??_Mode_4+1,w
  4368     05BB  00D4               	movwf	_k+1
  4369     05BC                     l1633:
  4370                           
  4371                           ;../PIC_AUTO.X/function.c: 121:             gate[0]*=10;
  4372     05BC  300A               	movlw	10
  4373     05BD  00F0               	movwf	___wmul@multiplier
  4374     05BE  3000               	movlw	0
  4375     05BF  00F1               	movwf	___wmul@multiplier+1
  4376     05C0  0846               	movf	_gate+1,w
  4377     05C1  00F3               	movwf	___wmul@multiplicand+1
  4378     05C2  0845               	movf	_gate,w
  4379     05C3  00F2               	movwf	___wmul@multiplicand
  4380     05C4  120A  118A  208F  120A  118A  	fcall	___wmul
  4381     05C9  0871               	movf	?___wmul+1,w
  4382     05CA  1283               	bcf	3,5	;RP0=0, select bank0
  4383     05CB  1303               	bcf	3,6	;RP1=0, select bank0
  4384     05CC  00C6               	movwf	_gate+1
  4385     05CD  0870               	movf	?___wmul,w
  4386     05CE  00C5               	movwf	_gate
  4387     05CF                     l1635:
  4388                           
  4389                           ;../PIC_AUTO.X/function.c: 122:             gate[0]+=k;
  4390     05CF  0853               	movf	_k,w
  4391     05D0  07C5               	addwf	_gate,f
  4392     05D1  1803               	skipnc
  4393     05D2  0AC6               	incf	_gate+1,f
  4394     05D3  0854               	movf	_k+1,w
  4395     05D4  07C6               	addwf	_gate+1,f
  4396     05D5                     l1637:
  4397                           
  4398                           ;../PIC_AUTO.X/function.c: 123:             k=(int)RB5;
  4399     05D5  1003               	clrc
  4400     05D6  1A86               	btfsc	6,5	;volatile
  4401     05D7  1403               	setc
  4402     05D8  3000               	movlw	0
  4403     05D9  1803               	skipnc
  4404     05DA  3001               	movlw	1
  4405     05DB  00F6               	movwf	??_Mode_4
  4406     05DC  01F7               	clrf	??_Mode_4+1
  4407     05DD  0876               	movf	??_Mode_4,w
  4408     05DE  00D3               	movwf	_k
  4409     05DF  0877               	movf	??_Mode_4+1,w
  4410     05E0  00D4               	movwf	_k+1
  4411     05E1                     l1639:
  4412                           
  4413                           ;../PIC_AUTO.X/function.c: 124:             gate[1]*=10;
  4414     05E1  300A               	movlw	10
  4415     05E2  00F0               	movwf	___wmul@multiplier
  4416     05E3  3000               	movlw	0
  4417     05E4  00F1               	movwf	___wmul@multiplier+1
  4418     05E5  0848               	movf	_gate+3,w
  4419     05E6  00F3               	movwf	___wmul@multiplicand+1
  4420     05E7  0847               	movf	_gate+2,w
  4421     05E8  00F2               	movwf	___wmul@multiplicand
  4422     05E9  120A  118A  208F  120A  118A  	fcall	___wmul
  4423     05EE  0871               	movf	?___wmul+1,w
  4424     05EF  1283               	bcf	3,5	;RP0=0, select bank0
  4425     05F0  1303               	bcf	3,6	;RP1=0, select bank0
  4426     05F1  00C8               	movwf	_gate+3
  4427     05F2  0870               	movf	?___wmul,w
  4428     05F3  00C7               	movwf	_gate+2
  4429                           
  4430                           ;../PIC_AUTO.X/function.c: 125:             gate[1]+=k;
  4431     05F4  0853               	movf	_k,w
  4432     05F5  07C7               	addwf	_gate+2,f
  4433     05F6  1803               	skipnc
  4434     05F7  0AC8               	incf	_gate+3,f
  4435     05F8  0854               	movf	_k+1,w
  4436     05F9  07C8               	addwf	_gate+3,f
  4437     05FA                     l1641:
  4438                           
  4439                           ;../PIC_AUTO.X/function.c: 126:             k=(int)RD1;
  4440     05FA  1003               	clrc
  4441     05FB  1888               	btfsc	8,1	;volatile
  4442     05FC  1403               	setc
  4443     05FD  3000               	movlw	0
  4444     05FE  1803               	skipnc
  4445     05FF  3001               	movlw	1
  4446     0600  00F6               	movwf	??_Mode_4
  4447     0601  01F7               	clrf	??_Mode_4+1
  4448     0602  0876               	movf	??_Mode_4,w
  4449     0603  00D3               	movwf	_k
  4450     0604  0877               	movf	??_Mode_4+1,w
  4451     0605  00D4               	movwf	_k+1
  4452     0606                     l1643:
  4453                           
  4454                           ;../PIC_AUTO.X/function.c: 127:             gate[2]*=10;
  4455     0606  300A               	movlw	10
  4456     0607  00F0               	movwf	___wmul@multiplier
  4457     0608  3000               	movlw	0
  4458     0609  00F1               	movwf	___wmul@multiplier+1
  4459     060A  084A               	movf	_gate+5,w
  4460     060B  00F3               	movwf	___wmul@multiplicand+1
  4461     060C  0849               	movf	_gate+4,w
  4462     060D  00F2               	movwf	___wmul@multiplicand
  4463     060E  120A  118A  208F  120A  118A  	fcall	___wmul
  4464     0613  0871               	movf	?___wmul+1,w
  4465     0614  1283               	bcf	3,5	;RP0=0, select bank0
  4466     0615  1303               	bcf	3,6	;RP1=0, select bank0
  4467     0616  00CA               	movwf	_gate+5
  4468     0617  0870               	movf	?___wmul,w
  4469     0618  00C9               	movwf	_gate+4
  4470     0619                     l1645:
  4471                           
  4472                           ;../PIC_AUTO.X/function.c: 128:             gate[2]+=k;
  4473     0619  0853               	movf	_k,w
  4474     061A  07C9               	addwf	_gate+4,f
  4475     061B  1803               	skipnc
  4476     061C  0ACA               	incf	_gate+5,f
  4477     061D  0854               	movf	_k+1,w
  4478     061E  07CA               	addwf	_gate+5,f
  4479     061F                     l1647:
  4480                           
  4481                           ;../PIC_AUTO.X/function.c: 129:             k=(int)RD4;
  4482     061F  1003               	clrc
  4483     0620  1A08               	btfsc	8,4	;volatile
  4484     0621  1403               	setc
  4485     0622  3000               	movlw	0
  4486     0623  1803               	skipnc
  4487     0624  3001               	movlw	1
  4488     0625  00F6               	movwf	??_Mode_4
  4489     0626  01F7               	clrf	??_Mode_4+1
  4490     0627  0876               	movf	??_Mode_4,w
  4491     0628  00D3               	movwf	_k
  4492     0629  0877               	movf	??_Mode_4+1,w
  4493     062A  00D4               	movwf	_k+1
  4494                           
  4495                           ;../PIC_AUTO.X/function.c: 130:             gate[3]*=10;
  4496     062B  300A               	movlw	10
  4497     062C  00F0               	movwf	___wmul@multiplier
  4498     062D  3000               	movlw	0
  4499     062E  00F1               	movwf	___wmul@multiplier+1
  4500     062F  084C               	movf	_gate+7,w
  4501     0630  00F3               	movwf	___wmul@multiplicand+1
  4502     0631  084B               	movf	_gate+6,w
  4503     0632  00F2               	movwf	___wmul@multiplicand
  4504     0633  120A  118A  208F  120A  118A  	fcall	___wmul
  4505     0638  0871               	movf	?___wmul+1,w
  4506     0639  1283               	bcf	3,5	;RP0=0, select bank0
  4507     063A  1303               	bcf	3,6	;RP1=0, select bank0
  4508     063B  00CC               	movwf	_gate+7
  4509     063C  0870               	movf	?___wmul,w
  4510     063D  00CB               	movwf	_gate+6
  4511     063E                     l1649:
  4512                           
  4513                           ;../PIC_AUTO.X/function.c: 131:             gate[3]+=k;
  4514     063E  0853               	movf	_k,w
  4515     063F  07CB               	addwf	_gate+6,f
  4516     0640  1803               	skipnc
  4517     0641  0ACC               	incf	_gate+7,f
  4518     0642  0854               	movf	_k+1,w
  4519     0643  07CC               	addwf	_gate+7,f
  4520     0644                     l1651:
  4521                           
  4522                           ;../PIC_AUTO.X/function.c: 132:             _delay((unsigned long)((100)*(20000000/4000.
      +                          0)));
  4523     0644  3003               	movlw	3
  4524     0645  00F8               	movwf	??_Mode_4+2
  4525     0646  308A               	movlw	138
  4526     0647  00F7               	movwf	??_Mode_4+1
  4527     0648  3055               	movlw	85
  4528     0649  00F6               	movwf	??_Mode_4
  4529     064A                     u1957:
  4530     064A  0BF6               	decfsz	??_Mode_4,f
  4531     064B  2E4A               	goto	u1957
  4532     064C  0BF7               	decfsz	??_Mode_4+1,f
  4533     064D  2E4A               	goto	u1957
  4534     064E  0BF8               	decfsz	??_Mode_4+2,f
  4535     064F  2E4A               	goto	u1957
  4536     0650  2E51               	nop2
  4537     0651                     l1653:
  4538                           
  4539                           ;../PIC_AUTO.X/function.c: 133:         }
  4540     0651  3001               	movlw	1
  4541     0652  1283               	bcf	3,5	;RP0=0, select bank0
  4542     0653  1303               	bcf	3,6	;RP1=0, select bank0
  4543     0654  07D5               	addwf	_j,f
  4544     0655  1803               	skipnc
  4545     0656  0AD6               	incf	_j+1,f
  4546     0657  3000               	movlw	0
  4547     0658  07D6               	addwf	_j+1,f
  4548     0659  2D56               	goto	l1627
  4549     065A                     l1657:
  4550                           
  4551                           ;../PIC_AUTO.X/function.c: 134:     }
  4552     065A  3001               	movlw	1
  4553     065B  07D7               	addwf	_i,f
  4554     065C  1803               	skipnc
  4555     065D  0AD8               	incf	_i+1,f
  4556     065E  3000               	movlw	0
  4557     065F  07D8               	addwf	_i+1,f
  4558     0660  3000               	movlw	0
  4559     0661  0258               	subwf	_i+1,w
  4560     0662  3002               	movlw	2
  4561     0663  1903               	skipnz
  4562     0664  0257               	subwf	_i,w
  4563     0665  1C03               	skipc
  4564     0666  2E68               	goto	u1431
  4565     0667  2E69               	goto	u1430
  4566     0668                     u1431:
  4567     0668  2D54               	goto	l1625
  4568     0669                     u1430:
  4569     0669                     l121:
  4570     0669  0008               	return
  4571     066A                     __end_of_Mode_4:
  4572                           
  4573                           	psect	text19
  4574     008F                     __ptext19:	
  4575 ;; *************** function ___wmul *****************
  4576 ;; Defined at:
  4577 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;  multiplier      2    0[COMMON] unsigned int 
  4580 ;;  multiplicand    2    2[COMMON] unsigned int 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  product         2    4[COMMON] unsigned int 
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  2    0[COMMON] unsigned int 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4592 ;;      Params:         4       0       0       0       0
  4593 ;;      Locals:         2       0       0       0       0
  4594 ;;      Temps:          0       0       0       0       0
  4595 ;;      Totals:         6       0       0       0       0
  4596 ;;Total ram usage:        6 bytes
  4597 ;; Hardware stack levels used: 1
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		_Mode_4
  4602 ;;		_Mode_6
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606     008F                     ___wmul:	
  4607                           ;psect for function ___wmul
  4608                           
  4609     008F                     l1593:	
  4610                           ;incstack = 0
  4611                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4612                           
  4613     008F  01F4               	clrf	___wmul@product
  4614     0090  01F5               	clrf	___wmul@product+1
  4615     0091                     l1595:
  4616     0091  1C70               	btfss	___wmul@multiplier,0
  4617     0092  2894               	goto	u1231
  4618     0093  2895               	goto	u1230
  4619     0094                     u1231:
  4620     0094  289B               	goto	l357
  4621     0095                     u1230:
  4622     0095                     l1597:
  4623     0095  0872               	movf	___wmul@multiplicand,w
  4624     0096  07F4               	addwf	___wmul@product,f
  4625     0097  1803               	skipnc
  4626     0098  0AF5               	incf	___wmul@product+1,f
  4627     0099  0873               	movf	___wmul@multiplicand+1,w
  4628     009A  07F5               	addwf	___wmul@product+1,f
  4629     009B                     l357:
  4630     009B  3001               	movlw	1
  4631     009C                     u1245:
  4632     009C  1003               	clrc
  4633     009D  0DF2               	rlf	___wmul@multiplicand,f
  4634     009E  0DF3               	rlf	___wmul@multiplicand+1,f
  4635     009F  3EFF               	addlw	-1
  4636     00A0  1D03               	skipz
  4637     00A1  289C               	goto	u1245
  4638     00A2                     l1599:
  4639     00A2  3001               	movlw	1
  4640     00A3                     u1255:
  4641     00A3  1003               	clrc
  4642     00A4  0CF1               	rrf	___wmul@multiplier+1,f
  4643     00A5  0CF0               	rrf	___wmul@multiplier,f
  4644     00A6  3EFF               	addlw	-1
  4645     00A7  1D03               	skipz
  4646     00A8  28A3               	goto	u1255
  4647     00A9                     l1601:
  4648     00A9  0870               	movf	___wmul@multiplier,w
  4649     00AA  0471               	iorwf	___wmul@multiplier+1,w
  4650     00AB  1D03               	btfss	3,2
  4651     00AC  28AE               	goto	u1261
  4652     00AD  28AF               	goto	u1260
  4653     00AE                     u1261:
  4654     00AE  2891               	goto	l1595
  4655     00AF                     u1260:
  4656     00AF                     l1603:
  4657     00AF  0875               	movf	___wmul@product+1,w
  4658     00B0  00F1               	movwf	?___wmul+1
  4659     00B1  0874               	movf	___wmul@product,w
  4660     00B2  00F0               	movwf	?___wmul
  4661     00B3                     l359:
  4662     00B3  0008               	return
  4663     00B4                     __end_of___wmul:
  4664     007E                     btemp	set	126	;btemp
  4665     007E                     wtemp0	set	126
  4666                           
  4667                           	psect	config
  4668                           
  4669                           ;Config register CONFIG @ 0x2007
  4670                           ;	Oscillator Selection bits
  4671                           ;	FOSC = HS, HS oscillator
  4672                           ;	Watchdog Timer Enable bit
  4673                           ;	WDTE = OFF, WDT disabled
  4674                           ;	Power-up Timer Enable bit
  4675                           ;	PWRTE = OFF, PWRT disabled
  4676                           ;	Brown-out Reset Enable bit
  4677                           ;	BOREN = ON, BOR enabled
  4678                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4679                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4680                           ;	Data EEPROM Memory Code Protection bit
  4681                           ;	CPD = OFF, Data EEPROM code protection off
  4682                           ;	Flash Program Memory Write Enable bits
  4683                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4684                           ;	In-Circuit Debugger Mode bit
  4685                           ;	DEBUG = 0x1, unprogrammed default
  4686                           ;	Flash Program Memory Code Protection bit
  4687                           ;	CP = OFF, Code protection off
  4688     2007                     	org	8199
  4689     2007  3F7A               	dw	16250

Data Sizes:
    Strings     62
    Constant    57
    Data        14
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     37      57
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 3
		 -> print@charNum(BANK0[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_Write_String@str	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_7(CODE[8]), STR_6(CODE[10]), STR_5(CODE[10]), STR_4(CODE[11]), 
		 -> print@charNum(BANK0[3]), STR_2(CODE[15]), name(CODE[35]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_String
    _LCD_Init->_LCD_CMD
    _Auto->_LCD_Write_String
    _print->_LCD_Write_String
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Write_IC->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_DATA
    _Mode_6->___wmul
    _Mode_4->___wmul

Critical Paths under _main in BANK0

    _main->_Auto
    _Test->_print
    _Auto->_print
    _print->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   26073
                                             34 BANK0      3     3      0
                               _Auto
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                               _Test
                           _Write_IC
                             ___bmul
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _Test                                                 2     0      2    8519
                                             28 BANK0      2     0      2
                             _Mode_4
                             _Mode_6
                             _gate_1
                              _print
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _LCD_CMD
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _Auto                                                 6     6      0   12571
                                             28 BANK0      6     6      0
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                   _LCD_Write_String
                             _Mode_4
                             _Mode_6
                           _Write_IC
                             ___bmul
                             _gate_1
                              _print
 ---------------------------------------------------------------------------------
 (2) _print                                               15    11      4    4109
                                             13 BANK0     15    11      4
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    18      3    1515
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     615
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _gate_1                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               3     2      1     222
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _Write_IC                                             0     0      0    1974
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     7     5      2    1180
                                              6 COMMON     7     5      2
                     _LCD_Write_Char
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       5     5      0     178
                                              1 COMMON     5     5      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       6     5      1     684
                                              4 COMMON     6     5      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (4) _LCD_DATA                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Mode_6                                               3     3      0    2112
                                              6 COMMON     3     3      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _Mode_4                                               3     3      0    2112
                                              6 COMMON     3     3      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2112
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Auto
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_DATA
     _LCD_Write_Char
       _LCD_DATA
     _LCD_Write_String
       _LCD_Write_Char
       ___bmul (ARG)
     _Mode_4
       ___wmul
     _Mode_6
       ___wmul
     _Write_IC
       _LCD_Clear
         _LCD_CMD
       _LCD_Set_Cursor
       _LCD_Write_String
     ___bmul
     _gate_1
     _print
       _LCD_Set_Cursor
       _LCD_Write_String
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _LCD_Clear
   _LCD_Init
     _LCD_CMD
     _LCD_DATA
   _LCD_Set_Cursor
   _LCD_Write_String
   _Test
     _Mode_4
     _Mode_6
     _gate_1
     _print
   _Write_IC
   ___bmul
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     25      39       5       71.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Sep 07 22:55:59 2023

                       _i 0057                         _j 0055                         _k 0053  
                       _n 0051                         pc 0002            ___bmul@product 0071  
                      l90 0FFF                        l85 0E4F                        l96 042E  
                      l98 0518                        fsr 0004       ___wmul@multiplicand 0072  
                     l104 04C3                       l121 0669                       l114 01F7  
                     l131 0E8A                       l124 06B7                       l126 07E7  
                     l119 0560                       l160 0EAB                       l162 0EAC  
                     l154 0E94                       l155 0E97                       l156 0E9D  
                     l157 0E9E                       l165 0E69                       l173 0FB1  
                     l158 0EA4                       l159 0EA5                       l168 0E02  
                     l176 0169                       l185 0F28                       l353 02D1  
                     l179 0102                       l357 009B                       l359 00B3  
                     l383 0E38                       l629 0F6C                       l639 0EE6  
                     _RA0 0028                       _RA1 0029                       _RB0 0030  
                     _RA2 002A                       _RB1 0031                       _RA3 002B  
                     _RB2 0032                       _RB3 0033                       _RB4 0034  
                     _RC2 003A                       _RB5 0035                       _RD1 0041  
                     _RC3 003B                       _RD2 0042                       _RC4 003C  
                     _RD3 0043                       _RC5 003D                       _RD4 0044  
                     _RC6 003E                       _RD5 0045                       _RC7 003F  
                     _RD6 0046                       u910 0E90                       u911 0E8F  
                     u920 0E9B                       u921 0E9A                       u930 0EA2  
                     u931 0EA1                       u940 0EA9                       u941 0EA8  
                     u960 0F31                       u961 0F30                       u955 00C1  
                     u980 0F43                       u981 0F42                       u975 0F35  
                     u995 0F44                       fsr0 0004                       indf 0000  
         __end_of_LCD_CMD 0E6A            _LCD_Set_Cursor 0F6D                      l1411 0E9B  
                    l1413 0EA2                      l1501 0F6E                      l1421 00BE  
                    l1415 0EA9                      l1407 0E8C                      l1503 0F73  
                    l1511 0F8F                      l1431 00E4                      l1423 00CC  
                    l1601 00A9                      l1409 0E90                      l1441 0E51  
                    l1513 0F95                      l1505 0F80                      l1433 00EA  
                    l1425 00CF                      l1417 00B5                      l1521 0EE7  
                    l1603 00AF                      l1611 0519                      l1443 0E54  
                    l1515 0FA2                      l1507 0F83                      l1435 00ED  
                    l1427 00D8                      l1419 00BB                      l1523 0EEA  
                    l1451 0F29                      l1531 01FE                      l1621 054A  
                    l1613 051D                      l1701 066A                      l1445 0E5A  
                    l1517 0FA5                      l1509 0F89                      l1437 00F6  
                    l1429 00DB                      l1525 0F06                      l1461 0F3F  
                    l1453 0F2B                      l1541 020F                      l1533 0204  
                    l1631 05B0                      l1615 0520                      l1711 06F3  
                    l1703 066E                      l1447 0E5D                      l1519 0FAB  
                    l1439 00F9                      l1527 0F0C                      l1607 0E39  
                    l1471 0F62                      l1463 0F43                      l1455 0F31  
                    l1551 0240                      l1543 022C                      l1535 0209  
                    l1641 05FA                      l1633 05BC                      l1625 0554  
                    l1617 0521                      l1721 073D                      l1713 06FF  
                    l1705 0676                      l1449 0E66                      l1609 0E46  
                    l1465 0F54                      l1457 0F34                      l1473 0F68  
                    l1481 0EB6                      l1553 0245                      l1545 0234  
                    l1537 020E                      l1529 01FB                      l1801 0444  
                    l1651 0644                      l1643 0606                      l1635 05CF  
                    l1627 0556                      l1619 0527                      l1731 0787  
                    l1723 0749                      l1715 0712                      l1707 06AD  
                    l1467 0F5A                      l1459 0F3B                      l1491 0ED5  
                    l1483 0EBD                      l1571 0278                      l1563 0263  
                    l1547 0238                      l1803 046B                      l1653 0651  
                    l1645 0619                      l1637 05D5                      l1741 07D1  
                    l1733 0793                      l1725 075C                      l1717 0718  
                    l1469 0F5B                      l1493 0EDC                      l1485 0EC1  
                    l1477 0EAD                      l1581 02B4                      l1573 027C  
                    l1565 0267                      l1549 023C                      l1661 016A  
                    l1821 048A                      l1813 0479                      l1901 0300  
                    l1647 061F                      l1639 05E1                      l1743 07DE  
                    l1735 07A6                      l1727 0762                      l1719 0724  
                    l1751 0E2A                      l1487 0EC5                      l1479 0EB3  
                    l1495 0EE2                      l1575 027F                      l1567 026D  
                    l1559 0247                      l1583 02BD                      l1671 01A7  
                    l1663 0172                      l1831 04BD                      l1823 048E  
                    l1911 0344                      l1903 0317                      l1593 008F  
                    l1649 063E                      l1657 065A                      l1737 07B8  
                    l1729 0781                      l1753 0E2E                      l1489 0ECF  
                    l1577 02AB                      l1569 0273                      l1585 02CD  
                    l1681 01D4                      l1673 01B3                      l1665 0176  
                    l1841 0501                      l1833 04D2                      l1825 0490  
                    l1817 0480                      l1809 0471                      l1921 0388  
                    l1913 035B                      l1905 031C                      l1595 0091  
                    l1739 07CB                      l1499 0DF6                      l1755 0E30  
                    l1747 0E25                      l1691 0E6E                      l1579 02B0  
                    l1683 01DD                      l1675 01BC                      l1667 0179  
                    l1659 016A                      l1843 050F                      l1835 04D9  
                    l1819 0485                      l1851 0108                      l1771 0FD8  
                    l1763 0FB2                      l1923 03AB                      l1915 0360  
                    l1907 032F       LCD_Write_String@str 0076                      l1597 0095  
                    l1757 0E32                      l1749 0E26                      l1685 01E6  
                    l1669 019F                      l1677 01C4                      l1829 049A  
                    l1781 03E6                      l1861 012E                      l1853 010E  
                    l1845 0103                      l1765 0FBD                      l1773 0FDD  
                    l1925 03BA                      l1917 0373                      l1909 033E  
                    l1599 00A2                      l1759 0E37                      l1695 0E78  
                    l1951 0221                      l1687 01EE                      l1679 01CA  
                    l1791 03F8                      l1783 03EB                      l1871 014B  
                    l1863 0134                      l1855 0116                      l1847 0106  
                    l1775 0FE6                      l1767 0FC4                      l1927 03C0  
                    l1919 0382                      l1697 0E83                      l1689 0E6A  
                    l1785 03F0                      l1873 0151                      l1865 0139  
                    l1857 011F                      l1849 0107                      l1777 0FEB  
                    l1769 0FC9                      l1929 03D3                      l1795 0402  
                    l1787 03F4                      l1875 0157                      l1867 013F  
                    l1859 0125                      l1779 0FFA                      l1891 02DF  
                    l1797 0428                      l1789 03F6                      l1877 015D  
                    l1869 0145                      l1893 02E4                      l1885 02D2  
                    l1799 043D                      l1879 0163                      l1895 02E9  
                    l1887 02D8                      l1897 02F1                      l1889 02DB  
                    l1899 02FA                      STR_1 0082                      STR_2 004C  
                    STR_3 0087                      STR_4 005B                      STR_5 0070  
                    STR_6 0066                      STR_7 007A                      u1000 0F54  
                    u1001 0F53                      u1020 0F68                      u1021 0F67  
                    u1005 0F50                      u1110 0F95                      u1030 0EB3  
                    u1111 0F94                      u1015 0F5C                      u1031 0EB2  
                    u1200 0273                      u1105 0F79                      u1201 0272  
                    u1130 0EF4                      u1050 0EC5                      u1210 02BD  
                    u1051 0EC4                      u1211 02BC                      u1140 0F16  
                    u1060 0ECF                      u1220 02CD                      u1125 0F9B  
                    u1061 0ECE                      u1045 0EB7                      u1221 02CC  
                    u1230 0095                      u1310 0553                      u1150 0F28  
                    u1231 0094                      u1311 0552                      u1151 0F27  
                    u1400 05A3                      u1320 055F                      u1304 0546  
                    u1080 0EE2                      u1160 0204                      u1401 059F  
                    u1321 055E                      u1081 0EE1                      u1065 0ECB  
                    u1161 0203                      u1410 05AD                      u1330 0567  
                    u1090 0F73                      u1170 023C                      u1411 05A9  
                    u1331 0563                      u1091 0F72                      u1075 0ED6  
                    u1171 023B                      u1260 00AF                      u1404 059C  
                    u1340 0571                      u1500 0688                      u1180 0262  
                    u1261 00AE                      u1245 009C                      u1341 056D  
                    u1501 0684                      u1181 0261                      u1430 0669  
                    u1414 05A6                      u1350 057B                      u1270 052F  
                    u1510 0692                      u1190 026D                      u1255 00A3  
                    u1431 0668                      u1351 0577                      u1271 052B  
                    u1511 068E                      u1191 026C                      u1424 05B0  
                    u1360 0585                      u1344 056A                      u1280 0539  
                    u1600 06E6                      u1520 069C                      u1504 0681  
                    u1440 019F                      u1361 0581                      u1281 0535  
                    u1601 06E2                      u1521 0698                      u1185 025E  
                    u1441 019E                      u1354 0574                      u1290 0543  
                    u1610 06F0                      u1530 06A6                      u1514 068B  
                    u1450 01D4                      u1291 053F                      u1611 06EC  
                    u1531 06A2                      u1451 01D3                      u1380 058F  
                    u1364 057E                      u1284 0532                      u1604 06DF  
                    u1524 0695                      u1460 01DD                      u1700 043D  
                    u1381 058B                      u1461 01DC                      u1445 019B  
                    u1701 043C                      u1390 0599                      u1374 0588  
                    u1294 053C                      u1614 06E9                      u1550 06B6  
                    u1534 069F                      u1630 0E2A                      u1470 01EE  
                    u1710 0444                      u1391 0595                      u1551 06B5  
                    u1631 0E29                      u1471 01ED                      u1455 01D0  
                    u1711 0443                      u1624 06F3                      u1560 06BE  
                    u1544 06A9                      u1640 0E37                      u1480 0E77  
                    u1720 0478                      u1800 03C0                      u1561 06BA  
                    u1641 0E36                      u1481 0E76                      u1721 0477  
                    u1801 03BF                      u1394 0592                      u1570 06C8  
                    u1490 067E                      u1730 0499                      u1650 0FBD  
                    u1571 06C4                      u1491 067A                      u1731 0498  
                    u1651 0FBC                      u1580 06D2                      u1740 04BD  
                    u1660 0FC4                      u1581 06CE                      u1741 04BC  
                    u1661 0FC3                      u1590 06DC                      u1574 06C1  
                    u1750 04D2                      u1670 0FE6                      u1591 06D8  
                    u1751 04D1                      u1671 0FE5                      u1584 06CB  
                    u1760 04D9                      u1680 0401                      u1761 04D8  
                    u1745 04B9                      u1681 0400                      u1817 0337  
                    u1594 06D5                      u1690 0428                      u1770 0300  
                    u1907 00DF                      u1691 0427                      u1827 037B  
                    u1771 02FF                      u1780 0344                      u1917 00F1  
                    u1837 03B3                      u1781 0343                      u1790 0388  
                    u1927 00FD                      u1695 0424                      u1847 03DB  
                    u1791 0387                      u1937 0E61                      u1857 0112  
                    u1947 07D7                      u1867 011A                      u1957 064A  
                    u1877 0129                      u1887 0136                      u1897 00D3  
                    _Auto 03E6                      _Test 0FB2         ?_LCD_Write_String 0076  
                    _gate 0045                      _main 02D2                      _name 0029  
                    btemp 007E                      start 0000        ??_LCD_Write_String 0078  
       ___bmul@multiplier 0072          __end_of_LCD_DATA 0EAD          __end_of_LCD_Init 016A  
                   ?_Auto 0070                     ?_Test 003C                     ?_main 0070  
         __end_of___lwdiv 0F6D           __end_of___lwmod 0EE7                     _TRISC 0087  
  __end_of_LCD_Set_Cursor 0FB2                     Test@n 003C           __end_of_dpowers 0029  
                   _print 016A                     _truth 0013                     pclath 000A  
                   status 0003                     wtemp0 007E           __end_of_sprintf 02D2  
          _LCD_Write_Char 00B4              __end_of_Auto 0519           __initialization 07E8  
            __end_of_Test 1000              __end_of_main 03E6              __end_of_name 004C  
                  ??_Auto 003C                    ??_Test 007D                    ??_main 0042  
       __end_of_LCD_Clear 0E03                 ??_LCD_CMD 0071           ?_LCD_Set_Cursor 0074  
                  _ADCON0 001F                    _ADCON1 009F                    ?_print 002D  
        __end_of_Write_IC 0E50                    _TRISA0 0428                    _TRISA1 0429  
                  _TRISB0 0430                    _TRISA2 042A                    _TRISB1 0431  
                  _TRISA3 042B                    _TRISB2 0432                    _TRISB3 0433  
                  _TRISB4 0434                    _TRISB5 0435                    _TRISD1 0441  
                  _TRISD2 0442                    _TRISD3 0443                    _TRISD4 0444  
                  _TRISC6 043E                    _TRISD5 0445                    _TRISC7 043F  
                  _TRISD6 0446    __end_of_LCD_Write_Char 0103                    _Mode_4 0519  
                  _Mode_6 066A                    ___bmul 0E24                    ___wmul 008F  
                  _gate_1 0E6A                 ??___lwdiv 0074                 ??___lwmod 007B  
                  print@n 002D                 ??_sprintf 0023           LCD_Set_Cursor@c 0074  
         LCD_Set_Cursor@r 0076                 ?_LCD_DATA 0070   __end_of__initialization 07FC  
               ?_LCD_Init 0070           ?_LCD_Write_Char 0070       ___bmul@multiplicand 0070  
          __pcstackCOMMON 0070              __pidataBANK0 0E03             __end_of_print 01F8  
           __end_of_truth 001F                   ??_print 0031                __pbssBANK0 0053  
              ??_LCD_DATA 0070                ??_LCD_Init 0074                   ?_Mode_4 0070  
                 ?_Mode_6 0070                __pmaintext 02D2                   ?___bmul 0070  
                 ?___wmul 0070                   ?_gate_1 0070                 ?_Write_IC 0070  
                 _LCD_CMD 0E50                __stringtab 0003                   ___lwdiv 0F29  
                 ___lwmod 0EAD                ??_Write_IC 007D          ??_LCD_Set_Cursor 0075  
                 __ptext1 0FB2                   __ptext2 0103                   __ptext3 03E6  
                 __ptext4 016A                   __ptext5 01F8                   __ptext6 0EAD  
                 __ptext7 0F29                   __ptext8 0E6A                   __ptext9 0E24  
                 _dpowers 001F                 _LCD_Clear 0DF6                   _sprintf 01F8  
    end_of_initialization 07FC                   print@no 002F                LCD_CMD@CMD 0073  
              ?_LCD_Clear 0070         LCD_Write_String@i 007B          ??_LCD_Write_Char 0071  
          __end_of_Mode_4 066A            __end_of_Mode_6 07E8            __end_of___bmul 0E39  
          __end_of___wmul 00B4          _LCD_Write_String 0EE7            __end_of_gate_1 0E8B  
     start_initialization 07E8                  ??_Mode_4 0076                  ??_Mode_6 0076  
                ??___bmul 0071                  ??___wmul 0074                init_fetch0 0E11  
                ??_gate_1 0070               __pdataBANK0 0045                  ?_LCD_CMD 0070  
               ___latbits 0002             __pcstackBANK0 0020               ??_LCD_Clear 0074  
             sprintf@flag 0027               sprintf@prec 0028          ___lwdiv@dividend 0072  
                ?___lwdiv 0070                  ?___lwmod 0077                 __pstrings 0003  
        ___lwdiv@quotient 0074                  ?_sprintf 0020                  _LCD_DATA 0E8B  
                _LCD_Init 0103            ___wmul@product 0074               __stringbase 0012  
       ___wmul@multiplier 0070  __end_of_LCD_Write_String 0F29       LCD_Write_Char@High4 0074  
                _Write_IC 0E39        __end_of__stringtab 0013                sprintf@val 0029  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0076                  __ptext10 0E39  
                __ptext11 0EE7                  __ptext12 00B4                  __ptext13 0F6D  
                __ptext14 0DF6                  __ptext15 0E50                  __ptext16 0E8B  
                __ptext17 066A                  __ptext18 0519                  __ptext19 008F  
     LCD_Set_Cursor@High4 0078        LCD_Write_Char@Data 0075        LCD_Write_Char@Low4 0073  
                init_ram0 0E15                 sprintf@ap 0026                 sprintf@sp 002B  
        ___lwmod@dividend 0079                 stringcode 000D                  print@num 003A  
      LCD_Set_Cursor@Low4 0077        LCD_Set_Cursor@Temp 0079                  sprintf@c 002C  
                sprintf@f 0020              LCD_DATA@Data 0070           ___lwmod@divisor 0077  
         ___lwmod@counter 007B                  stringdir 000D                  stringtab 0003  
            print@charNum 0037  
